

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 16 02:36:14 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000FE0                     bsr             equ	4064
    78   000FE9                     fsr0            equ	4073
    79   000FEA                     fsr0h           equ	4074
    80   000FE9                     fsr0l           equ	4073
    81   000FE1                     fsr1            equ	4065
    82   000FE2                     fsr1h           equ	4066
    83   000FE1                     fsr1l           equ	4065
    84   000FD9                     fsr2            equ	4057
    85   000FDA                     fsr2h           equ	4058
    86   000FD9                     fsr2l           equ	4057
    87   000FEF                     indf0           equ	4079
    88   000FE7                     indf1           equ	4071
    89   000FDF                     indf2           equ	4063
    90   000FF2                     intcon          equ	4082
    91   000000                     nvmcon          equ	0
    92   000FF9                     pcl             equ	4089
    93   000FFA                     pclath          equ	4090
    94   000FFB                     pclatu          equ	4091
    95   000FEB                     plusw0          equ	4075
    96   000FE3                     plusw1          equ	4067
    97   000FDB                     plusw2          equ	4059
    98   000FED                     postdec0        equ	4077
    99   000FE5                     postdec1        equ	4069
   100   000FDD                     postdec2        equ	4061
   101   000FEE                     postinc0        equ	4078
   102   000FE6                     postinc1        equ	4070
   103   000FDE                     postinc2        equ	4062
   104   000FEC                     preinc0         equ	4076
   105   000FE4                     preinc1         equ	4068
   106   000FDC                     preinc2         equ	4060
   107   000FF3                     prod            equ	4083
   108   000FF4                     prodh           equ	4084
   109   000FF3                     prodl           equ	4083
   110   000FD8                     status          equ	4056
   111   000FF5                     tablat          equ	4085
   112   000FF6                     tblptr          equ	4086
   113   000FF7                     tblptrh         equ	4087
   114   000FF6                     tblptrl         equ	4086
   115   000FF8                     tblptru         equ	4088
   116   000FFD                     tosl            equ	4093
   117   000FE8                     wreg            equ	4072
   118   000F80                     PORTA           equ	3968	;# 
   119   000F81                     PORTB           equ	3969	;# 
   120   000F82                     PORTC           equ	3970	;# 
   121   000F83                     PORTD           equ	3971	;# 
   122   000F84                     PORTE           equ	3972	;# 
   123   000F89                     LATA            equ	3977	;# 
   124   000F8A                     LATB            equ	3978	;# 
   125   000F8B                     LATC            equ	3979	;# 
   126   000F8C                     LATD            equ	3980	;# 
   127   000F8D                     LATE            equ	3981	;# 
   128   000F92                     TRISA           equ	3986	;# 
   129   000F92                     DDRA            equ	3986	;# 
   130   000F93                     TRISB           equ	3987	;# 
   131   000F93                     DDRB            equ	3987	;# 
   132   000F94                     TRISC           equ	3988	;# 
   133   000F94                     DDRC            equ	3988	;# 
   134   000F95                     TRISD           equ	3989	;# 
   135   000F95                     DDRD            equ	3989	;# 
   136   000F96                     TRISE           equ	3990	;# 
   137   000F96                     DDRE            equ	3990	;# 
   138   000F9B                     OSCTUNE         equ	3995	;# 
   139   000F9D                     PIE1            equ	3997	;# 
   140   000F9E                     PIR1            equ	3998	;# 
   141   000F9F                     IPR1            equ	3999	;# 
   142   000FA0                     PIE2            equ	4000	;# 
   143   000FA1                     PIR2            equ	4001	;# 
   144   000FA2                     IPR2            equ	4002	;# 
   145   000FA6                     EECON1          equ	4006	;# 
   146   000FA7                     EECON2          equ	4007	;# 
   147   000FA8                     EEDATA          equ	4008	;# 
   148   000FA9                     EEADR           equ	4009	;# 
   149   000FAB                     RCSTA           equ	4011	;# 
   150   000FAB                     RCSTA1          equ	4011	;# 
   151   000FAC                     TXSTA           equ	4012	;# 
   152   000FAC                     TXSTA1          equ	4012	;# 
   153   000FAD                     TXREG           equ	4013	;# 
   154   000FAD                     TXREG1          equ	4013	;# 
   155   000FAE                     RCREG           equ	4014	;# 
   156   000FAE                     RCREG1          equ	4014	;# 
   157   000FAF                     SPBRG           equ	4015	;# 
   158   000FAF                     SPBRG1          equ	4015	;# 
   159   000FB0                     SPBRGH          equ	4016	;# 
   160   000FB1                     T3CON           equ	4017	;# 
   161   000FB2                     TMR3            equ	4018	;# 
   162   000FB2                     TMR3L           equ	4018	;# 
   163   000FB3                     TMR3H           equ	4019	;# 
   164   000FB4                     CMCON           equ	4020	;# 
   165   000FB5                     CVRCON          equ	4021	;# 
   166   000FB6                     ECCP1AS         equ	4022	;# 
   167   000FB6                     ECCPAS          equ	4022	;# 
   168   000FB7                     PWM1CON         equ	4023	;# 
   169   000FB7                     ECCP1DEL        equ	4023	;# 
   170   000FB8                     BAUDCON         equ	4024	;# 
   171   000FB8                     BAUDCTL         equ	4024	;# 
   172   000FBA                     CCP2CON         equ	4026	;# 
   173   000FBB                     CCPR2           equ	4027	;# 
   174   000FBB                     CCPR2L          equ	4027	;# 
   175   000FBC                     CCPR2H          equ	4028	;# 
   176   000FBD                     CCP1CON         equ	4029	;# 
   177   000FBE                     CCPR1           equ	4030	;# 
   178   000FBE                     CCPR1L          equ	4030	;# 
   179   000FBF                     CCPR1H          equ	4031	;# 
   180   000FC0                     ADCON2          equ	4032	;# 
   181   000FC1                     ADCON1          equ	4033	;# 
   182   000FC2                     ADCON0          equ	4034	;# 
   183   000FC3                     ADRES           equ	4035	;# 
   184   000FC3                     ADRESL          equ	4035	;# 
   185   000FC4                     ADRESH          equ	4036	;# 
   186   000FC5                     SSPCON2         equ	4037	;# 
   187   000FC6                     SSPCON1         equ	4038	;# 
   188   000FC7                     SSPSTAT         equ	4039	;# 
   189   000FC8                     SSPADD          equ	4040	;# 
   190   000FC9                     SSPBUF          equ	4041	;# 
   191   000FCA                     T2CON           equ	4042	;# 
   192   000FCB                     PR2             equ	4043	;# 
   193   000FCB                     MEMCON          equ	4043	;# 
   194   000FCC                     TMR2            equ	4044	;# 
   195   000FCD                     T1CON           equ	4045	;# 
   196   000FCE                     TMR1            equ	4046	;# 
   197   000FCE                     TMR1L           equ	4046	;# 
   198   000FCF                     TMR1H           equ	4047	;# 
   199   000FD0                     RCON            equ	4048	;# 
   200   000FD1                     WDTCON          equ	4049	;# 
   201   000FD2                     HLVDCON         equ	4050	;# 
   202   000FD2                     LVDCON          equ	4050	;# 
   203   000FD3                     OSCCON          equ	4051	;# 
   204   000FD5                     T0CON           equ	4053	;# 
   205   000FD6                     TMR0            equ	4054	;# 
   206   000FD6                     TMR0L           equ	4054	;# 
   207   000FD7                     TMR0H           equ	4055	;# 
   208   000FD8                     STATUS          equ	4056	;# 
   209   000FD9                     FSR2            equ	4057	;# 
   210   000FD9                     FSR2L           equ	4057	;# 
   211   000FDA                     FSR2H           equ	4058	;# 
   212   000FDB                     PLUSW2          equ	4059	;# 
   213   000FDC                     PREINC2         equ	4060	;# 
   214   000FDD                     POSTDEC2        equ	4061	;# 
   215   000FDE                     POSTINC2        equ	4062	;# 
   216   000FDF                     INDF2           equ	4063	;# 
   217   000FE0                     BSR             equ	4064	;# 
   218   000FE1                     FSR1            equ	4065	;# 
   219   000FE1                     FSR1L           equ	4065	;# 
   220   000FE2                     FSR1H           equ	4066	;# 
   221   000FE3                     PLUSW1          equ	4067	;# 
   222   000FE4                     PREINC1         equ	4068	;# 
   223   000FE5                     POSTDEC1        equ	4069	;# 
   224   000FE6                     POSTINC1        equ	4070	;# 
   225   000FE7                     INDF1           equ	4071	;# 
   226   000FE8                     WREG            equ	4072	;# 
   227   000FE9                     FSR0            equ	4073	;# 
   228   000FE9                     FSR0L           equ	4073	;# 
   229   000FEA                     FSR0H           equ	4074	;# 
   230   000FEB                     PLUSW0          equ	4075	;# 
   231   000FEC                     PREINC0         equ	4076	;# 
   232   000FED                     POSTDEC0        equ	4077	;# 
   233   000FEE                     POSTINC0        equ	4078	;# 
   234   000FEF                     INDF0           equ	4079	;# 
   235   000FF0                     INTCON3         equ	4080	;# 
   236   000FF1                     INTCON2         equ	4081	;# 
   237   000FF2                     INTCON          equ	4082	;# 
   238   000FF3                     PROD            equ	4083	;# 
   239   000FF3                     PRODL           equ	4083	;# 
   240   000FF4                     PRODH           equ	4084	;# 
   241   000FF5                     TABLAT          equ	4085	;# 
   242   000FF6                     TBLPTR          equ	4086	;# 
   243   000FF6                     TBLPTRL         equ	4086	;# 
   244   000FF7                     TBLPTRH         equ	4087	;# 
   245   000FF8                     TBLPTRU         equ	4088	;# 
   246   000FF9                     PCLAT           equ	4089	;# 
   247   000FF9                     PC              equ	4089	;# 
   248   000FF9                     PCL             equ	4089	;# 
   249   000FFA                     PCLATH          equ	4090	;# 
   250   000FFB                     PCLATU          equ	4091	;# 
   251   000FFC                     STKPTR          equ	4092	;# 
   252   000FFD                     TOS             equ	4093	;# 
   253   000FFD                     TOSL            equ	4093	;# 
   254   000FFE                     TOSH            equ	4094	;# 
   255   000FFF                     TOSU            equ	4095	;# 
   256   007D5C                     _CREN           set	32092
   257   007CF5                     _RCIF           set	31989
   258   000FCA                     _T2CON          set	4042
   259   000F9F                     _IPR1bits       set	3999
   260   000FAF                     _SPBRG          set	4015
   261   000FB8                     _BAUDCONbits    set	4024
   262   000FD0                     _RCONbits       set	4048
   263   000F9E                     _PIR1bits       set	3998
   264   000F9D                     _PIE1bits       set	3997
   265   000FF2                     _INTCONbits     set	4082
   266   000F8B                     _LATC           set	3979
   267   000F89                     _LATA           set	3977
   268   000F94                     _TRISC          set	3988
   269   000F93                     _TRISB          set	3987
   270   000F92                     _TRISA          set	3986
   271   000F94                     _TRISCbits      set	3988
   272   000FCB                     _PR2            set	4043
   273   000FBD                     _CCP1CONbits    set	4029
   274   000FCA                     _T2CONbits      set	4042
   275   000FC0                     _ADCON2bits     set	4032
   276   000FC2                     _ADCON0bits     set	4034
   277   000FC1                     _ADCON1bits     set	4033
   278   000F92                     _TRISAbits      set	3986
   279   000FD3                     _OSCCONbits     set	4051
   280   000FAB                     _RCSTAbits      set	4011
   281   000FAE                     _RCREG          set	4014
   282   000FAD                     _TXREG          set	4013
   283   000FAC                     _TXSTAbits      set	4012
   284                           
   285                           	psect	smallconst
   286   000600                     __psmallconst:
   287                           	callstack 0
   288   000600  00                 	db	0
   289   000601  49                 	db	73	;'I'
   290   000602  6E                 	db	110	;'n'
   291   000603  70                 	db	112	;'p'
   292   000604  75                 	db	117	;'u'
   293   000605  74                 	db	116	;'t'
   294   000606  20                 	db	32
   295   000607  53                 	db	83	;'S'
   296   000608  74                 	db	116	;'t'
   297   000609  65                 	db	101	;'e'
   298   00060A  70                 	db	112	;'p'
   299   00060B  20                 	db	32
   300   00060C  4C                 	db	76	;'L'
   301   00060D  65                 	db	101	;'e'
   302   00060E  6E                 	db	110	;'n'
   303   00060F  67                 	db	103	;'g'
   304   000610  74                 	db	116	;'t'
   305   000611  68                 	db	104	;'h'
   306   000612  3A                 	db	58	;':'
   307   000613  20                 	db	32
   308   000614  00                 	db	0
   309   000615                     STR_2:
   310   000615  54                 	db	84	;'T'
   311   000616  6F                 	db	111	;'o'
   312   000617  74                 	db	116	;'t'
   313   000618  61                 	db	97	;'a'
   314   000619  6C                 	db	108	;'l'
   315   00061A  20                 	db	32
   316   00061B  4C                 	db	76	;'L'
   317   00061C  65                 	db	101	;'e'
   318   00061D  6E                 	db	110	;'n'
   319   00061E  67                 	db	103	;'g'
   320   00061F  74                 	db	116	;'t'
   321   000620  68                 	db	104	;'h'
   322   000621  3A                 	db	58	;':'
   323   000622  20                 	db	32
   324   000623  00                 	db	0
   325   000622                     STR_3           equ	STR_2+13
   326   000622                     STR_4           equ	STR_2+13
   327   000622                     STR_5           equ	STR_2+13
   328   000624  00                 	db	0	; dummy byte at the end
   329   000002                     __activetblptr  equ	2
   330                           
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334   001000                     __pcinit:
   335                           	callstack 0
   336   001000                     start_initialization:
   337                           	callstack 0
   338   001000                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Clear objects allocated to BANK3 (100 bytes)
   342   001000  EE03  F000         	lfsr	0,__pbssBANK3
   343   001004  0E64               	movlw	100
   344   001006                     clear_0:
   345   001006  6AEE               	clrf	postinc0,c
   346   001008  06E8               	decf	wreg,f,c
   347   00100A  E1FD               	bnz	clear_0
   348                           
   349                           ; Clear objects allocated to BANK2 (200 bytes)
   350   00100C  EE02  F000         	lfsr	0,__pbssBANK2
   351   001010  0EC8               	movlw	200
   352   001012                     clear_1:
   353   001012  6AEE               	clrf	postinc0,c
   354   001014  06E8               	decf	wreg,f,c
   355   001016  E1FD               	bnz	clear_1
   356                           
   357                           ; Clear objects allocated to COMRAM (7 bytes)
   358   001018  EE00  F01C         	lfsr	0,__pbssCOMRAM
   359   00101C  0E07               	movlw	7
   360   00101E                     clear_2:
   361   00101E  6AEE               	clrf	postinc0,c
   362   001020  06E8               	decf	wreg,f,c
   363   001022  E1FD               	bnz	clear_2
   364   001024                     end_of_initialization:
   365                           	callstack 0
   366   001024                     __end_of__initialization:
   367                           	callstack 0
   368   001024  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   369   001026  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   370   001028  0E00               	movlw	low (__Lmediumconst shr (0+16))
   371   00102A  6EF8               	movwf	tblptru,c
   372   00102C  0100               	movlb	0
   373   00102E  EF30  F008         	goto	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMRAM
   376   00001C                     __pbssCOMRAM:
   377                           	callstack 0
   378   00001C                     strtok@p:
   379                           	callstack 0
   380   00001C                     	ds	2
   381   00001E                     _cnt:
   382                           	callstack 0
   383   00001E                     	ds	2
   384   000020                     _buffer_size:
   385                           	callstack 0
   386   000020                     	ds	2
   387   000022                     _btn_interr:
   388                           	callstack 0
   389   000022                     	ds	1
   390                           
   391                           	psect	bssBANK2
   392   000200                     __pbssBANK2:
   393                           	callstack 0
   394   000200                     	ds	100
   395   000264                     _buffer:
   396                           	callstack 0
   397   000264                     	ds	100
   398                           
   399                           	psect	bssBANK3
   400   000300                     __pbssBANK3:
   401                           	callstack 0
   402   000300                     	ds	100
   403                           
   404                           	psect	cstackBANK1
   405   000100                     __pcstackBANK1:
   406                           	callstack 0
   407   000100                     ParsingData@str:
   408                           	callstack 0
   409                           
   410                           ; 100 bytes @ 0x0
   411   000100                     	ds	100
   412   000164                     ParsingData@input:
   413                           	callstack 0
   414                           
   415                           ; 100 bytes @ 0x64
   416   000164                     	ds	100
   417   0001C8                     ParsingData@step:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0xC8
   421   0001C8                     	ds	2
   422   0001CA                     ParsingData@heartRate:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xCA
   426   0001CA                     	ds	2
   427   0001CC                     ParsingData@temp:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xCC
   431   0001CC                     	ds	2
   432   0001CE                     ParsingData@token:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xCE
   436   0001CE                     	ds	2
   437                           
   438                           	psect	cstackBANK0
   439   000080                     __pcstackBANK0:
   440                           	callstack 0
   441   000080                     print_number@tmp:
   442                           	callstack 0
   443                           
   444                           ; 100 bytes @ 0x0
   445   000080                     	ds	100
   446   0000E4                     print_number@i:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x64
   450   0000E4                     	ds	2
   451                           
   452                           	psect	cstackCOMRAM
   453   000001                     __pcstackCOMRAM:
   454                           	callstack 0
   455   000001                     ??_H_ISR:
   456                           
   457                           ; 1 bytes @ 0x0
   458   000001                     	ds	1
   459   000002                     i1putch@data:
   460                           	callstack 0
   461   000002                     
   462                           ; 1 bytes @ 0x1
   463   000002                     	ds	1
   464   000003                     ??_MyusartRead:
   465                           
   466                           ; 1 bytes @ 0x2
   467   000003                     	ds	1
   468   000004                     MyusartRead@data:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x3
   472   000004                     	ds	1
   473   000005                     ??_Lo_ISR:
   474                           
   475                           ; 1 bytes @ 0x4
   476   000005                     	ds	5
   477   00000A                     ?_strlen:
   478                           	callstack 0
   479   00000A                     ?_atoi:
   480                           	callstack 0
   481   00000A                     ?___awdiv:
   482                           	callstack 0
   483   00000A                     ?___awmod:
   484                           	callstack 0
   485   00000A                     putch@data:
   486                           	callstack 0
   487   00000A                     reverse@first:
   488                           	callstack 0
   489   00000A                     strlen@s:
   490                           	callstack 0
   491   00000A                     strchr@s:
   492                           	callstack 0
   493   00000A                     ClearBuffer@i:
   494                           	callstack 0
   495   00000A                     ___awdiv@dividend:
   496                           	callstack 0
   497   00000A                     ___awmod@dividend:
   498                           	callstack 0
   499   00000A                     atoi@s:
   500                           	callstack 0
   501   00000A                     strcpy@dest:
   502                           	callstack 0
   503   00000A                     
   504                           ; 1 bytes @ 0x9
   505   00000A                     	ds	1
   506   00000B                     reverse@last:
   507                           	callstack 0
   508   00000B                     strchr@c:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512   00000B                     	ds	1
   513   00000C                     reverse@tmp:
   514                           	callstack 0
   515   00000C                     strlen@a:
   516                           	callstack 0
   517   00000C                     ___awdiv@divisor:
   518                           	callstack 0
   519   00000C                     ___awmod@divisor:
   520                           	callstack 0
   521   00000C                     strcpy@src:
   522                           	callstack 0
   523   00000C                     ??_atoi:
   524   00000C                     
   525                           ; 1 bytes @ 0xB
   526   00000C                     	ds	1
   527   00000D                     ??_strchr:
   528                           
   529                           ; 1 bytes @ 0xC
   530   00000D                     	ds	1
   531   00000E                     ?_strspn:
   532                           	callstack 0
   533   00000E                     ?_strcspn:
   534                           	callstack 0
   535   00000E                     ___awdiv@counter:
   536                           	callstack 0
   537   00000E                     ___awmod@counter:
   538                           	callstack 0
   539   00000E                     strcspn@s:
   540                           	callstack 0
   541   00000E                     strspn@s:
   542                           	callstack 0
   543   00000E                     ??_strcpy:
   544   00000E                     
   545                           ; 1 bytes @ 0xD
   546   00000E                     	ds	1
   547   00000F                     ___awdiv@sign:
   548                           	callstack 0
   549   00000F                     ___awmod@sign:
   550                           	callstack 0
   551   00000F                     atoi@neg:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0xE
   555   00000F                     	ds	1
   556   000010                     strcspn@c:
   557                           	callstack 0
   558   000010                     strspn@c:
   559                           	callstack 0
   560   000010                     ___awdiv@quotient:
   561                           	callstack 0
   562   000010                     atoi@n:
   563                           	callstack 0
   564   000010                     strcpy@d:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0xF
   568   000010                     	ds	1
   569   000011                     ??_strspn:
   570   000011                     ??_strcspn:
   571                           
   572                           ; 1 bytes @ 0x10
   573   000011                     	ds	1
   574   000012                     ?_GetString:
   575                           	callstack 0
   576   000012                     GetString@str:
   577                           	callstack 0
   578   000012                     itoa@n:
   579                           	callstack 0
   580   000012                     strcspn@i:
   581                           	callstack 0
   582   000012                     strspn@i:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x11
   586   000012                     	ds	2
   587   000014                     ?_strtok:
   588                           	callstack 0
   589   000014                     itoa@s:
   590                           	callstack 0
   591   000014                     strtok@s:
   592                           	callstack 0
   593   000014                     
   594                           ; 1 bytes @ 0x13
   595   000014                     	ds	1
   596   000015                     ??_itoa:
   597                           
   598                           ; 1 bytes @ 0x14
   599   000015                     	ds	1
   600   000016                     strtok@sep:
   601                           	callstack 0
   602   000016                     itoa@sign:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x15
   606   000016                     	ds	1
   607   000017                     
   608                           ; 1 bytes @ 0x16
   609   000017                     	ds	1
   610   000018                     itoa@i:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x17
   614   000018                     	ds	2
   615   00001A                     print_number@num:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x19
   619   00001A                     	ds	2
   620   00001C                     
   621                           ; 1 bytes @ 0x1B
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 337 in file "newmain.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  str           100    0        unsigned char [100]
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels required when called: 8
   647 ;; This function calls:
   648 ;;		_ClearBuffer
   649 ;;		_Initialize
   650 ;;		_ParsingData
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657   001060                     __ptext0:
   658                           	callstack 0
   659   001060                     _main:
   660                           	callstack 23
   661   001060                     
   662                           ;newmain.c: 338:     Initialize();
   663   001060  ECBC  F005         	call	_Initialize	;wreg free
   664   001064                     
   665                           ;newmain.c: 340:     char str[100];;newmain.c: 341:     ClearBuffer();
   666   001064  ECC1  F007         	call	_ClearBuffer	;wreg free
   667   001068                     l1899:
   668                           
   669                           ;newmain.c: 345:         ParsingData();
   670   001068  EC13  F003         	call	_ParsingData	;wreg free
   671   00106C                     
   672                           ;newmain.c: 346:         if (ADCON0bits.GO == 0) ADCON0bits.GO = 1;
   673   00106C  B2C2               	btfsc	194,1,c	;volatile
   674   00106E  EF3B  F008         	goto	u1381
   675   001072  EF3D  F008         	goto	u1380
   676   001076                     u1381:
   677   001076  EF34  F008         	goto	l1899
   678   00107A                     u1380:
   679   00107A  82C2               	bsf	194,1,c	;volatile
   680   00107C  EF34  F008         	goto	l1899
   681   001080  EF36  F000         	goto	start
   682   001084                     __end_of_main:
   683                           	callstack 0
   684                           
   685 ;; *************** function _ParsingData *****************
   686 ;; Defined at:
   687 ;;		line 313 in file "newmain.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  input         100  100[BANK1 ] unsigned char [100]
   692 ;;  token           2  206[BANK1 ] PTR unsigned char 
   693 ;;		 -> NULL(0), ParsingData@input(100), 
   694 ;;  str           100    0[BANK1 ] unsigned char [100]
   695 ;;  temp            2  204[BANK1 ] int 
   696 ;;  heartRate       2  202[BANK1 ] int 
   697 ;;  step            2  200[BANK1 ] int 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   707 ;;      Params:         0       0       0       0       0       0       0
   708 ;;      Locals:         0       0     208       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0
   710 ;;      Totals:         0       0     208       0       0       0       0
   711 ;;Total ram usage:      208 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 7
   714 ;; This function calls:
   715 ;;		_ClearBuffer
   716 ;;		_GetString
   717 ;;		_atoi
   718 ;;		_print_number
   719 ;;		_strcpy
   720 ;;		_strtok
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text1
   727   000626                     __ptext1:
   728                           	callstack 0
   729   000626                     _ParsingData:
   730                           	callstack 23
   731   000626                     
   732                           ;newmain.c: 314:     char str[100];;newmain.c: 315:     ClearBuffer();
   733   000626  ECC1  F007         	call	_ClearBuffer	;wreg free
   734   00062A                     
   735                           ;newmain.c: 316:     int step = -1, heartRate = -1, temp = -1;
   736   00062A  0101               	movlb	1	; () banked
   737   00062C  69C8               	setf	ParsingData@step& (0+255),b
   738   00062E  69C9               	setf	(ParsingData@step+1)& (0+255),b
   739   000630                     
   740                           ; BSR set to: 1
   741   000630  69CA               	setf	ParsingData@heartRate& (0+255),b
   742   000632  69CB               	setf	(ParsingData@heartRate+1)& (0+255),b
   743   000634                     
   744                           ; BSR set to: 1
   745   000634  69CC               	setf	ParsingData@temp& (0+255),b
   746   000636  69CD               	setf	(ParsingData@temp+1)& (0+255),b
   747                           
   748                           ;newmain.c: 317:     while( GetString(str) && ( step == -1 || heartRate == -1 || temp ==
      +                           -1 ) ) {
   749   000638  EF6C  F003         	goto	l1803
   750   00063C                     l1787:
   751                           
   752                           ; BSR set to: 1
   753                           ;newmain.c: 318:         char *token;;newmain.c: 319:         char input[100];;newmain.c
      +                          : 320:         strcpy(input, str);
   754   00063C  0E64               	movlw	low ParsingData@input
   755   00063E  6E0A               	movwf	strcpy@dest^0,c
   756   000640  0E01               	movlw	high ParsingData@input
   757   000642  6E0B               	movwf	(strcpy@dest+1)^0,c
   758   000644  0E00               	movlw	low ParsingData@str
   759   000646  6E0C               	movwf	strcpy@src^0,c
   760   000648  0E01               	movlw	high ParsingData@str
   761   00064A  6E0D               	movwf	(strcpy@src+1)^0,c
   762   00064C  EC2C  F007         	call	_strcpy	;wreg free
   763   000650                     
   764                           ;newmain.c: 321:         ClearBuffer();
   765   000650  ECC1  F007         	call	_ClearBuffer	;wreg free
   766   000654                     
   767                           ;newmain.c: 322:         token = strtok(input, " ");
   768   000654  0E64               	movlw	low ParsingData@input
   769   000656  6E14               	movwf	strtok@s^0,c
   770   000658  0E01               	movlw	high ParsingData@input
   771   00065A  6E15               	movwf	(strtok@s+1)^0,c
   772   00065C  0E22               	movlw	low (STR_2+13)
   773   00065E  6E16               	movwf	strtok@sep^0,c
   774   000660  EC3B  F004         	call	_strtok	;wreg free
   775   000664  C014  F1CE         	movff	?_strtok,ParsingData@token
   776   000668  C015  F1CF         	movff	?_strtok+1,ParsingData@token+1
   777   00066C                     
   778                           ;newmain.c: 323:         step = atoi(token);
   779   00066C  C1CE  F00A         	movff	ParsingData@token,atoi@s
   780   000670  C1CF  F00B         	movff	ParsingData@token+1,atoi@s+1
   781   000674  ECAD  F003         	call	_atoi	;wreg free
   782   000678  C00A  F1C8         	movff	?_atoi,ParsingData@step
   783   00067C  C00B  F1C9         	movff	?_atoi+1,ParsingData@step+1
   784   000680                     
   785                           ;newmain.c: 325:         token = strtok(((void*)0), " ");
   786   000680  0E00               	movlw	0
   787   000682  6E14               	movwf	strtok@s^0,c
   788   000684  0E00               	movlw	0
   789   000686  6E15               	movwf	(strtok@s+1)^0,c
   790   000688  0E22               	movlw	low (STR_2+13)
   791   00068A  6E16               	movwf	strtok@sep^0,c
   792   00068C  EC3B  F004         	call	_strtok	;wreg free
   793   000690  C014  F1CE         	movff	?_strtok,ParsingData@token
   794   000694  C015  F1CF         	movff	?_strtok+1,ParsingData@token+1
   795   000698                     
   796                           ;newmain.c: 326:         heartRate = atoi(token);
   797   000698  C1CE  F00A         	movff	ParsingData@token,atoi@s
   798   00069C  C1CF  F00B         	movff	ParsingData@token+1,atoi@s+1
   799   0006A0  ECAD  F003         	call	_atoi	;wreg free
   800   0006A4  C00A  F1CA         	movff	?_atoi,ParsingData@heartRate
   801   0006A8  C00B  F1CB         	movff	?_atoi+1,ParsingData@heartRate+1
   802   0006AC                     
   803                           ;newmain.c: 328:         token = strtok(((void*)0), " ");
   804   0006AC  0E00               	movlw	0
   805   0006AE  6E14               	movwf	strtok@s^0,c
   806   0006B0  0E00               	movlw	0
   807   0006B2  6E15               	movwf	(strtok@s+1)^0,c
   808   0006B4  0E22               	movlw	low (STR_2+13)
   809   0006B6  6E16               	movwf	strtok@sep^0,c
   810   0006B8  EC3B  F004         	call	_strtok	;wreg free
   811   0006BC  C014  F1CE         	movff	?_strtok,ParsingData@token
   812   0006C0  C015  F1CF         	movff	?_strtok+1,ParsingData@token+1
   813   0006C4                     
   814                           ;newmain.c: 329:         temp = atoi(token);
   815   0006C4  C1CE  F00A         	movff	ParsingData@token,atoi@s
   816   0006C8  C1CF  F00B         	movff	ParsingData@token+1,atoi@s+1
   817   0006CC  ECAD  F003         	call	_atoi	;wreg free
   818   0006D0  C00A  F1CC         	movff	?_atoi,ParsingData@temp
   819   0006D4  C00B  F1CD         	movff	?_atoi+1,ParsingData@temp+1
   820   0006D8                     l1803:
   821                           
   822                           ;newmain.c: 317:     while( GetString(str) && ( step == -1 || heartRate == -1 || temp ==
      +                           -1 ) ) {
   823   0006D8  0E00               	movlw	low ParsingData@str
   824   0006DA  6E12               	movwf	GetString@str^0,c
   825   0006DC  0E01               	movlw	high ParsingData@str
   826   0006DE  6E13               	movwf	(GetString@str+1)^0,c
   827   0006E0  EC05  F006         	call	_GetString	;wreg free
   828   0006E4  5012               	movf	?_GetString^0,w,c
   829   0006E6  1013               	iorwf	(?_GetString+1)^0,w,c
   830   0006E8  B4D8               	btfsc	status,2,c
   831   0006EA  EF79  F003         	goto	u1221
   832   0006EE  EF7B  F003         	goto	u1220
   833   0006F2                     u1221:
   834   0006F2  EF9A  F003         	goto	l1811
   835   0006F6                     u1220:
   836   0006F6  0101               	movlb	1	; () banked
   837   0006F8  29C8               	incf	ParsingData@step& (0+255),w,b
   838   0006FA  E108               	bnz	u1230
   839   0006FC  29C9               	incf	(ParsingData@step+1)& (0+255),w,b
   840   0006FE  B4D8               	btfsc	status,2,c
   841   000700  EF84  F003         	goto	u1231
   842   000704  EF86  F003         	goto	u1230
   843   000708                     u1231:
   844   000708  EF1E  F003         	goto	l1787
   845   00070C                     u1230:
   846   00070C                     
   847                           ; BSR set to: 1
   848   00070C  29CA               	incf	ParsingData@heartRate& (0+255),w,b
   849   00070E  E108               	bnz	u1240
   850   000710  29CB               	incf	(ParsingData@heartRate+1)& (0+255),w,b
   851   000712  B4D8               	btfsc	status,2,c
   852   000714  EF8E  F003         	goto	u1241
   853   000718  EF90  F003         	goto	u1240
   854   00071C                     u1241:
   855   00071C  EF1E  F003         	goto	l1787
   856   000720                     u1240:
   857   000720                     
   858                           ; BSR set to: 1
   859   000720  29CC               	incf	ParsingData@temp& (0+255),w,b
   860   000722  E108               	bnz	u1250
   861   000724  29CD               	incf	(ParsingData@temp+1)& (0+255),w,b
   862   000726  B4D8               	btfsc	status,2,c
   863   000728  EF98  F003         	goto	u1251
   864   00072C  EF9A  F003         	goto	u1250
   865   000730                     u1251:
   866   000730  EF1E  F003         	goto	l1787
   867   000734                     u1250:
   868   000734                     l1811:
   869                           
   870                           ;newmain.c: 331:     print_number(step);
   871   000734  C1C8  F01A         	movff	ParsingData@step,print_number@num
   872   000738  C1C9  F01B         	movff	ParsingData@step+1,print_number@num+1
   873   00073C  ECFC  F006         	call	_print_number	;wreg free
   874                           
   875                           ;newmain.c: 332:     print_number(heartRate);
   876   000740  C1CA  F01A         	movff	ParsingData@heartRate,print_number@num
   877   000744  C1CB  F01B         	movff	ParsingData@heartRate+1,print_number@num+1
   878   000748  ECFC  F006         	call	_print_number	;wreg free
   879                           
   880                           ;newmain.c: 333:     print_number(temp);
   881   00074C  C1CC  F01A         	movff	ParsingData@temp,print_number@num
   882   000750  C1CD  F01B         	movff	ParsingData@temp+1,print_number@num+1
   883   000754  ECFC  F006         	call	_print_number	;wreg free
   884   000758  0012               	return		;funcret
   885   00075A                     __end_of_ParsingData:
   886                           	callstack 0
   887                           
   888 ;; *************** function _strtok *****************
   889 ;; Defined at:
   890 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strtok.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  s               2   19[COMRAM] PTR unsigned char 
   893 ;;		 -> NULL(0), ParsingData@input(100), 
   894 ;;  sep             1   21[COMRAM] PTR const unsigned char 
   895 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  2   19[COMRAM] PTR unsigned char 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   907 ;;      Params:         3       0       0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0
   910 ;;      Totals:         3       0       0       0       0       0       0
   911 ;;Total ram usage:        3 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 6
   914 ;; This function calls:
   915 ;;		_strcspn
   916 ;;		_strspn
   917 ;; This function is called by:
   918 ;;		_ParsingData
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text2
   923   000876                     __ptext2:
   924                           	callstack 0
   925   000876                     _strtok:
   926                           	callstack 23
   927   000876  5014               	movf	strtok@s^0,w,c
   928   000878  1015               	iorwf	(strtok@s+1)^0,w,c
   929   00087A  A4D8               	btfss	status,2,c
   930   00087C  EF42  F004         	goto	u1051
   931   000880  EF44  F004         	goto	u1050
   932   000884                     u1051:
   933   000884  EF57  F004         	goto	l1707
   934   000888                     u1050:
   935   000888  C01C  F014         	movff	strtok@p,strtok@s
   936   00088C  C01D  F015         	movff	strtok@p+1,strtok@s+1
   937   000890  5014               	movf	strtok@s^0,w,c
   938   000892  1015               	iorwf	(strtok@s+1)^0,w,c
   939   000894  A4D8               	btfss	status,2,c
   940   000896  EF4F  F004         	goto	u1061
   941   00089A  EF51  F004         	goto	u1060
   942   00089E                     u1061:
   943   00089E  EF57  F004         	goto	l1707
   944   0008A2                     u1060:
   945   0008A2  0E00               	movlw	0
   946   0008A4  6E14               	movwf	?_strtok^0,c
   947   0008A6  0E00               	movlw	0
   948   0008A8  6E15               	movwf	(?_strtok+1)^0,c
   949   0008AA  EFA4  F004         	goto	l912
   950   0008AE                     l1707:
   951   0008AE  C014  F00E         	movff	strtok@s,strspn@s
   952   0008B2  C015  F00F         	movff	strtok@s+1,strspn@s+1
   953   0008B6  C016  F010         	movff	strtok@sep,strspn@c
   954   0008BA  EC9C  F006         	call	_strspn	;wreg free
   955   0008BE  500E               	movf	?_strspn^0,w,c
   956   0008C0  2614               	addwf	strtok@s^0,f,c
   957   0008C2  500F               	movf	(?_strspn+1)^0,w,c
   958   0008C4  2215               	addwfc	(strtok@s+1)^0,f,c
   959   0008C6  C014  FFD9         	movff	strtok@s,fsr2l
   960   0008CA  C015  FFDA         	movff	strtok@s+1,fsr2h
   961   0008CE  50DF               	movf	indf2,w,c
   962   0008D0  A4D8               	btfss	status,2,c
   963   0008D2  EF6D  F004         	goto	u1071
   964   0008D6  EF6F  F004         	goto	u1070
   965   0008DA                     u1071:
   966   0008DA  EF79  F004         	goto	l1715
   967   0008DE                     u1070:
   968   0008DE  0E00               	movlw	0
   969   0008E0  6E1C               	movwf	strtok@p^0,c
   970   0008E2  0E00               	movlw	0
   971   0008E4  6E1D               	movwf	(strtok@p+1)^0,c
   972   0008E6  C01C  F014         	movff	strtok@p,?_strtok
   973   0008EA  C01D  F015         	movff	strtok@p+1,?_strtok+1
   974   0008EE  EFA4  F004         	goto	l912
   975   0008F2                     l1715:
   976   0008F2  C014  F00E         	movff	strtok@s,strcspn@s
   977   0008F6  C015  F00F         	movff	strtok@s+1,strcspn@s+1
   978   0008FA  C016  F010         	movff	strtok@sep,strcspn@c
   979   0008FE  ECCC  F006         	call	_strcspn	;wreg free
   980   000902  500E               	movf	?_strcspn^0,w,c
   981   000904  2414               	addwf	strtok@s^0,w,c
   982   000906  6E1C               	movwf	strtok@p^0,c
   983   000908  500F               	movf	(?_strcspn+1)^0,w,c
   984   00090A  2015               	addwfc	(strtok@s+1)^0,w,c
   985   00090C  6E1D               	movwf	(strtok@p+1)^0,c
   986   00090E  C01C  FFD9         	movff	strtok@p,fsr2l
   987   000912  C01D  FFDA         	movff	strtok@p+1,fsr2h
   988   000916  50DF               	movf	indf2,w,c
   989   000918  B4D8               	btfsc	status,2,c
   990   00091A  EF91  F004         	goto	u1081
   991   00091E  EF93  F004         	goto	u1080
   992   000922                     u1081:
   993   000922  EF9C  F004         	goto	l1723
   994   000926                     u1080:
   995   000926  C01C  FFD9         	movff	strtok@p,fsr2l
   996   00092A  C01D  FFDA         	movff	strtok@p+1,fsr2h
   997   00092E  6ADF               	clrf	indf2,c
   998   000930  4A1C               	infsnz	strtok@p^0,f,c
   999   000932  2A1D               	incf	(strtok@p+1)^0,f,c
  1000   000934  EFA0  F004         	goto	l915
  1001   000938                     l1723:
  1002   000938  0E00               	movlw	0
  1003   00093A  6E1C               	movwf	strtok@p^0,c
  1004   00093C  0E00               	movlw	0
  1005   00093E  6E1D               	movwf	(strtok@p+1)^0,c
  1006   000940                     l915:
  1007   000940  C014  F014         	movff	strtok@s,?_strtok
  1008   000944  C015  F015         	movff	strtok@s+1,?_strtok+1
  1009   000948                     l912:
  1010   000948  0012               	return		;funcret
  1011   00094A                     __end_of_strtok:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _strspn *****************
  1015 ;; Defined at:
  1016 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strspn.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1019 ;;		 -> NULL(0), ParsingData@input(100), 
  1020 ;;  c               1   15[COMRAM] PTR const unsigned char 
  1021 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  i               2   17[COMRAM] unsigned int 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  2   13[COMRAM] unsigned int 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1033 ;;      Params:         3       0       0       0       0       0       0
  1034 ;;      Locals:         2       0       0       0       0       0       0
  1035 ;;      Temps:          1       0       0       0       0       0       0
  1036 ;;      Totals:         6       0       0       0       0       0       0
  1037 ;;Total ram usage:        6 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		_strchr
  1042 ;; This function is called by:
  1043 ;;		_strtok
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text3
  1048   000D38                     __ptext3:
  1049                           	callstack 0
  1050   000D38                     _strspn:
  1051                           	callstack 23
  1052   000D38  0E00               	movlw	0
  1053   000D3A  6E13               	movwf	(strspn@i+1)^0,c
  1054   000D3C  0E00               	movlw	0
  1055   000D3E  6E12               	movwf	strspn@i^0,c
  1056   000D40  EFA6  F006         	goto	l1655
  1057   000D44                     l1653:
  1058   000D44  4A0E               	infsnz	strspn@s^0,f,c
  1059   000D46  2A0F               	incf	(strspn@s+1)^0,f,c
  1060   000D48  4A12               	infsnz	strspn@i^0,f,c
  1061   000D4A  2A13               	incf	(strspn@i+1)^0,f,c
  1062   000D4C                     l1655:
  1063   000D4C  C00E  FFD9         	movff	strspn@s,fsr2l
  1064   000D50  C00F  FFDA         	movff	strspn@s+1,fsr2h
  1065   000D54  50DF               	movf	indf2,w,c
  1066   000D56  B4D8               	btfsc	status,2,c
  1067   000D58  EFB0  F006         	goto	u991
  1068   000D5C  EFB2  F006         	goto	u990
  1069   000D60                     u991:
  1070   000D60  EFC7  F006         	goto	l940
  1071   000D64                     u990:
  1072   000D64  C010  F00A         	movff	strspn@c,strchr@s
  1073   000D68  C00E  FFD9         	movff	strspn@s,fsr2l
  1074   000D6C  C00F  FFDA         	movff	strspn@s+1,fsr2h
  1075   000D70  50DF               	movf	indf2,w,c
  1076   000D72  6E11               	movwf	??_strspn^0,c
  1077   000D74  5011               	movf	??_strspn^0,w,c
  1078   000D76  6E0B               	movwf	strchr@c^0,c
  1079   000D78  6A0C               	clrf	(strchr@c+1)^0,c
  1080   000D7A  EC7D  F007         	call	_strchr	;wreg free
  1081   000D7E  0900               	iorlw	0
  1082   000D80  A4D8               	btfss	status,2,c
  1083   000D82  EFC5  F006         	goto	u1001
  1084   000D86  EFC7  F006         	goto	u1000
  1085   000D8A                     u1001:
  1086   000D8A  EFA2  F006         	goto	l1653
  1087   000D8E                     u1000:
  1088   000D8E                     l940:
  1089   000D8E  C012  F00E         	movff	strspn@i,?_strspn
  1090   000D92  C013  F00F         	movff	strspn@i+1,?_strspn+1
  1091   000D96  0012               	return		;funcret
  1092   000D98                     __end_of_strspn:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _strcspn *****************
  1096 ;; Defined at:
  1097 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcspn.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1100 ;;		 -> NULL(0), ParsingData@input(100), 
  1101 ;;  c               1   15[COMRAM] PTR const unsigned char 
  1102 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  i               2   17[COMRAM] unsigned int 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2   13[COMRAM] unsigned int 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1114 ;;      Params:         3       0       0       0       0       0       0
  1115 ;;      Locals:         2       0       0       0       0       0       0
  1116 ;;      Temps:          1       0       0       0       0       0       0
  1117 ;;      Totals:         6       0       0       0       0       0       0
  1118 ;;Total ram usage:        6 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 5
  1121 ;; This function calls:
  1122 ;;		_strchr
  1123 ;; This function is called by:
  1124 ;;		_strtok
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text4
  1129   000D98                     __ptext4:
  1130                           	callstack 0
  1131   000D98                     _strcspn:
  1132                           	callstack 23
  1133   000D98  0E00               	movlw	0
  1134   000D9A  6E13               	movwf	(strcspn@i+1)^0,c
  1135   000D9C  0E00               	movlw	0
  1136   000D9E  6E12               	movwf	strcspn@i^0,c
  1137   000DA0  EFD6  F006         	goto	l1663
  1138   000DA4                     l1661:
  1139   000DA4  4A0E               	infsnz	strcspn@s^0,f,c
  1140   000DA6  2A0F               	incf	(strcspn@s+1)^0,f,c
  1141   000DA8  4A12               	infsnz	strcspn@i^0,f,c
  1142   000DAA  2A13               	incf	(strcspn@i+1)^0,f,c
  1143   000DAC                     l1663:
  1144   000DAC  C00E  FFD9         	movff	strcspn@s,fsr2l
  1145   000DB0  C00F  FFDA         	movff	strcspn@s+1,fsr2h
  1146   000DB4  50DF               	movf	indf2,w,c
  1147   000DB6  B4D8               	btfsc	status,2,c
  1148   000DB8  EFE0  F006         	goto	u1011
  1149   000DBC  EFE2  F006         	goto	u1010
  1150   000DC0                     u1011:
  1151   000DC0  EFF7  F006         	goto	l924
  1152   000DC4                     u1010:
  1153   000DC4  C010  F00A         	movff	strcspn@c,strchr@s
  1154   000DC8  C00E  FFD9         	movff	strcspn@s,fsr2l
  1155   000DCC  C00F  FFDA         	movff	strcspn@s+1,fsr2h
  1156   000DD0  50DF               	movf	indf2,w,c
  1157   000DD2  6E11               	movwf	??_strcspn^0,c
  1158   000DD4  5011               	movf	??_strcspn^0,w,c
  1159   000DD6  6E0B               	movwf	strchr@c^0,c
  1160   000DD8  6A0C               	clrf	(strchr@c+1)^0,c
  1161   000DDA  EC7D  F007         	call	_strchr	;wreg free
  1162   000DDE  0900               	iorlw	0
  1163   000DE0  B4D8               	btfsc	status,2,c
  1164   000DE2  EFF5  F006         	goto	u1021
  1165   000DE6  EFF7  F006         	goto	u1020
  1166   000DEA                     u1021:
  1167   000DEA  EFD2  F006         	goto	l1661
  1168   000DEE                     u1020:
  1169   000DEE                     l924:
  1170   000DEE  C012  F00E         	movff	strcspn@i,?_strcspn
  1171   000DF2  C013  F00F         	movff	strcspn@i+1,?_strcspn+1
  1172   000DF6  0012               	return		;funcret
  1173   000DF8                     __end_of_strcspn:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _strchr *****************
  1177 ;; Defined at:
  1178 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strchr.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  s               1    9[COMRAM] PTR const unsigned char 
  1181 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1182 ;;  c               2   10[COMRAM] int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    9[COMRAM] PTR unsigned char 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         3       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          1       0       0       0       0       0       0
  1197 ;;      Totals:         4       0       0       0       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 4
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_strcspn
  1205 ;;		_strspn
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text5
  1210   000EFA                     __ptext5:
  1211                           	callstack 0
  1212   000EFA                     _strchr:
  1213                           	callstack 23
  1214   000EFA                     l928:
  1215   000EFA  C00A  FFF6         	movff	strchr@s,tblptrl
  1216   000EFE                     	if	1	;There is more than 1 active tblptr byte
  1217   000EFE  0E06               	movlw	high __smallconst
  1218   000F00  6EF7               	movwf	tblptrh,c
  1219   000F02                     	endif
  1220   000F02                     	if	0	;tblptru may be non-zero
  1221   000F02                     	endif
  1222   000F02                     	if	0	;tblptru may be non-zero
  1223   000F02                     	endif
  1224   000F02  0008               	tblrd		*
  1225   000F04  50F5               	movf	tablat,w,c
  1226   000F06  180B               	xorwf	strchr@c^0,w,c
  1227   000F08  A4D8               	btfss	status,2,c
  1228   000F0A  EF89  F007         	goto	u851
  1229   000F0E  EF8B  F007         	goto	u850
  1230   000F12                     u851:
  1231   000F12  EF8E  F007         	goto	l1581
  1232   000F16                     u850:
  1233   000F16  500A               	movf	strchr@s^0,w,c
  1234   000F18  EFA0  F007         	goto	l930
  1235   000F1C                     l1581:
  1236   000F1C  2A0A               	incf	strchr@s^0,f,c
  1237   000F1E  040A               	decf	strchr@s^0,w,c
  1238   000F20  6E0D               	movwf	??_strchr^0,c
  1239   000F22  C00D  FFF6         	movff	??_strchr,tblptrl
  1240   000F26                     	if	1	;There is more than 1 active tblptr byte
  1241   000F26  0E06               	movlw	high __smallconst
  1242   000F28  6EF7               	movwf	tblptrh,c
  1243   000F2A                     	endif
  1244   000F2A                     	if	0	;tblptru may be non-zero
  1245   000F2A                     	endif
  1246   000F2A                     	if	0	;tblptru may be non-zero
  1247   000F2A                     	endif
  1248   000F2A  0008               	tblrd		*
  1249   000F2C  50F5               	movf	tablat,w,c
  1250   000F2E  0900               	iorlw	0
  1251   000F30  A4D8               	btfss	status,2,c
  1252   000F32  EF9D  F007         	goto	u861
  1253   000F36  EF9F  F007         	goto	u860
  1254   000F3A                     u861:
  1255   000F3A  EF7D  F007         	goto	l928
  1256   000F3E                     u860:
  1257   000F3E  0E00               	movlw	0
  1258   000F40                     l930:
  1259   000F40  0012               	return		;funcret
  1260   000F42                     __end_of_strchr:
  1261                           	callstack 0
  1262                           
  1263 ;; *************** function _print_number *****************
  1264 ;; Defined at:
  1265 ;;		line 306 in file "newmain.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  num             2   25[COMRAM] int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  i               2  100[BANK0 ] int 
  1270 ;;  tmp           100    0[BANK0 ] unsigned char [100]
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1280 ;;      Params:         2       0       0       0       0       0       0
  1281 ;;      Locals:         0     102       0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0
  1283 ;;      Totals:         2     102       0       0       0       0       0
  1284 ;;Total ram usage:      104 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 6
  1287 ;; This function calls:
  1288 ;;		_itoa
  1289 ;;		_putch
  1290 ;;		_strlen
  1291 ;; This function is called by:
  1292 ;;		_ParsingData
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text6
  1297   000DF8                     __ptext6:
  1298                           	callstack 0
  1299   000DF8                     _print_number:
  1300                           	callstack 23
  1301   000DF8                     
  1302                           ;newmain.c: 307:     char tmp[100];;newmain.c: 308:     itoa(num, tmp);
  1303   000DF8  C01A  F012         	movff	print_number@num,itoa@n
  1304   000DFC  C01B  F013         	movff	print_number@num+1,itoa@n+1
  1305   000E00  0E80               	movlw	low print_number@tmp
  1306   000E02  6E14               	movwf	itoa@s^0,c
  1307   000E04  EC06  F005         	call	_itoa	;wreg free
  1308   000E08                     
  1309                           ;newmain.c: 309:     for(int i=0;i<strlen(tmp);i++) putch(tmp[i]);
  1310   000E08  0E00               	movlw	0
  1311   000E0A  0100               	movlb	0	; () banked
  1312   000E0C  6FE5               	movwf	(print_number@i+1)& (0+255),b
  1313   000E0E  0E00               	movlw	0
  1314   000E10  6FE4               	movwf	print_number@i& (0+255),b
  1315   000E12  EF15  F007         	goto	l1695
  1316   000E16                     l1691:
  1317                           
  1318                           ; BSR set to: 0
  1319   000E16  51E4               	movf	print_number@i& (0+255),w,b
  1320   000E18  0F80               	addlw	low print_number@tmp
  1321   000E1A  6ED9               	movwf	fsr2l,c
  1322   000E1C  6ADA               	clrf	fsr2h,c
  1323   000E1E  50DF               	movf	indf2,w,c
  1324   000E20  EC3A  F006         	call	_putch
  1325   000E24  0100               	movlb	0	; () banked
  1326   000E26  4BE4               	infsnz	print_number@i& (0+255),f,b
  1327   000E28  2BE5               	incf	(print_number@i+1)& (0+255),f,b
  1328   000E2A                     l1695:
  1329                           
  1330                           ; BSR set to: 0
  1331   000E2A  0E80               	movlw	low print_number@tmp
  1332   000E2C  6E0A               	movwf	strlen@s^0,c
  1333   000E2E  EC19  F008         	call	_strlen	;wreg free
  1334   000E32  500A               	movf	?_strlen^0,w,c
  1335   000E34  0100               	movlb	0	; () banked
  1336   000E36  5DE4               	subwf	print_number@i& (0+255),w,b
  1337   000E38  500B               	movf	(?_strlen+1)^0,w,c
  1338   000E3A  59E5               	subwfb	(print_number@i+1)& (0+255),w,b
  1339   000E3C  A0D8               	btfss	status,0,c
  1340   000E3E  EF23  F007         	goto	u1041
  1341   000E42  EF25  F007         	goto	u1040
  1342   000E46                     u1041:
  1343   000E46  EF0B  F007         	goto	l1691
  1344   000E4A                     u1040:
  1345   000E4A                     
  1346                           ; BSR set to: 0
  1347                           ;newmain.c: 310:     putch('\r');
  1348   000E4A  0E0D               	movlw	13
  1349   000E4C  EC3A  F006         	call	_putch
  1350                           
  1351                           ;newmain.c: 311:     putch('\n');
  1352   000E50  0E0A               	movlw	10
  1353   000E52  EC3A  F006         	call	_putch
  1354   000E56  0012               	return		;funcret
  1355   000E58                     __end_of_print_number:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _strlen *****************
  1359 ;; Defined at:
  1360 ;;		line 5 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strlen.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  s               1    9[COMRAM] PTR const unsigned char 
  1363 ;;		 -> print_number@tmp(100), output_total_dis@tmp(100), output_total_dis@output(100), get_StepLength@str(100), 
  1364 ;;		 -> get_StepLength@ask(100), 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  a               1   11[COMRAM] PTR const unsigned char 
  1367 ;;		 -> print_number@tmp(100), output_total_dis@tmp(100), output_total_dis@output(100), get_StepLength@str(100), 
  1368 ;;		 -> get_StepLength@ask(100), 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  2    9[COMRAM] unsigned int 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         2       0       0       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0
  1381 ;;      Totals:         3       0       0       0       0       0       0
  1382 ;;Total ram usage:        3 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 4
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_print_number
  1389 ;;		_get_StepLength
  1390 ;;		_output_total_dis
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text7
  1395   001032                     __ptext7:
  1396                           	callstack 0
  1397   001032                     _strlen:
  1398                           	callstack 24
  1399   001032  C00A  F00C         	movff	strlen@s,strlen@a
  1400   001036  EF1E  F008         	goto	l1645
  1401   00103A                     l1643:
  1402   00103A  2A0A               	incf	strlen@s^0,f,c
  1403   00103C                     l1645:
  1404   00103C  500A               	movf	strlen@s^0,w,c
  1405   00103E  6ED9               	movwf	fsr2l,c
  1406   001040  6ADA               	clrf	fsr2h,c
  1407   001042  50DF               	movf	indf2,w,c
  1408   001044  A4D8               	btfss	status,2,c
  1409   001046  EF27  F008         	goto	u981
  1410   00104A  EF29  F008         	goto	u980
  1411   00104E                     u981:
  1412   00104E  EF1D  F008         	goto	l1643
  1413   001052                     u980:
  1414   001052  500C               	movf	strlen@a^0,w,c
  1415   001054  5C0A               	subwf	strlen@s^0,w,c
  1416   001056  6E0A               	movwf	?_strlen^0,c
  1417   001058  6A0B               	clrf	(?_strlen+1)^0,c
  1418   00105A  BE0A               	btfsc	?_strlen^0,7,c
  1419   00105C  060B               	decf	(?_strlen+1)^0,f,c
  1420   00105E  0012               	return		;funcret
  1421   001060                     __end_of_strlen:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _putch *****************
  1425 ;; Defined at:
  1426 ;;		line 74 in file "newmain.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  data            1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  data            1    9[COMRAM] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         0       0       0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0
  1443 ;;      Totals:         1       0       0       0       0       0       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 4
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_print_number
  1451 ;;		_get_StepLength
  1452 ;;		_output_total_dis
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text8
  1457   000C74                     __ptext8:
  1458                           	callstack 0
  1459   000C74                     _putch:
  1460                           	callstack 24
  1461                           
  1462                           ;incstack = 0
  1463                           ;putch@data stored from wreg
  1464   000C74  6E0A               	movwf	putch@data^0,c
  1465   000C76                     
  1466                           ;newmain.c: 75:     if (data == '\n' || data == '\r') {
  1467   000C76  0E0A               	movlw	10
  1468   000C78  180A               	xorwf	putch@data^0,w,c
  1469   000C7A  B4D8               	btfsc	status,2,c
  1470   000C7C  EF42  F006         	goto	u871
  1471   000C80  EF44  F006         	goto	u870
  1472   000C84                     u871:
  1473   000C84  EF4D  F006         	goto	l82
  1474   000C88                     u870:
  1475   000C88  0E0D               	movlw	13
  1476   000C8A  180A               	xorwf	putch@data^0,w,c
  1477   000C8C  A4D8               	btfss	status,2,c
  1478   000C8E  EF4B  F006         	goto	u881
  1479   000C92  EF4D  F006         	goto	u880
  1480   000C96                     u881:
  1481   000C96  EF61  F006         	goto	l89
  1482   000C9A                     u880:
  1483   000C9A                     l82:
  1484   000C9A  A2AC               	btfss	172,1,c	;volatile
  1485   000C9C  EF52  F006         	goto	u891
  1486   000CA0  EF54  F006         	goto	u890
  1487   000CA4                     u891:
  1488   000CA4  EF4D  F006         	goto	l82
  1489   000CA8                     u890:
  1490   000CA8                     
  1491                           ;newmain.c: 77:         TXREG = '\r';
  1492   000CA8  0E0D               	movlw	13
  1493   000CAA  6EAD               	movwf	173,c	;volatile
  1494   000CAC                     l85:
  1495   000CAC  A2AC               	btfss	172,1,c	;volatile
  1496   000CAE  EF5B  F006         	goto	u901
  1497   000CB2  EF5D  F006         	goto	u900
  1498   000CB6                     u901:
  1499   000CB6  EF56  F006         	goto	l85
  1500   000CBA                     u900:
  1501   000CBA                     
  1502                           ;newmain.c: 79:         TXREG = '\n';
  1503   000CBA  0E0A               	movlw	10
  1504   000CBC  6EAD               	movwf	173,c	;volatile
  1505                           
  1506                           ;newmain.c: 80:     } else {
  1507   000CBE  EF6A  F006         	goto	l92
  1508   000CC2                     l89:
  1509   000CC2  A2AC               	btfss	172,1,c	;volatile
  1510   000CC4  EF66  F006         	goto	u911
  1511   000CC8  EF68  F006         	goto	u910
  1512   000CCC                     u911:
  1513   000CCC  EF61  F006         	goto	l89
  1514   000CD0                     u910:
  1515   000CD0                     
  1516                           ;newmain.c: 82:         TXREG = data;
  1517   000CD0  C00A  FFAD         	movff	putch@data,4013	;volatile
  1518   000CD4                     l92:
  1519   000CD4  0012               	return		;funcret
  1520   000CD6                     __end_of_putch:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _itoa *****************
  1524 ;; Defined at:
  1525 ;;		line 258 in file "newmain.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  n               2   17[COMRAM] int 
  1528 ;;  s               1   19[COMRAM] PTR unsigned char 
  1529 ;;		 -> print_number@tmp(100), output_total_dis@tmp(100), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  i               2   23[COMRAM] int 
  1532 ;;  sign            2   21[COMRAM] int 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1542 ;;      Params:         3       0       0       0       0       0       0
  1543 ;;      Locals:         4       0       0       0       0       0       0
  1544 ;;      Temps:          1       0       0       0       0       0       0
  1545 ;;      Totals:         8       0       0       0       0       0       0
  1546 ;;Total ram usage:        8 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 5
  1549 ;; This function calls:
  1550 ;;		___awdiv
  1551 ;;		___awmod
  1552 ;;		_reverse
  1553 ;; This function is called by:
  1554 ;;		_print_number
  1555 ;;		_output_total_dis
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text9
  1560   000A0C                     __ptext9:
  1561                           	callstack 0
  1562   000A0C                     _itoa:
  1563                           	callstack 23
  1564   000A0C                     
  1565                           ;newmain.c: 259:     int sign = 1;
  1566   000A0C  0E00               	movlw	0
  1567   000A0E  6E17               	movwf	(itoa@sign+1)^0,c
  1568   000A10  0E01               	movlw	1
  1569   000A12  6E16               	movwf	itoa@sign^0,c
  1570   000A14                     
  1571                           ;newmain.c: 260:     if (n < 0) {
  1572   000A14  BE13               	btfsc	(itoa@n+1)^0,7,c
  1573   000A16  EF11  F005         	goto	u950
  1574   000A1A  EF0F  F005         	goto	u951
  1575   000A1E                     u951:
  1576   000A1E  EF17  F005         	goto	l1621
  1577   000A22                     u950:
  1578   000A22                     
  1579                           ;newmain.c: 261:         sign = -1;
  1580   000A22  6816               	setf	itoa@sign^0,c
  1581   000A24  6817               	setf	(itoa@sign+1)^0,c
  1582   000A26                     
  1583                           ;newmain.c: 262:         n = -n;
  1584   000A26  6C12               	negf	itoa@n^0,c
  1585   000A28  1E13               	comf	(itoa@n+1)^0,f,c
  1586   000A2A  B0D8               	btfsc	status,0,c
  1587   000A2C  2A13               	incf	(itoa@n+1)^0,f,c
  1588   000A2E                     l1621:
  1589                           
  1590                           ;newmain.c: 264:     int i = 0;
  1591   000A2E  0E00               	movlw	0
  1592   000A30  6E19               	movwf	(itoa@i+1)^0,c
  1593   000A32  0E00               	movlw	0
  1594   000A34  6E18               	movwf	itoa@i^0,c
  1595                           
  1596                           ;newmain.c: 265:     while (n != 0) {
  1597   000A36  EF3E  F005         	goto	l1629
  1598   000A3A                     l1623:
  1599                           
  1600                           ;newmain.c: 266:         s[i++] = n%10 + '0';
  1601   000A3A  5014               	movf	itoa@s^0,w,c
  1602   000A3C  2418               	addwf	itoa@i^0,w,c
  1603   000A3E  6ED9               	movwf	fsr2l,c
  1604   000A40  6ADA               	clrf	fsr2h,c
  1605   000A42  C012  F00A         	movff	itoa@n,___awmod@dividend
  1606   000A46  C013  F00B         	movff	itoa@n+1,___awmod@dividend+1
  1607   000A4A  0E00               	movlw	0
  1608   000A4C  6E0D               	movwf	(___awmod@divisor+1)^0,c
  1609   000A4E  0E0A               	movlw	10
  1610   000A50  6E0C               	movwf	___awmod@divisor^0,c
  1611   000A52  EC65  F005         	call	___awmod	;wreg free
  1612   000A56  500A               	movf	?___awmod^0,w,c
  1613   000A58  0F30               	addlw	48
  1614   000A5A  6EDF               	movwf	indf2,c
  1615   000A5C  4A18               	infsnz	itoa@i^0,f,c
  1616   000A5E  2A19               	incf	(itoa@i+1)^0,f,c
  1617   000A60                     
  1618                           ;newmain.c: 267:         n = n/10;
  1619   000A60  C012  F00A         	movff	itoa@n,___awdiv@dividend
  1620   000A64  C013  F00B         	movff	itoa@n+1,___awdiv@dividend+1
  1621   000A68  0E00               	movlw	0
  1622   000A6A  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  1623   000A6C  0E0A               	movlw	10
  1624   000A6E  6E0C               	movwf	___awdiv@divisor^0,c
  1625   000A70  ECA5  F004         	call	___awdiv	;wreg free
  1626   000A74  C00A  F012         	movff	?___awdiv,itoa@n
  1627   000A78  C00B  F013         	movff	?___awdiv+1,itoa@n+1
  1628   000A7C                     l1629:
  1629                           
  1630                           ;newmain.c: 265:     while (n != 0) {
  1631   000A7C  5012               	movf	itoa@n^0,w,c
  1632   000A7E  1013               	iorwf	(itoa@n+1)^0,w,c
  1633   000A80  A4D8               	btfss	status,2,c
  1634   000A82  EF45  F005         	goto	u961
  1635   000A86  EF47  F005         	goto	u960
  1636   000A8A                     u961:
  1637   000A8A  EF1D  F005         	goto	l1623
  1638   000A8E                     u960:
  1639   000A8E                     
  1640                           ;newmain.c: 270:     if (sign < 0)
  1641   000A8E  BE17               	btfsc	(itoa@sign+1)^0,7,c
  1642   000A90  EF4E  F005         	goto	u970
  1643   000A94  EF4C  F005         	goto	u971
  1644   000A98                     u971:
  1645   000A98  EF56  F005         	goto	l1637
  1646   000A9C                     u970:
  1647   000A9C                     
  1648                           ;newmain.c: 271:         s[i++] = '-';
  1649   000A9C  5014               	movf	itoa@s^0,w,c
  1650   000A9E  2418               	addwf	itoa@i^0,w,c
  1651   000AA0  6ED9               	movwf	fsr2l,c
  1652   000AA2  6ADA               	clrf	fsr2h,c
  1653   000AA4  0E2D               	movlw	45
  1654   000AA6  6EDF               	movwf	indf2,c
  1655   000AA8  4A18               	infsnz	itoa@i^0,f,c
  1656   000AAA  2A19               	incf	(itoa@i+1)^0,f,c
  1657   000AAC                     l1637:
  1658                           
  1659                           ;newmain.c: 272:     s[i] = '\0';
  1660   000AAC  5014               	movf	itoa@s^0,w,c
  1661   000AAE  2418               	addwf	itoa@i^0,w,c
  1662   000AB0  6ED9               	movwf	fsr2l,c
  1663   000AB2  6ADA               	clrf	fsr2h,c
  1664   000AB4  6ADF               	clrf	indf2,c
  1665   000AB6                     
  1666                           ;newmain.c: 274:     reverse(s, s+i-1);
  1667   000AB6  C014  F00A         	movff	itoa@s,reverse@first
  1668   000ABA  5014               	movf	itoa@s^0,w,c
  1669   000ABC  2418               	addwf	itoa@i^0,w,c
  1670   000ABE  6E15               	movwf	??_itoa^0,c
  1671   000AC0  0415               	decf	??_itoa^0,w,c
  1672   000AC2  6E0B               	movwf	reverse@last^0,c
  1673   000AC4  ECA1  F007         	call	_reverse	;wreg free
  1674   000AC8  0012               	return		;funcret
  1675   000ACA                     __end_of_itoa:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _reverse *****************
  1679 ;; Defined at:
  1680 ;;		line 249 in file "newmain.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  first           1    9[COMRAM] PTR unsigned char 
  1683 ;;		 -> print_number@tmp(100), output_total_dis@tmp(100), 
  1684 ;;  last            1   10[COMRAM] PTR unsigned char 
  1685 ;;		 -> print_number@tmp(100), output_total_dis@tmp(100), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  tmp             1   11[COMRAM] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1697 ;;      Params:         2       0       0       0       0       0       0
  1698 ;;      Locals:         1       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0
  1700 ;;      Totals:         3       0       0       0       0       0       0
  1701 ;;Total ram usage:        3 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 4
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_itoa
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text10
  1712   000F42                     __ptext10:
  1713                           	callstack 0
  1714   000F42                     _reverse:
  1715                           	callstack 23
  1716   000F42                     
  1717                           ;newmain.c: 250:     for (;first < last; first++,last--) {
  1718   000F42  EFB7  F007         	goto	l1493
  1719   000F46                     l1483:
  1720                           
  1721                           ;newmain.c: 252:         char tmp = *first;
  1722   000F46  500A               	movf	reverse@first^0,w,c
  1723   000F48  6ED9               	movwf	fsr2l,c
  1724   000F4A  6ADA               	clrf	fsr2h,c
  1725   000F4C  50DF               	movf	indf2,w,c
  1726   000F4E  6E0C               	movwf	reverse@tmp^0,c
  1727   000F50                     
  1728                           ;newmain.c: 253:         *first = *last;
  1729   000F50  500B               	movf	reverse@last^0,w,c
  1730   000F52  6ED9               	movwf	fsr2l,c
  1731   000F54  6ADA               	clrf	fsr2h,c
  1732   000F56  500A               	movf	reverse@first^0,w,c
  1733   000F58  6EE1               	movwf	fsr1l,c
  1734   000F5A  6AE2               	clrf	fsr1h,c
  1735   000F5C  CFDF FFE7          	movff	indf2,indf1
  1736   000F60                     
  1737                           ;newmain.c: 254:         *last = tmp;
  1738   000F60  500B               	movf	reverse@last^0,w,c
  1739   000F62  6ED9               	movwf	fsr2l,c
  1740   000F64  6ADA               	clrf	fsr2h,c
  1741   000F66  C00C  FFDF         	movff	reverse@tmp,indf2
  1742   000F6A                     
  1743                           ;newmain.c: 255:     }
  1744   000F6A  2A0A               	incf	reverse@first^0,f,c
  1745   000F6C  060B               	decf	reverse@last^0,f,c
  1746   000F6E                     l1493:
  1747   000F6E  500B               	movf	reverse@last^0,w,c
  1748   000F70  5C0A               	subwf	reverse@first^0,w,c
  1749   000F72  A0D8               	btfss	status,0,c
  1750   000F74  EFBE  F007         	goto	u721
  1751   000F78  EFC0  F007         	goto	u720
  1752   000F7C                     u721:
  1753   000F7C  EFA3  F007         	goto	l1483
  1754   000F80                     u720:
  1755   000F80  0012               	return		;funcret
  1756   000F82                     __end_of_reverse:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function ___awmod *****************
  1760 ;; Defined at:
  1761 ;;		line 7 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/awmod.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  dividend        2    9[COMRAM] int 
  1764 ;;  divisor         2   11[COMRAM] int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  sign            1   14[COMRAM] unsigned char 
  1767 ;;  counter         1   13[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    9[COMRAM] int 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         4       0       0       0       0       0       0
  1778 ;;      Locals:         2       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0
  1780 ;;      Totals:         6       0       0       0       0       0       0
  1781 ;;Total ram usage:        6 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 4
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_itoa
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text11
  1792   000ACA                     __ptext11:
  1793                           	callstack 0
  1794   000ACA                     ___awmod:
  1795                           	callstack 23
  1796   000ACA  6A0F               	clrf	___awmod@sign^0,c
  1797   000ACC  BE0B               	btfsc	(___awmod@dividend+1)^0,7,c
  1798   000ACE  EF6D  F005         	goto	u790
  1799   000AD2  EF6B  F005         	goto	u791
  1800   000AD6                     u791:
  1801   000AD6  EF73  F005         	goto	l1547
  1802   000ADA                     u790:
  1803   000ADA  6C0A               	negf	___awmod@dividend^0,c
  1804   000ADC  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  1805   000ADE  B0D8               	btfsc	status,0,c
  1806   000AE0  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  1807   000AE2  0E01               	movlw	1
  1808   000AE4  6E0F               	movwf	___awmod@sign^0,c
  1809   000AE6                     l1547:
  1810   000AE6  BE0D               	btfsc	(___awmod@divisor+1)^0,7,c
  1811   000AE8  EF7A  F005         	goto	u800
  1812   000AEC  EF78  F005         	goto	u801
  1813   000AF0                     u801:
  1814   000AF0  EF7E  F005         	goto	l1551
  1815   000AF4                     u800:
  1816   000AF4  6C0C               	negf	___awmod@divisor^0,c
  1817   000AF6  1E0D               	comf	(___awmod@divisor+1)^0,f,c
  1818   000AF8  B0D8               	btfsc	status,0,c
  1819   000AFA  2A0D               	incf	(___awmod@divisor+1)^0,f,c
  1820   000AFC                     l1551:
  1821   000AFC  500C               	movf	___awmod@divisor^0,w,c
  1822   000AFE  100D               	iorwf	(___awmod@divisor+1)^0,w,c
  1823   000B00  B4D8               	btfsc	status,2,c
  1824   000B02  EF85  F005         	goto	u811
  1825   000B06  EF87  F005         	goto	u810
  1826   000B0A                     u811:
  1827   000B0A  EFAB  F005         	goto	l1567
  1828   000B0E                     u810:
  1829   000B0E  0E01               	movlw	1
  1830   000B10  6E0E               	movwf	___awmod@counter^0,c
  1831   000B12  EF8F  F005         	goto	l1557
  1832   000B16                     l1555:
  1833   000B16  90D8               	bcf	status,0,c
  1834   000B18  360C               	rlcf	___awmod@divisor^0,f,c
  1835   000B1A  360D               	rlcf	(___awmod@divisor+1)^0,f,c
  1836   000B1C  2A0E               	incf	___awmod@counter^0,f,c
  1837   000B1E                     l1557:
  1838   000B1E  AE0D               	btfss	(___awmod@divisor+1)^0,7,c
  1839   000B20  EF94  F005         	goto	u821
  1840   000B24  EF96  F005         	goto	u820
  1841   000B28                     u821:
  1842   000B28  EF8B  F005         	goto	l1555
  1843   000B2C                     u820:
  1844   000B2C                     l1559:
  1845   000B2C  500C               	movf	___awmod@divisor^0,w,c
  1846   000B2E  5C0A               	subwf	___awmod@dividend^0,w,c
  1847   000B30  500D               	movf	(___awmod@divisor+1)^0,w,c
  1848   000B32  580B               	subwfb	(___awmod@dividend+1)^0,w,c
  1849   000B34  A0D8               	btfss	status,0,c
  1850   000B36  EF9F  F005         	goto	u831
  1851   000B3A  EFA1  F005         	goto	u830
  1852   000B3E                     u831:
  1853   000B3E  EFA5  F005         	goto	l1563
  1854   000B42                     u830:
  1855   000B42  500C               	movf	___awmod@divisor^0,w,c
  1856   000B44  5E0A               	subwf	___awmod@dividend^0,f,c
  1857   000B46  500D               	movf	(___awmod@divisor+1)^0,w,c
  1858   000B48  5A0B               	subwfb	(___awmod@dividend+1)^0,f,c
  1859   000B4A                     l1563:
  1860   000B4A  90D8               	bcf	status,0,c
  1861   000B4C  320D               	rrcf	(___awmod@divisor+1)^0,f,c
  1862   000B4E  320C               	rrcf	___awmod@divisor^0,f,c
  1863   000B50  2E0E               	decfsz	___awmod@counter^0,f,c
  1864   000B52  EF96  F005         	goto	l1559
  1865   000B56                     l1567:
  1866   000B56  500F               	movf	___awmod@sign^0,w,c
  1867   000B58  B4D8               	btfsc	status,2,c
  1868   000B5A  EFB1  F005         	goto	u841
  1869   000B5E  EFB3  F005         	goto	u840
  1870   000B62                     u841:
  1871   000B62  EFB7  F005         	goto	l1571
  1872   000B66                     u840:
  1873   000B66  6C0A               	negf	___awmod@dividend^0,c
  1874   000B68  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  1875   000B6A  B0D8               	btfsc	status,0,c
  1876   000B6C  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  1877   000B6E                     l1571:
  1878   000B6E  C00A  F00A         	movff	___awmod@dividend,?___awmod
  1879   000B72  C00B  F00B         	movff	___awmod@dividend+1,?___awmod+1
  1880   000B76  0012               	return		;funcret
  1881   000B78                     __end_of___awmod:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function ___awdiv *****************
  1885 ;; Defined at:
  1886 ;;		line 7 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/awdiv.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  dividend        2    9[COMRAM] int 
  1889 ;;  divisor         2   11[COMRAM] int 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  quotient        2   15[COMRAM] int 
  1892 ;;  sign            1   14[COMRAM] unsigned char 
  1893 ;;  counter         1   13[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2    9[COMRAM] int 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1903 ;;      Params:         4       0       0       0       0       0       0
  1904 ;;      Locals:         4       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0
  1906 ;;      Totals:         8       0       0       0       0       0       0
  1907 ;;Total ram usage:        8 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 4
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_itoa
  1914 ;;		_End_Timer
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text12
  1919   00094A                     __ptext12:
  1920                           	callstack 0
  1921   00094A                     ___awdiv:
  1922                           	callstack 23
  1923   00094A  6A0F               	clrf	___awdiv@sign^0,c
  1924   00094C  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
  1925   00094E  EFAD  F004         	goto	u730
  1926   000952  EFAB  F004         	goto	u731
  1927   000956                     u731:
  1928   000956  EFB3  F004         	goto	l1503
  1929   00095A                     u730:
  1930   00095A  6C0C               	negf	___awdiv@divisor^0,c
  1931   00095C  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
  1932   00095E  B0D8               	btfsc	status,0,c
  1933   000960  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
  1934   000962  0E01               	movlw	1
  1935   000964  6E0F               	movwf	___awdiv@sign^0,c
  1936   000966                     l1503:
  1937   000966  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
  1938   000968  EFBA  F004         	goto	u740
  1939   00096C  EFB8  F004         	goto	u741
  1940   000970                     u741:
  1941   000970  EFC0  F004         	goto	l1509
  1942   000974                     u740:
  1943   000974  6C0A               	negf	___awdiv@dividend^0,c
  1944   000976  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
  1945   000978  B0D8               	btfsc	status,0,c
  1946   00097A  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
  1947   00097C  0E01               	movlw	1
  1948   00097E  1A0F               	xorwf	___awdiv@sign^0,f,c
  1949   000980                     l1509:
  1950   000980  0E00               	movlw	0
  1951   000982  6E11               	movwf	(___awdiv@quotient+1)^0,c
  1952   000984  0E00               	movlw	0
  1953   000986  6E10               	movwf	___awdiv@quotient^0,c
  1954   000988  500C               	movf	___awdiv@divisor^0,w,c
  1955   00098A  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
  1956   00098C  B4D8               	btfsc	status,2,c
  1957   00098E  EFCB  F004         	goto	u751
  1958   000992  EFCD  F004         	goto	u750
  1959   000996                     u751:
  1960   000996  EFF5  F004         	goto	l1531
  1961   00099A                     u750:
  1962   00099A  0E01               	movlw	1
  1963   00099C  6E0E               	movwf	___awdiv@counter^0,c
  1964   00099E  EFD5  F004         	goto	l1517
  1965   0009A2                     l1515:
  1966   0009A2  90D8               	bcf	status,0,c
  1967   0009A4  360C               	rlcf	___awdiv@divisor^0,f,c
  1968   0009A6  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
  1969   0009A8  2A0E               	incf	___awdiv@counter^0,f,c
  1970   0009AA                     l1517:
  1971   0009AA  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
  1972   0009AC  EFDA  F004         	goto	u761
  1973   0009B0  EFDC  F004         	goto	u760
  1974   0009B4                     u761:
  1975   0009B4  EFD1  F004         	goto	l1515
  1976   0009B8                     u760:
  1977   0009B8                     l1519:
  1978   0009B8  90D8               	bcf	status,0,c
  1979   0009BA  3610               	rlcf	___awdiv@quotient^0,f,c
  1980   0009BC  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
  1981   0009BE  500C               	movf	___awdiv@divisor^0,w,c
  1982   0009C0  5C0A               	subwf	___awdiv@dividend^0,w,c
  1983   0009C2  500D               	movf	(___awdiv@divisor+1)^0,w,c
  1984   0009C4  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
  1985   0009C6  A0D8               	btfss	status,0,c
  1986   0009C8  EFE8  F004         	goto	u771
  1987   0009CC  EFEA  F004         	goto	u770
  1988   0009D0                     u771:
  1989   0009D0  EFEF  F004         	goto	l1527
  1990   0009D4                     u770:
  1991   0009D4  500C               	movf	___awdiv@divisor^0,w,c
  1992   0009D6  5E0A               	subwf	___awdiv@dividend^0,f,c
  1993   0009D8  500D               	movf	(___awdiv@divisor+1)^0,w,c
  1994   0009DA  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
  1995   0009DC  8010               	bsf	___awdiv@quotient^0,0,c
  1996   0009DE                     l1527:
  1997   0009DE  90D8               	bcf	status,0,c
  1998   0009E0  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
  1999   0009E2  320C               	rrcf	___awdiv@divisor^0,f,c
  2000   0009E4  2E0E               	decfsz	___awdiv@counter^0,f,c
  2001   0009E6  EFDC  F004         	goto	l1519
  2002   0009EA                     l1531:
  2003   0009EA  500F               	movf	___awdiv@sign^0,w,c
  2004   0009EC  B4D8               	btfsc	status,2,c
  2005   0009EE  EFFB  F004         	goto	u781
  2006   0009F2  EFFD  F004         	goto	u780
  2007   0009F6                     u781:
  2008   0009F6  EF01  F005         	goto	l1535
  2009   0009FA                     u780:
  2010   0009FA  6C10               	negf	___awdiv@quotient^0,c
  2011   0009FC  1E11               	comf	(___awdiv@quotient+1)^0,f,c
  2012   0009FE  B0D8               	btfsc	status,0,c
  2013   000A00  2A11               	incf	(___awdiv@quotient+1)^0,f,c
  2014   000A02                     l1535:
  2015   000A02  C010  F00A         	movff	___awdiv@quotient,?___awdiv
  2016   000A06  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
  2017   000A0A  0012               	return		;funcret
  2018   000A0C                     __end_of___awdiv:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _atoi *****************
  2022 ;; Defined at:
  2023 ;;		line 5 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/atoi.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2026 ;;		 -> NULL(0), ParsingData@input(100), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  n               2   15[COMRAM] int 
  2029 ;;  neg             1   14[COMRAM] _Bool 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2    9[COMRAM] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         2       0       0       0       0       0       0
  2040 ;;      Locals:         3       0       0       0       0       0       0
  2041 ;;      Temps:          3       0       0       0       0       0       0
  2042 ;;      Totals:         8       0       0       0       0       0       0
  2043 ;;Total ram usage:        8 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 4
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_ParsingData
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text13
  2054   00075A                     __ptext13:
  2055                           	callstack 0
  2056   00075A                     _atoi:
  2057                           	callstack 25
  2058   00075A  0E00               	movlw	0
  2059   00075C  6E11               	movwf	(atoi@n+1)^0,c
  2060   00075E  0E00               	movlw	0
  2061   000760  6E10               	movwf	atoi@n^0,c
  2062   000762  6A0F               	clrf	atoi@neg^0,c
  2063   000764  EFB6  F003         	goto	l1733
  2064   000768                     l1731:
  2065   000768  4A0A               	infsnz	atoi@s^0,f,c
  2066   00076A  2A0B               	incf	(atoi@s+1)^0,f,c
  2067   00076C                     l1733:
  2068   00076C  C00A  FFD9         	movff	atoi@s,fsr2l
  2069   000770  C00B  FFDA         	movff	atoi@s+1,fsr2h
  2070   000774  0E20               	movlw	32
  2071   000776  18DE               	xorwf	postinc2,w,c
  2072   000778  B4D8               	btfsc	status,2,c
  2073   00077A  EFC1  F003         	goto	u1091
  2074   00077E  EFC3  F003         	goto	u1090
  2075   000782                     u1091:
  2076   000782  EFB4  F003         	goto	l1731
  2077   000786                     u1090:
  2078   000786  C00A  FFD9         	movff	atoi@s,fsr2l
  2079   00078A  C00B  FFDA         	movff	atoi@s+1,fsr2h
  2080   00078E  50DF               	movf	indf2,w,c
  2081   000790  6E0C               	movwf	??_atoi^0,c
  2082   000792  0EF7               	movlw	247
  2083   000794  260C               	addwf	??_atoi^0,f,c
  2084   000796  0E04               	movlw	4
  2085   000798  640C               	cpfsgt	??_atoi^0,c
  2086   00079A  EFD1  F003         	goto	u1101
  2087   00079E  EFD3  F003         	goto	u1100
  2088   0007A2                     u1101:
  2089   0007A2  EFB4  F003         	goto	l1731
  2090   0007A6                     u1100:
  2091   0007A6  C00A  FFD9         	movff	atoi@s,fsr2l
  2092   0007AA  C00B  FFDA         	movff	atoi@s+1,fsr2h
  2093   0007AE  0E2D               	movlw	45
  2094   0007B0  18DE               	xorwf	postinc2,w,c
  2095   0007B2  A4D8               	btfss	status,2,c
  2096   0007B4  EFDE  F003         	goto	u1111
  2097   0007B8  EFE0  F003         	goto	u1110
  2098   0007BC                     u1111:
  2099   0007BC  EFE6  F003         	goto	l1743
  2100   0007C0                     u1110:
  2101   0007C0  0E01               	movlw	1
  2102   0007C2  6E0F               	movwf	atoi@neg^0,c
  2103   0007C4                     l1741:
  2104   0007C4  4A0A               	infsnz	atoi@s^0,f,c
  2105   0007C6  2A0B               	incf	(atoi@s+1)^0,f,c
  2106   0007C8  EF10  F004         	goto	l1751
  2107   0007CC                     l1743:
  2108   0007CC  C00A  FFD9         	movff	atoi@s,fsr2l
  2109   0007D0  C00B  FFDA         	movff	atoi@s+1,fsr2h
  2110   0007D4  0E2B               	movlw	43
  2111   0007D6  18DE               	xorwf	postinc2,w,c
  2112   0007D8  A4D8               	btfss	status,2,c
  2113   0007DA  EFF1  F003         	goto	u1121
  2114   0007DE  EFF3  F003         	goto	u1120
  2115   0007E2                     u1121:
  2116   0007E2  EF10  F004         	goto	l1751
  2117   0007E6                     u1120:
  2118   0007E6  EFE2  F003         	goto	l1741
  2119   0007EA                     l1747:
  2120   0007EA  0E0A               	movlw	10
  2121   0007EC  0210               	mulwf	atoi@n^0,c
  2122   0007EE  CFF3 F00C          	movff	prodl,??_atoi
  2123   0007F2  CFF4 F00D          	movff	prodh,??_atoi+1
  2124   0007F6  0211               	mulwf	(atoi@n+1)^0,c
  2125   0007F8  50F3               	movf	prodl,w,c
  2126   0007FA  260D               	addwf	(??_atoi+1)^0,f,c
  2127   0007FC  C00A  FFD9         	movff	atoi@s,fsr2l
  2128   000800  C00B  FFDA         	movff	atoi@s+1,fsr2h
  2129   000804  50DF               	movf	indf2,w,c
  2130   000806  6E0E               	movwf	(??_atoi+2)^0,c
  2131   000808  500E               	movf	(??_atoi+2)^0,w,c
  2132   00080A  5E0C               	subwf	??_atoi^0,f,c
  2133   00080C  0E00               	movlw	0
  2134   00080E  5A0D               	subwfb	(??_atoi+1)^0,f,c
  2135   000810  0E30               	movlw	48
  2136   000812  240C               	addwf	??_atoi^0,w,c
  2137   000814  6E10               	movwf	atoi@n^0,c
  2138   000816  0E00               	movlw	0
  2139   000818  200D               	addwfc	(??_atoi+1)^0,w,c
  2140   00081A  6E11               	movwf	(atoi@n+1)^0,c
  2141   00081C  EFE2  F003         	goto	l1741
  2142   000820                     l1751:
  2143   000820  C00A  FFD9         	movff	atoi@s,fsr2l
  2144   000824  C00B  FFDA         	movff	atoi@s+1,fsr2h
  2145   000828  50DF               	movf	indf2,w,c
  2146   00082A  6E0C               	movwf	??_atoi^0,c
  2147   00082C  0ED0               	movlw	208
  2148   00082E  260C               	addwf	??_atoi^0,f,c
  2149   000830  0E09               	movlw	9
  2150   000832  640C               	cpfsgt	??_atoi^0,c
  2151   000834  EF1E  F004         	goto	u1131
  2152   000838  EF20  F004         	goto	u1130
  2153   00083C                     u1131:
  2154   00083C  EFF5  F003         	goto	l1747
  2155   000840                     u1130:
  2156   000840  500F               	movf	atoi@neg^0,w,c
  2157   000842  A4D8               	btfss	status,2,c
  2158   000844  EF26  F004         	goto	u1141
  2159   000848  EF28  F004         	goto	u1140
  2160   00084C                     u1141:
  2161   00084C  EF36  F004         	goto	l887
  2162   000850                     u1140:
  2163   000850  C010  F00C         	movff	atoi@n,??_atoi
  2164   000854  C011  F00D         	movff	atoi@n+1,??_atoi+1
  2165   000858  1E0C               	comf	??_atoi^0,f,c
  2166   00085A  1E0D               	comf	(??_atoi+1)^0,f,c
  2167   00085C  4A0C               	infsnz	??_atoi^0,f,c
  2168   00085E  2A0D               	incf	(??_atoi+1)^0,f,c
  2169   000860  C00C  F00A         	movff	??_atoi,?_atoi
  2170   000864  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  2171   000868  EF3A  F004         	goto	l890
  2172   00086C                     l887:
  2173   00086C  C010  F00A         	movff	atoi@n,?_atoi
  2174   000870  C011  F00B         	movff	atoi@n+1,?_atoi+1
  2175   000874                     l890:
  2176   000874  0012               	return		;funcret
  2177   000876                     __end_of_atoi:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _GetString *****************
  2181 ;; Defined at:
  2182 ;;		line 99 in file "newmain.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  str             2   17[COMRAM] PTR unsigned char 
  2185 ;;		 -> ParsingData@str(100), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  2   17[COMRAM] int 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         2       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0
  2199 ;;      Temps:          1       0       0       0       0       0       0
  2200 ;;      Totals:         3       0       0       0       0       0       0
  2201 ;;Total ram usage:        3 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 5
  2204 ;; This function calls:
  2205 ;;		_ClearBuffer
  2206 ;;		_strcpy
  2207 ;; This function is called by:
  2208 ;;		_ParsingData
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text14
  2213   000C0A                     __ptext14:
  2214                           	callstack 0
  2215   000C0A                     _GetString:
  2216                           	callstack 24
  2217   000C0A                     
  2218                           ;newmain.c: 100:     if (buffer[buffer_size - 1] == '\r') {
  2219   000C0A  0E63               	movlw	low (_buffer+65535)
  2220   000C0C  2420               	addwf	_buffer_size^0,w,c
  2221   000C0E  6ED9               	movwf	fsr2l,c
  2222   000C10  0E02               	movlw	high (_buffer+65535)
  2223   000C12  2021               	addwfc	(_buffer_size+1)^0,w,c
  2224   000C14  6EDA               	movwf	fsr2h,c
  2225   000C16  0E0D               	movlw	13
  2226   000C18  18DE               	xorwf	postinc2,w,c
  2227   000C1A  A4D8               	btfss	status,2,c
  2228   000C1C  EF12  F006         	goto	u1031
  2229   000C20  EF14  F006         	goto	u1030
  2230   000C24                     u1031:
  2231   000C24  EF30  F006         	goto	l1681
  2232   000C28                     u1030:
  2233   000C28                     
  2234                           ;newmain.c: 101:         buffer[--buffer_size] = '\0';
  2235   000C28  0620               	decf	_buffer_size^0,f,c
  2236   000C2A  A0D8               	btfss	status,0,c
  2237   000C2C  0621               	decf	(_buffer_size+1)^0,f,c
  2238   000C2E  0E64               	movlw	low _buffer
  2239   000C30  2420               	addwf	_buffer_size^0,w,c
  2240   000C32  6ED9               	movwf	fsr2l,c
  2241   000C34  0E02               	movlw	high _buffer
  2242   000C36  2021               	addwfc	(_buffer_size+1)^0,w,c
  2243   000C38  6EDA               	movwf	fsr2h,c
  2244   000C3A  6ADF               	clrf	indf2,c
  2245   000C3C                     
  2246                           ;newmain.c: 102:         strcpy(str, buffer);
  2247   000C3C  C012  F00A         	movff	GetString@str,strcpy@dest
  2248   000C40  C013  F00B         	movff	GetString@str+1,strcpy@dest+1
  2249   000C44  0E64               	movlw	low _buffer
  2250   000C46  6E0C               	movwf	strcpy@src^0,c
  2251   000C48  0E02               	movlw	high _buffer
  2252   000C4A  6E0D               	movwf	(strcpy@src+1)^0,c
  2253   000C4C  EC2C  F007         	call	_strcpy	;wreg free
  2254   000C50                     
  2255                           ;newmain.c: 103:         ClearBuffer();
  2256   000C50  ECC1  F007         	call	_ClearBuffer	;wreg free
  2257   000C54                     
  2258                           ;newmain.c: 104:         return 1;
  2259   000C54  0E00               	movlw	0
  2260   000C56  6E13               	movwf	(?_GetString+1)^0,c
  2261   000C58  0E01               	movlw	1
  2262   000C5A  6E12               	movwf	?_GetString^0,c
  2263   000C5C  EF39  F006         	goto	l105
  2264   000C60                     l1681:
  2265                           
  2266                           ;newmain.c: 106:         str[0] = '\0';
  2267   000C60  C012  FFD9         	movff	GetString@str,fsr2l
  2268   000C64  C013  FFDA         	movff	GetString@str+1,fsr2h
  2269   000C68  6ADF               	clrf	indf2,c
  2270   000C6A                     
  2271                           ;newmain.c: 107:         return 0;
  2272   000C6A  0E00               	movlw	0
  2273   000C6C  6E13               	movwf	(?_GetString+1)^0,c
  2274   000C6E  0E00               	movlw	0
  2275   000C70  6E12               	movwf	?_GetString^0,c
  2276   000C72                     l105:
  2277   000C72  0012               	return		;funcret
  2278   000C74                     __end_of_GetString:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _strcpy *****************
  2282 ;; Defined at:
  2283 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  dest            2    9[COMRAM] PTR unsigned char 
  2286 ;;		 -> ParsingData@str(100), ParsingData@input(100), output_total_dis@output(100), get_StepLength@ask(100), 
  2287 ;;  src             2   11[COMRAM] PTR const unsigned char 
  2288 ;;		 -> ParsingData@str(100), STR_2(15), STR_1(20), buffer(100), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  d               2   15[COMRAM] PTR unsigned char 
  2291 ;;		 -> ParsingData@str(100), ParsingData@input(100), output_total_dis@output(100), get_StepLength@ask(100), 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2    9[COMRAM] PTR unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         4       0       0       0       0       0       0
  2302 ;;      Locals:         2       0       0       0       0       0       0
  2303 ;;      Temps:          2       0       0       0       0       0       0
  2304 ;;      Totals:         8       0       0       0       0       0       0
  2305 ;;Total ram usage:        8 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 4
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_GetString
  2312 ;;		_ParsingData
  2313 ;;		_get_StepLength
  2314 ;;		_output_total_dis
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text15
  2319   000E58                     __ptext15:
  2320                           	callstack 0
  2321   000E58                     _strcpy:
  2322                           	callstack 25
  2323   000E58  C00A  F010         	movff	strcpy@dest,strcpy@d
  2324   000E5C  C00B  F011         	movff	strcpy@dest+1,strcpy@d+1
  2325   000E60                     l1611:
  2326   000E60  500C               	movf	strcpy@src^0,w,c
  2327   000E62  6E0E               	movwf	??_strcpy^0,c
  2328   000E64  500D               	movf	(strcpy@src+1)^0,w,c
  2329   000E66  6E0F               	movwf	(??_strcpy+1)^0,c
  2330   000E68  4A0C               	infsnz	strcpy@src^0,f,c
  2331   000E6A  2A0D               	incf	(strcpy@src+1)^0,f,c
  2332   000E6C  C00E  FFF6         	movff	??_strcpy,tblptrl
  2333   000E70  C00F  FFF7         	movff	??_strcpy+1,tblptrh
  2334   000E74  6AF8               	clrf	tblptru,c
  2335   000E76  C010  FFD9         	movff	strcpy@d,fsr2l
  2336   000E7A  C011  FFDA         	movff	strcpy@d+1,fsr2h
  2337   000E7E  4A10               	infsnz	strcpy@d^0,f,c
  2338   000E80  2A11               	incf	(strcpy@d+1)^0,f,c
  2339   000E82  0E05               	movlw	(high __ramtop+-1)
  2340   000E84  64F7               	cpfsgt	tblptrh,c
  2341   000E86  D003               	bra	u937
  2342   000E88  0008               	tblrd		*
  2343   000E8A  50F5               	movf	tablat,w,c
  2344   000E8C  D005               	bra	u930
  2345   000E8E                     u937:
  2346   000E8E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2347   000E92  CFF7 FFEA          	movff	tblptrh,fsr0h
  2348   000E96  50EF               	movf	indf0,w,c
  2349   000E98                     u930:
  2350   000E98  6EDF               	movwf	indf2,c
  2351   000E9A  50DF               	movf	indf2,w,c
  2352   000E9C  A4D8               	btfss	status,2,c
  2353   000E9E  EF53  F007         	goto	u941
  2354   000EA2  EF55  F007         	goto	u940
  2355   000EA6                     u941:
  2356   000EA6  EF30  F007         	goto	l1611
  2357   000EAA                     u940:
  2358   000EAA  0012               	return		;funcret
  2359   000EAC                     __end_of_strcpy:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _ClearBuffer *****************
  2363 ;; Defined at:
  2364 ;;		line 86 in file "newmain.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  i               2    9[COMRAM] int 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2378 ;;      Params:         0       0       0       0       0       0       0
  2379 ;;      Locals:         2       0       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0
  2381 ;;      Totals:         2       0       0       0       0       0       0
  2382 ;;Total ram usage:        2 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 4
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_GetString
  2389 ;;		_ParsingData
  2390 ;;		_main
  2391 ;;		_get_StepLength
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text16
  2396   000F82                     __ptext16:
  2397                           	callstack 0
  2398   000F82                     _ClearBuffer:
  2399                           	callstack 24
  2400   000F82                     
  2401                           ;newmain.c: 87:     for (int i = 0; i < 100; i++)
  2402   000F82  0E00               	movlw	0
  2403   000F84  6E0B               	movwf	(ClearBuffer@i+1)^0,c
  2404   000F86  0E00               	movlw	0
  2405   000F88  6E0A               	movwf	ClearBuffer@i^0,c
  2406   000F8A                     l1601:
  2407                           
  2408                           ;newmain.c: 88:         buffer[i] = '\0';
  2409   000F8A  0E64               	movlw	low _buffer
  2410   000F8C  240A               	addwf	ClearBuffer@i^0,w,c
  2411   000F8E  6ED9               	movwf	fsr2l,c
  2412   000F90  0E02               	movlw	high _buffer
  2413   000F92  200B               	addwfc	(ClearBuffer@i+1)^0,w,c
  2414   000F94  6EDA               	movwf	fsr2h,c
  2415   000F96  6ADF               	clrf	indf2,c
  2416   000F98  4A0A               	infsnz	ClearBuffer@i^0,f,c
  2417   000F9A  2A0B               	incf	(ClearBuffer@i+1)^0,f,c
  2418   000F9C  BE0B               	btfsc	(ClearBuffer@i+1)^0,7,c
  2419   000F9E  EFDA  F007         	goto	u921
  2420   000FA2  500B               	movf	(ClearBuffer@i+1)^0,w,c
  2421   000FA4  E109               	bnz	u920
  2422   000FA6  0E64               	movlw	100
  2423   000FA8  5C0A               	subwf	ClearBuffer@i^0,w,c
  2424   000FAA  A0D8               	btfss	status,0,c
  2425   000FAC  EFDA  F007         	goto	u921
  2426   000FB0  EFDC  F007         	goto	u920
  2427   000FB4                     u921:
  2428   000FB4  EFC5  F007         	goto	l1601
  2429   000FB8                     u920:
  2430   000FB8                     
  2431                           ;newmain.c: 89:     buffer_size = 0;
  2432   000FB8  0E00               	movlw	0
  2433   000FBA  6E21               	movwf	(_buffer_size+1)^0,c
  2434   000FBC  0E00               	movlw	0
  2435   000FBE  6E20               	movwf	_buffer_size^0,c
  2436   000FC0  0012               	return		;funcret
  2437   000FC2                     __end_of_ClearBuffer:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _Initialize *****************
  2441 ;; Defined at:
  2442 ;;		line 128 in file "newmain.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2456 ;;      Params:         0       0       0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0
  2459 ;;      Totals:         0       0       0       0       0       0       0
  2460 ;;Total ram usage:        0 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 4
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text17
  2471   000B78                     __ptext17:
  2472                           	callstack 0
  2473   000B78                     _Initialize:
  2474                           	callstack 26
  2475   000B78                     
  2476                           ;newmain.c: 130:     OSCCONbits.IRCF = 0b110;
  2477   000B78  50D3               	movf	211,w,c	;volatile
  2478   000B7A  0B8F               	andlw	-113
  2479   000B7C  0960               	iorlw	96
  2480   000B7E  6ED3               	movwf	211,c	;volatile
  2481   000B80                     
  2482                           ;newmain.c: 132:     TRISAbits.RA0 = 1;
  2483   000B80  8092               	bsf	146,0,c	;volatile
  2484                           
  2485                           ;newmain.c: 133:     ADCON1bits.PCFG = 0b1110;
  2486   000B82  50C1               	movf	193,w,c	;volatile
  2487   000B84  0BF0               	andlw	-16
  2488   000B86  090E               	iorlw	14
  2489   000B88  6EC1               	movwf	193,c	;volatile
  2490                           
  2491                           ;newmain.c: 134:     ADCON0bits.CHS = 0b0000;
  2492   000B8A  0EC3               	movlw	-61
  2493   000B8C  16C2               	andwf	194,f,c	;volatile
  2494   000B8E                     
  2495                           ;newmain.c: 135:     ADCON1bits.VCFG0 = 0;
  2496   000B8E  98C1               	bcf	193,4,c	;volatile
  2497   000B90                     
  2498                           ;newmain.c: 136:     ADCON1bits.VCFG1 = 0;
  2499   000B90  9AC1               	bcf	193,5,c	;volatile
  2500                           
  2501                           ;newmain.c: 137:     ADCON2bits.ADCS = 0b000;
  2502   000B92  0EF8               	movlw	-8
  2503   000B94  16C0               	andwf	192,f,c	;volatile
  2504                           
  2505                           ;newmain.c: 138:     ADCON2bits.ACQT = 0b001;
  2506   000B96  50C0               	movf	192,w,c	;volatile
  2507   000B98  0BC7               	andlw	-57
  2508   000B9A  0908               	iorlw	8
  2509   000B9C  6EC0               	movwf	192,c	;volatile
  2510   000B9E                     
  2511                           ;newmain.c: 139:     ADCON0bits.ADON = 1;
  2512   000B9E  80C2               	bsf	194,0,c	;volatile
  2513   000BA0                     
  2514                           ;newmain.c: 140:     ADCON2bits.ADFM = 1;
  2515   000BA0  8EC0               	bsf	192,7,c	;volatile
  2516   000BA2                     
  2517                           ;newmain.c: 143:     T2CONbits.TMR2ON = 0b1;
  2518   000BA2  84CA               	bsf	202,2,c	;volatile
  2519                           
  2520                           ;newmain.c: 144:     T2CONbits.T2CKPS = 0b11;
  2521   000BA4  0E03               	movlw	3
  2522   000BA6  12CA               	iorwf	202,f,c	;volatile
  2523                           
  2524                           ;newmain.c: 145:     CCP1CONbits.CCP1M = 0b1100;
  2525   000BA8  50BD               	movf	189,w,c	;volatile
  2526   000BAA  0BF0               	andlw	-16
  2527   000BAC  090C               	iorlw	12
  2528   000BAE  6EBD               	movwf	189,c	;volatile
  2529                           
  2530                           ;newmain.c: 146:     PR2 = 0x9b;
  2531   000BB0  0E9B               	movlw	155
  2532   000BB2  6ECB               	movwf	203,c	;volatile
  2533   000BB4                     
  2534                           ;newmain.c: 148:     TRISCbits.TRISC2 = 0;
  2535   000BB4  9494               	bcf	148,2,c	;volatile
  2536   000BB6                     
  2537                           ;newmain.c: 151:     TRISA &= 0xF1;
  2538   000BB6  0EF1               	movlw	241
  2539   000BB8  1692               	andwf	146,f,c	;volatile
  2540   000BBA                     
  2541                           ;newmain.c: 152:     TRISB = 1;
  2542   000BBA  0E01               	movlw	1
  2543   000BBC  6E93               	movwf	147,c	;volatile
  2544   000BBE                     
  2545                           ;newmain.c: 153:     TRISC = 0;
  2546   000BBE  6A94               	clrf	148,c	;volatile
  2547                           
  2548                           ;newmain.c: 154:     LATA &= 0xF1;
  2549   000BC0  0EF1               	movlw	241
  2550   000BC2  1689               	andwf	137,f,c	;volatile
  2551   000BC4                     
  2552                           ;newmain.c: 155:     LATC = 0;
  2553   000BC4  6A8B               	clrf	139,c	;volatile
  2554   000BC6                     
  2555                           ;newmain.c: 158:     INTCONbits.INT0IF = 0;
  2556   000BC6  92F2               	bcf	242,1,c	;volatile
  2557   000BC8                     
  2558                           ;newmain.c: 159:     INTCONbits.INT0IE = 1;
  2559   000BC8  88F2               	bsf	242,4,c	;volatile
  2560   000BCA                     
  2561                           ;newmain.c: 160:     PIE1bits.ADIE = 1;
  2562   000BCA  8C9D               	bsf	157,6,c	;volatile
  2563   000BCC                     
  2564                           ;newmain.c: 161:     PIR1bits.ADIF = 0;
  2565   000BCC  9C9E               	bcf	158,6,c	;volatile
  2566   000BCE                     
  2567                           ;newmain.c: 162:     INTCONbits.PEIE = 1;
  2568   000BCE  8CF2               	bsf	242,6,c	;volatile
  2569   000BD0                     
  2570                           ;newmain.c: 163:     INTCONbits.GIE = 1;
  2571   000BD0  8EF2               	bsf	242,7,c	;volatile
  2572   000BD2                     
  2573                           ;newmain.c: 164:     RCONbits.IPEN = 1;
  2574   000BD2  8ED0               	bsf	208,7,c	;volatile
  2575   000BD4                     
  2576                           ;newmain.c: 165:     INTCONbits.GIEH = 1;
  2577   000BD4  8EF2               	bsf	242,7,c	;volatile
  2578   000BD6                     
  2579                           ;newmain.c: 166:     INTCONbits.GIEL = 1;
  2580   000BD6  8CF2               	bsf	242,6,c	;volatile
  2581   000BD8                     
  2582                           ;newmain.c: 178:     TRISCbits.TRISC6 = 1;
  2583   000BD8  8C94               	bsf	148,6,c	;volatile
  2584   000BDA                     
  2585                           ;newmain.c: 179:     TRISCbits.TRISC7 = 1;
  2586   000BDA  8E94               	bsf	148,7,c	;volatile
  2587   000BDC                     
  2588                           ;newmain.c: 183:     TXSTAbits.SYNC = 0;
  2589   000BDC  98AC               	bcf	172,4,c	;volatile
  2590   000BDE                     
  2591                           ;newmain.c: 184:     BAUDCONbits.BRG16 = 0;
  2592   000BDE  96B8               	bcf	184,3,c	;volatile
  2593   000BE0                     
  2594                           ;newmain.c: 185:     TXSTAbits.BRGH = 0;
  2595   000BE0  94AC               	bcf	172,2,c	;volatile
  2596   000BE2                     
  2597                           ;newmain.c: 186:     SPBRG = 51;
  2598   000BE2  0E33               	movlw	51
  2599   000BE4  6EAF               	movwf	175,c	;volatile
  2600   000BE6                     
  2601                           ;newmain.c: 189:     RCSTAbits.SPEN = 1;
  2602   000BE6  8EAB               	bsf	171,7,c	;volatile
  2603   000BE8                     
  2604                           ;newmain.c: 190:     PIR1bits.TXIF = 0;
  2605   000BE8  989E               	bcf	158,4,c	;volatile
  2606   000BEA                     
  2607                           ;newmain.c: 191:     PIR1bits.RCIF = 0;
  2608   000BEA  9A9E               	bcf	158,5,c	;volatile
  2609   000BEC                     
  2610                           ;newmain.c: 192:     TXSTAbits.TXEN = 1;
  2611   000BEC  8AAC               	bsf	172,5,c	;volatile
  2612   000BEE                     
  2613                           ;newmain.c: 193:     RCSTAbits.CREN = 1;
  2614   000BEE  88AB               	bsf	171,4,c	;volatile
  2615   000BF0                     
  2616                           ;newmain.c: 194:     PIE1bits.TXIE = 0;
  2617   000BF0  989D               	bcf	157,4,c	;volatile
  2618   000BF2                     
  2619                           ;newmain.c: 195:     IPR1bits.TXIP = 0;
  2620   000BF2  989F               	bcf	159,4,c	;volatile
  2621   000BF4                     
  2622                           ;newmain.c: 196:     PIE1bits.RCIE = 1;
  2623   000BF4  8A9D               	bsf	157,5,c	;volatile
  2624   000BF6                     
  2625                           ;newmain.c: 197:     IPR1bits.RCIP = 0;
  2626   000BF6  9A9F               	bcf	159,5,c	;volatile
  2627   000BF8                     
  2628                           ;newmain.c: 209:     ADCON0bits.GO = 1;
  2629   000BF8  82C2               	bsf	194,1,c	;volatile
  2630   000BFA                     
  2631                           ;newmain.c: 212:     T2CON = 0b01111111;
  2632   000BFA  0E7F               	movlw	127
  2633   000BFC  6ECA               	movwf	202,c	;volatile
  2634   000BFE                     
  2635                           ;newmain.c: 213:     PR2 = 122;
  2636   000BFE  0E7A               	movlw	122
  2637   000C00  6ECB               	movwf	203,c	;volatile
  2638   000C02                     
  2639                           ;newmain.c: 214:     PIR1bits.TMR2IF = 0;
  2640   000C02  929E               	bcf	158,1,c	;volatile
  2641   000C04                     
  2642                           ;newmain.c: 215:     PIE1bits.TMR2IE = 1;
  2643   000C04  829D               	bsf	157,1,c	;volatile
  2644   000C06                     
  2645                           ;newmain.c: 216:     IPR1bits.TMR2IP = 1;
  2646   000C06  829F               	bsf	159,1,c	;volatile
  2647   000C08  0012               	return		;funcret
  2648   000C0A                     __end_of_Initialize:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _Lo_ISR *****************
  2652 ;; Defined at:
  2653 ;;		line 111 in file "newmain.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2667 ;;      Params:         0       0       0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0
  2669 ;;      Temps:          5       0       0       0       0       0       0
  2670 ;;      Totals:         5       0       0       0       0       0       0
  2671 ;;Total ram usage:        5 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 3
  2674 ;; This function calls:
  2675 ;;		_MyusartRead
  2676 ;; This function is called by:
  2677 ;;		Interrupt level 1
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	intcodelo
  2682   000018                     __pintcodelo:
  2683                           	callstack 0
  2684   000018                     _Lo_ISR:
  2685                           	callstack 23
  2686                           
  2687                           ;incstack = 0
  2688   000018  8023               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2689   00001A  CFD8 F005          	movff	status,??_Lo_ISR
  2690   00001E  CFE8 F006          	movff	wreg,??_Lo_ISR+1
  2691   000022  CFE0 F007          	movff	bsr,??_Lo_ISR+2
  2692   000026  CFD9 F008          	movff	fsr2l,??_Lo_ISR+3
  2693   00002A  CFDA F009          	movff	fsr2h,??_Lo_ISR+4
  2694   00002E                     
  2695                           ;newmain.c: 112:     if (RCIF) {
  2696   00002E  AA9E               	btfss	3998,5,c	;volatile
  2697   000030  EF1C  F000         	goto	i1u126_21
  2698   000034  EF1E  F000         	goto	i1u126_20
  2699   000038                     i1u126_21:
  2700   000038  EF2A  F000         	goto	i1l113
  2701   00003C                     i1u126_20:
  2702   00003C                     
  2703                           ;newmain.c: 113:         if (RCSTAbits.OERR) {
  2704   00003C  A2AB               	btfss	171,1,c	;volatile
  2705   00003E  EF23  F000         	goto	i1u127_21
  2706   000042  EF25  F000         	goto	i1u127_20
  2707   000046                     i1u127_21:
  2708   000046  EF28  F000         	goto	i1l1821
  2709   00004A                     i1u127_20:
  2710   00004A                     
  2711                           ;newmain.c: 114:             CREN = 0;
  2712   00004A  98AB               	bcf	4011,4,c	;volatile
  2713                           
  2714                           ;newmain.c: 115:             __nop();
  2715   00004C  0000               	nop	
  2716                           
  2717                           ;newmain.c: 116:             CREN = 1;
  2718   00004E  88AB               	bsf	4011,4,c	;volatile
  2719   000050                     i1l1821:
  2720                           
  2721                           ;newmain.c: 119:         MyusartRead();
  2722   000050  EC56  F007         	call	_MyusartRead	;wreg free
  2723   000054                     i1l113:
  2724   000054  C009  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2725   000058  C008  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2726   00005C  C007  FFE0         	movff	??_Lo_ISR+2,bsr
  2727   000060  C006  FFE8         	movff	??_Lo_ISR+1,wreg
  2728   000064  C005  FFD8         	movff	??_Lo_ISR,status
  2729   000068  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2730   00006A  0010               	retfie	
  2731   00006C                     __end_of_Lo_ISR:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _MyusartRead *****************
  2735 ;; Defined at:
  2736 ;;		line 92 in file "newmain.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  data            1    3[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2750 ;;      Params:         0       0       0       0       0       0       0
  2751 ;;      Locals:         1       0       0       0       0       0       0
  2752 ;;      Temps:          1       0       0       0       0       0       0
  2753 ;;      Totals:         2       0       0       0       0       0       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 2
  2757 ;; This function calls:
  2758 ;;		i1_putch
  2759 ;; This function is called by:
  2760 ;;		_Lo_ISR
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text19
  2765   000EAC                     __ptext19:
  2766                           	callstack 0
  2767   000EAC                     _MyusartRead:
  2768                           	callstack 23
  2769   000EAC                     
  2770                           ;newmain.c: 93:     char data = RCREG;
  2771   000EAC  CFAE F004          	movff	4014,MyusartRead@data	;volatile
  2772   000EB0                     
  2773                           ;newmain.c: 94:     if (!(((unsigned char)((data)-0x20)) < 0x5f) && data != '\r') return
      +                          ;
  2774   000EB0  C004  F003         	movff	MyusartRead@data,??_MyusartRead
  2775   000EB4  0EE0               	movlw	224
  2776   000EB6  2603               	addwf	??_MyusartRead^0,f,c
  2777   000EB8  0E5E               	movlw	94
  2778   000EBA  6403               	cpfsgt	??_MyusartRead^0,c
  2779   000EBC  EF62  F007         	goto	i1u120_21
  2780   000EC0  EF64  F007         	goto	i1u120_20
  2781   000EC4                     i1u120_21:
  2782   000EC4  EF6F  F007         	goto	i1l1773
  2783   000EC8                     i1u120_20:
  2784   000EC8  0E0D               	movlw	13
  2785   000ECA  1804               	xorwf	MyusartRead@data^0,w,c
  2786   000ECC  B4D8               	btfsc	status,2,c
  2787   000ECE  EF6B  F007         	goto	i1u121_21
  2788   000ED2  EF6D  F007         	goto	i1u121_20
  2789   000ED6                     i1u121_21:
  2790   000ED6  EF6F  F007         	goto	i1l1773
  2791   000EDA                     i1u121_20:
  2792   000EDA  EF7C  F007         	goto	i1l101
  2793   000EDE                     i1l1773:
  2794                           
  2795                           ;newmain.c: 95:     buffer[buffer_size++] = data;
  2796   000EDE  0E64               	movlw	low _buffer
  2797   000EE0  2420               	addwf	_buffer_size^0,w,c
  2798   000EE2  6ED9               	movwf	fsr2l,c
  2799   000EE4  0E02               	movlw	high _buffer
  2800   000EE6  2021               	addwfc	(_buffer_size+1)^0,w,c
  2801   000EE8  6EDA               	movwf	fsr2h,c
  2802   000EEA  C004  FFDF         	movff	MyusartRead@data,indf2
  2803   000EEE  4A20               	infsnz	_buffer_size^0,f,c
  2804   000EF0  2A21               	incf	(_buffer_size+1)^0,f,c
  2805   000EF2                     
  2806                           ;newmain.c: 96:     putch(data);
  2807   000EF2  5004               	movf	MyusartRead@data^0,w,c
  2808   000EF4  EC6B  F006         	call	i1_putch
  2809   000EF8                     i1l101:
  2810   000EF8  0012               	return		;funcret
  2811   000EFA                     __end_of_MyusartRead:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function i1_putch *****************
  2815 ;; Defined at:
  2816 ;;		line 74 in file "newmain.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  data            1    wreg     unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  data            1    1[COMRAM] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2830 ;;      Params:         0       0       0       0       0       0       0
  2831 ;;      Locals:         1       0       0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0
  2833 ;;      Totals:         1       0       0       0       0       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_MyusartRead
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text20
  2845   000CD6                     __ptext20:
  2846                           	callstack 0
  2847   000CD6                     i1_putch:
  2848                           	callstack 23
  2849                           
  2850                           ;incstack = 0
  2851                           ;i1putch@data stored from wreg
  2852   000CD6  6E02               	movwf	i1putch@data^0,c
  2853   000CD8                     
  2854                           ;newmain.c: 75:     if (data == '\n' || data == '\r') {
  2855   000CD8  0E0A               	movlw	10
  2856   000CDA  1802               	xorwf	i1putch@data^0,w,c
  2857   000CDC  B4D8               	btfsc	status,2,c
  2858   000CDE  EF73  F006         	goto	i1u115_21
  2859   000CE2  EF75  F006         	goto	i1u115_20
  2860   000CE6                     i1u115_21:
  2861   000CE6  EF7E  F006         	goto	i1l82
  2862   000CEA                     i1u115_20:
  2863   000CEA  0E0D               	movlw	13
  2864   000CEC  1802               	xorwf	i1putch@data^0,w,c
  2865   000CEE  A4D8               	btfss	status,2,c
  2866   000CF0  EF7C  F006         	goto	i1u116_21
  2867   000CF4  EF7E  F006         	goto	i1u116_20
  2868   000CF8                     i1u116_21:
  2869   000CF8  EF92  F006         	goto	i1l89
  2870   000CFC                     i1u116_20:
  2871   000CFC                     i1l82:
  2872   000CFC  A2AC               	btfss	172,1,c	;volatile
  2873   000CFE  EF83  F006         	goto	i1u117_21
  2874   000D02  EF85  F006         	goto	i1u117_20
  2875   000D06                     i1u117_21:
  2876   000D06  EF7E  F006         	goto	i1l82
  2877   000D0A                     i1u117_20:
  2878   000D0A                     
  2879                           ;newmain.c: 77:         TXREG = '\r';
  2880   000D0A  0E0D               	movlw	13
  2881   000D0C  6EAD               	movwf	173,c	;volatile
  2882   000D0E                     i1l85:
  2883   000D0E  A2AC               	btfss	172,1,c	;volatile
  2884   000D10  EF8C  F006         	goto	i1u118_21
  2885   000D14  EF8E  F006         	goto	i1u118_20
  2886   000D18                     i1u118_21:
  2887   000D18  EF87  F006         	goto	i1l85
  2888   000D1C                     i1u118_20:
  2889   000D1C                     
  2890                           ;newmain.c: 79:         TXREG = '\n';
  2891   000D1C  0E0A               	movlw	10
  2892   000D1E  6EAD               	movwf	173,c	;volatile
  2893                           
  2894                           ;newmain.c: 80:     } else {
  2895   000D20  EF9B  F006         	goto	i1l92
  2896   000D24                     i1l89:
  2897   000D24  A2AC               	btfss	172,1,c	;volatile
  2898   000D26  EF97  F006         	goto	i1u119_21
  2899   000D2A  EF99  F006         	goto	i1u119_20
  2900   000D2E                     i1u119_21:
  2901   000D2E  EF92  F006         	goto	i1l89
  2902   000D32                     i1u119_20:
  2903   000D32                     
  2904                           ;newmain.c: 82:         TXREG = data;
  2905   000D32  C002  FFAD         	movff	i1putch@data,4013	;volatile
  2906   000D36                     i1l92:
  2907   000D36  0012               	return		;funcret
  2908   000D38                     __end_ofi1_putch:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _H_ISR *****************
  2912 ;; Defined at:
  2913 ;;		line 218 in file "newmain.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2927 ;;      Params:         0       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0
  2929 ;;      Temps:          1       0       0       0       0       0       0
  2930 ;;      Totals:         1       0       0       0       0       0       0
  2931 ;;Total ram usage:        1 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		Interrupt level 2
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	intcode
  2941   000008                     __pintcode:
  2942                           	callstack 0
  2943   000008                     _H_ISR:
  2944                           	callstack 23
  2945                           
  2946                           ;incstack = 0
  2947   000008  8223               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2948   00000A  EDE1  F007         	call	int_func,f	;refresh shadow registers
  2949                           
  2950                           	psect	intcode_body
  2951   000FC2                     __pintcode_body:
  2952                           	callstack 23
  2953   000FC2                     int_func:
  2954                           	callstack 23
  2955   000FC2  0006               	pop		; remove dummy address from shadow register refresh
  2956   000FC4                     
  2957                           ;newmain.c: 220:     if (INTCONbits.INT0IF) {
  2958   000FC4  A2F2               	btfss	242,1,c	;volatile
  2959   000FC6  EFE7  F007         	goto	i2u57_41
  2960   000FCA  EFE9  F007         	goto	i2u57_40
  2961   000FCE                     i2u57_41:
  2962   000FCE  EFF4  F007         	goto	i2l1379
  2963   000FD2                     i2u57_40:
  2964   000FD2                     
  2965                           ;newmain.c: 221:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2966   000FD2  0E41               	movlw	65
  2967   000FD4  6E01               	movwf	??_H_ISR^0,c
  2968   000FD6  0EEE               	movlw	238
  2969   000FD8                     i2u139_47:
  2970   000FD8  2EE8               	decfsz	wreg,f,c
  2971   000FDA  D7FE               	bra	i2u139_47
  2972   000FDC  2E01               	decfsz	??_H_ISR^0,f,c
  2973   000FDE  D7FC               	bra	i2u139_47
  2974   000FE0  D000               	nop2	
  2975   000FE2                     
  2976                           ;newmain.c: 222:         btn_interr = 1;
  2977   000FE2  0E01               	movlw	1
  2978   000FE4  6E22               	movwf	_btn_interr^0,c
  2979   000FE6                     
  2980                           ;newmain.c: 223:         INTCONbits.INT0IF = 0;
  2981   000FE6  92F2               	bcf	242,1,c	;volatile
  2982   000FE8                     i2l1379:
  2983                           
  2984                           ;newmain.c: 226:     if (PIR1bits.TMR2IF) {
  2985   000FE8  A29E               	btfss	158,1,c	;volatile
  2986   000FEA  EFF9  F007         	goto	i2u58_41
  2987   000FEE  EFFB  F007         	goto	i2u58_40
  2988   000FF2                     i2u58_41:
  2989   000FF2  EFFE  F007         	goto	i2l123
  2990   000FF6                     i2u58_40:
  2991   000FF6                     
  2992                           ;newmain.c: 227:         cnt++;
  2993   000FF6  4A1E               	infsnz	_cnt^0,f,c
  2994   000FF8  2A1F               	incf	(_cnt+1)^0,f,c
  2995   000FFA                     
  2996                           ;newmain.c: 228:         PIR1bits.TMR2IF = 0;
  2997   000FFA  929E               	bcf	158,1,c	;volatile
  2998   000FFC                     i2l123:
  2999   000FFC  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3000   000FFE  0011               	retfie		f
  3001   001000                     __end_of_H_ISR:
  3002                           	callstack 0
  3003                           
  3004                           	psect	rparam
  3005   000001                     ___rparam_used  equ	1
  3006   000000                     ___param_bank   equ	0
  3007   000000                     __Lparam        equ	__Lrparam
  3008   000000                     __Hparam        equ	__Hrparam
  3009                           
  3010                           	psect	temp
  3011   000023                     btemp:
  3012                           	callstack 0
  3013   000023                     	ds	1
  3014   000023                     int$flags       set	btemp
  3015   000024                     wtemp8          set	btemp+1
  3016   000024                     ttemp5          set	btemp+1
  3017   000027                     ttemp6          set	btemp+4
  3018   00002B                     ttemp7          set	btemp+8
  3019                           
  3020                           	psect	idloc
  3021                           
  3022                           ;Config register IDLOC0 @ 0x200000
  3023                           ;	unspecified, using default values
  3024   200000                     	org	2097152
  3025   200000  FF                 	db	255
  3026                           
  3027                           ;Config register IDLOC1 @ 0x200001
  3028                           ;	unspecified, using default values
  3029   200001                     	org	2097153
  3030   200001  FF                 	db	255
  3031                           
  3032                           ;Config register IDLOC2 @ 0x200002
  3033                           ;	unspecified, using default values
  3034   200002                     	org	2097154
  3035   200002  FF                 	db	255
  3036                           
  3037                           ;Config register IDLOC3 @ 0x200003
  3038                           ;	unspecified, using default values
  3039   200003                     	org	2097155
  3040   200003  FF                 	db	255
  3041                           
  3042                           ;Config register IDLOC4 @ 0x200004
  3043                           ;	unspecified, using default values
  3044   200004                     	org	2097156
  3045   200004  FF                 	db	255
  3046                           
  3047                           ;Config register IDLOC5 @ 0x200005
  3048                           ;	unspecified, using default values
  3049   200005                     	org	2097157
  3050   200005  FF                 	db	255
  3051                           
  3052                           ;Config register IDLOC6 @ 0x200006
  3053                           ;	unspecified, using default values
  3054   200006                     	org	2097158
  3055   200006  FF                 	db	255
  3056                           
  3057                           ;Config register IDLOC7 @ 0x200007
  3058                           ;	unspecified, using default values
  3059   200007                     	org	2097159
  3060   200007  FF                 	db	255
  3061                           
  3062                           	psect	config
  3063                           
  3064                           ; Padding undefined space
  3065   300000                     	org	3145728
  3066   300000  FF                 	db	255
  3067                           
  3068                           ;Config register CONFIG1H @ 0x300001
  3069                           ;	Oscillator Selection bits
  3070                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3071                           ;	Fail-Safe Clock Monitor Enable bit
  3072                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3073                           ;	Internal/External Oscillator Switchover bit
  3074                           ;	IESO = ON, Oscillator Switchover mode enabled
  3075   300001                     	org	3145729
  3076   300001  88                 	db	136
  3077                           
  3078                           ;Config register CONFIG2L @ 0x300002
  3079                           ;	Power-up Timer Enable bit
  3080                           ;	PWRT = OFF, PWRT disabled
  3081                           ;	Brown-out Reset Enable bits
  3082                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3083                           ;	Brown Out Reset Voltage bits
  3084                           ;	BORV = 3, Minimum setting
  3085   300002                     	org	3145730
  3086   300002  1F                 	db	31
  3087                           
  3088                           ;Config register CONFIG2H @ 0x300003
  3089                           ;	Watchdog Timer Enable bit
  3090                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3091                           ;	Watchdog Timer Postscale Select bits
  3092                           ;	WDTPS = 1, 1:1
  3093   300003                     	org	3145731
  3094   300003  00                 	db	0
  3095                           
  3096                           ; Padding undefined space
  3097   300004                     	org	3145732
  3098   300004  FF                 	db	255
  3099                           
  3100                           ;Config register CONFIG3H @ 0x300005
  3101                           ;	CCP2 MUX bit
  3102                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3103                           ;	PORTB A/D Enable bit
  3104                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3105                           ;	Low-Power Timer1 Oscillator Enable bit
  3106                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3107                           ;	MCLR Pin Enable bit
  3108                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3109   300005                     	org	3145733
  3110   300005  83                 	db	131
  3111                           
  3112                           ;Config register CONFIG4L @ 0x300006
  3113                           ;	Stack Full/Underflow Reset Enable bit
  3114                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3115                           ;	Single-Supply ICSP Enable bit
  3116                           ;	LVP = OFF, Single-Supply ICSP disabled
  3117                           ;	Extended Instruction Set Enable bit
  3118                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3119                           ;	Background Debugger Enable bit
  3120                           ;	DEBUG = 0x1, unprogrammed default
  3121   300006                     	org	3145734
  3122   300006  81                 	db	129
  3123                           
  3124                           ; Padding undefined space
  3125   300007                     	org	3145735
  3126   300007  FF                 	db	255
  3127                           
  3128                           ;Config register CONFIG5L @ 0x300008
  3129                           ;	Code Protection bit
  3130                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3131                           ;	Code Protection bit
  3132                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3133                           ;	Code Protection bit
  3134                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3135                           ;	Code Protection bit
  3136                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3137   300008                     	org	3145736
  3138   300008  0F                 	db	15
  3139                           
  3140                           ;Config register CONFIG5H @ 0x300009
  3141                           ;	Boot Block Code Protection bit
  3142                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3143                           ;	Data EEPROM Code Protection bit
  3144                           ;	CPD = OFF, Data EEPROM not code-protected
  3145   300009                     	org	3145737
  3146   300009  C0                 	db	192
  3147                           
  3148                           ;Config register CONFIG6L @ 0x30000A
  3149                           ;	Write Protection bit
  3150                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3151                           ;	Write Protection bit
  3152                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3153                           ;	Write Protection bit
  3154                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3155                           ;	Write Protection bit
  3156                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3157   30000A                     	org	3145738
  3158   30000A  0F                 	db	15
  3159                           
  3160                           ;Config register CONFIG6H @ 0x30000B
  3161                           ;	Configuration Register Write Protection bit
  3162                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3163                           ;	Boot Block Write Protection bit
  3164                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3165                           ;	Data EEPROM Write Protection bit
  3166                           ;	WRTD = OFF, Data EEPROM not write-protected
  3167   30000B                     	org	3145739
  3168   30000B  E0                 	db	224
  3169                           
  3170                           ;Config register CONFIG7L @ 0x30000C
  3171                           ;	Table Read Protection bit
  3172                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3173                           ;	Table Read Protection bit
  3174                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3175                           ;	Table Read Protection bit
  3176                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3177                           ;	Table Read Protection bit
  3178                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3179   30000C                     	org	3145740
  3180   30000C  0F                 	db	15
  3181                           
  3182                           ;Config register CONFIG7H @ 0x30000D
  3183                           ;	Boot Block Table Read Protection bit
  3184                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3185   30000D                     	org	3145741
  3186   30000D  40                 	db	64
  3187                           tosu	equ	0xFFF
  3188                           tosh	equ	0xFFE
  3189                           tosl	equ	0xFFD
  3190                           stkptr	equ	0xFFC
  3191                           pclatu	equ	0xFFB
  3192                           pclath	equ	0xFFA
  3193                           pcl	equ	0xFF9
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           indf0	equ	0xFEF
  3201                           postinc0	equ	0xFEE
  3202                           postdec0	equ	0xFED
  3203                           preinc0	equ	0xFEC
  3204                           plusw0	equ	0xFEB
  3205                           fsr0h	equ	0xFEA
  3206                           fsr0l	equ	0xFE9
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           postinc1	equ	0xFE6
  3210                           postdec1	equ	0xFE5
  3211                           preinc1	equ	0xFE4
  3212                           plusw1	equ	0xFE3
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           bsr	equ	0xFE0
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           preinc2	equ	0xFDC
  3220                           plusw2	equ	0xFDB
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         307
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     27      34
    BANK0           128    102     102
    BANK1           256    208     208
    BANK2           256      0     200
    BANK3           256      0     100
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    GetString@str	PTR unsigned char  size(2) Largest target is 100
		 -> ParsingData@str(BANK1[100]), 

    itoa@s	PTR unsigned char  size(1) Largest target is 100
		 -> output_total_dis@tmp(COMRAM[100]), print_number@tmp(BANK0[100]), 

    ParsingData@token	PTR unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    reverse@first	PTR unsigned char  size(1) Largest target is 100
		 -> output_total_dis@tmp(COMRAM[100]), print_number@tmp(BANK0[100]), 

    reverse@last	PTR unsigned char  size(1) Largest target is 100
		 -> output_total_dis@tmp(COMRAM[100]), print_number@tmp(BANK0[100]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 100
		 -> get_StepLength@ask(COMRAM[100]), output_total_dis@output(COMRAM[100]), ParsingData@input(BANK1[100]), ParsingData@str(BANK1[100]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> get_StepLength@ask(COMRAM[100]), output_total_dis@output(COMRAM[100]), ParsingData@input(BANK1[100]), ParsingData@str(BANK1[100]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 100
		 -> get_StepLength@ask(COMRAM[100]), output_total_dis@output(COMRAM[100]), ParsingData@input(BANK1[100]), ParsingData@str(BANK1[100]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 100
		 -> buffer(BANK2[100]), ParsingData@str(BANK1[100]), STR_1(CODE[20]), STR_2(CODE[15]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 100
		 -> get_StepLength@ask(COMRAM[100]), get_StepLength@str(COMRAM[100]), output_total_dis@output(COMRAM[100]), output_total_dis@tmp(COMRAM[100]), 
		 -> print_number@tmp(BANK0[100]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 100
		 -> get_StepLength@ask(COMRAM[100]), get_StepLength@str(COMRAM[100]), output_total_dis@output(COMRAM[100]), output_total_dis@tmp(COMRAM[100]), 
		 -> print_number@tmp(BANK0[100]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 100
		 -> ParsingData@input(BANK1[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 


Critical Paths under _main in COMRAM

    _ParsingData->_print_number
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _print_number->_itoa
    _itoa->___awdiv
    _GetString->_strcpy

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->i1_putch

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _ParsingData->_print_number

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ParsingData

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0    2947
                        _ClearBuffer
                         _Initialize
                        _ParsingData
 ---------------------------------------------------------------------------------
 (1) _ParsingData                                        208   208      0    2879
                                              0 BANK1    208   208      0
                        _ClearBuffer
                          _GetString
                               _atoi
                       _print_number
                             _strcpy
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               3     0      3     554
                                             19 COMRAM     3     0      3
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               6     3      3     185
                                             13 COMRAM     6     3      3
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              6     3      3     185
                                             13 COMRAM     6     3      3
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               4     1      3      92
                                              9 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _print_number                                       104   102      2    1435
                                             25 COMRAM     2     0      2
                                              0 BANK0    102   102      0
                               _itoa
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      95
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      87
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     5      3    1102
                                             17 COMRAM     8     5      3
                            ___awdiv
                            ___awmod
                            _reverse
 ---------------------------------------------------------------------------------
 (4) _reverse                                              3     1      2     159
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     304
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     231
                                              9 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _GetString                                            3     1      2     194
                                             17 COMRAM     3     1      2
                        _ClearBuffer
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4      81
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _ClearBuffer                                          2     2      0      68
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Lo_ISR                                               5     5      0     176
                                              4 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (6) _MyusartRead                                          2     2      0     176
                                              2 COMRAM     2     2      0
                            i1_putch
 ---------------------------------------------------------------------------------
 (7) i1_putch                                              1     1      0      87
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _H_ISR                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _Initialize
   _ParsingData
     _ClearBuffer
     _GetString
       _ClearBuffer
       _strcpy
     _atoi
     _print_number
       _itoa
         ___awdiv
         ___awmod
         _reverse
       _putch
       _strlen
     _strcpy
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr

 _Lo_ISR (ROOT)
   _MyusartRead
     i1_putch

 _H_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0     100     39.1%
BITBANK2           256      0       0      0.0%
BANK2              256      0     200     78.1%
BITBANK1           256      0       0      0.0%
BANK1              256    208     208     81.2%
BITBANK0           128      0       0      0.0%
BANK0              128    102     102     79.7%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     27      34     27.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        22      0       0      0.0%
BITBIGSFRlllh       10      0       0      0.0%
BITBIGSFRllll        9      0       0      0.0%
BITBIGSFRlh          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     644      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 16 02:36:14 2025

                     l82 0C9A                       l91 0CD0                       l92 0CD4  
                     l85 0CAC                       l97 0FC0                       l89 0CC2  
           ___awdiv@sign 000F                       bsr 0FE0                      l105 0C72  
                    l116 0C08                      l142 0F80                      l150 0AC8  
                    l183 0E56                      l191 0758                      l434 0A0A  
                    l447 0B76                      l902 105E                      l912 0948  
                    l930 0F40                      l915 0940                      l924 0DEE  
                    l940 0D8E                      l925 0DF6                      l941 0D96  
                    l928 0EFA                      l890 0874                      l887 086C  
                    l896 0EAA                      _PR2 0FCB                      u800 0AF4  
                    u720 0F80                      u801 0AF0                      u721 0F7C  
                    u730 095A                      u810 0B0E                      u731 0956  
                    u811 0B0A                      u740 0974                      u820 0B2C  
                    u900 0CBA                      u741 0970                      u821 0B28  
                    u901 0CB6                      u750 099A                      u830 0B42  
                    u910 0CD0                      u751 0996                      u831 0B3E  
                    u911 0CCC                      u920 0FB8                      u760 09B8  
                    u840 0B66                      u921 0FB4                      u761 09B4  
                    u841 0B62                      u930 0E98                      u770 09D4  
                    u850 0F16                      u771 09D0                      u851 0F12  
                    u940 0EAA                      u780 09FA                      u860 0F3E  
                    u941 0EA6                      u781 09F6                      u861 0F3A  
                    u790 0ADA                      u950 0A22                      u870 0C88  
                    u791 0AD6                      u951 0A1E                      u871 0C84  
                    u960 0A8E                      u880 0C9A                      u937 0E8E  
                    u961 0A8A                      u881 0C96                      u970 0A9C  
                    u890 0CA8                      u971 0A98                      u891 0CA4  
                    u980 1052                      u981 104E                      u990 0D64  
                    u991 0D60                      _cnt 001E             ___awmod@sign 000F  
                    wreg 0FE8                     l1301 0BEC                     l1311 0BF6  
                   l1303 0BEE                     l1321 0C04                     l1313 0BF8  
                   l1305 0BF0                     l1241 0B78                     l1323 0C06  
                   l1315 0BFA                     l1307 0BF2                     l1251 0BA0  
                   l1243 0B80                     l1317 0BFE                     l1309 0BF4  
                   l1261 0BBE                     l1253 0BA2                     l1245 0B8E  
                   l1501 0962                     l1319 0C02                     l1271 0BCC  
                   l1263 0BC4                     l1255 0BB4                     l1247 0B90  
                   l1511 0988                     l1503 0966                     l1281 0BD6  
                   l1273 0BCE                     l1265 0BC6                     l1257 0BB6  
                   l1249 0B9E                     l1601 0F8A                     l1521 09BE  
                   l1513 099A                     l1505 0974                     l1291 0BE0  
                   l1283 0BD8                     l1275 0BD0                     l1267 0BC8  
                   l1259 0BBA                     l1603 0F98                     l1611 0E60  
                   l1523 09D4                     l1515 09A2                     l1531 09EA  
                   l1507 097C                     l1293 0BE2                     l1285 0BDA  
                   l1277 0BD2                     l1269 0BCA                     l1605 0F9C  
                   l1533 09FA                     l1525 09DC                     l1517 09AA  
                   l1509 0980                     l1541 0ACC                     l1621 0A2E  
                   l1613 0A0C                     l1701 0888                     l1295 0BE6  
                   l1287 0BDC                     l1279 0BD4                     l1607 0FB8  
                   l1535 0A02                     l1527 09DE                     l1519 09B8  
                   l1551 0AFC                     l1543 0ADA                     l1631 0A8E  
                   l1623 0A3A                     l1615 0A14                     l1711 08DE  
                   l1703 08A2                     l1297 0BE8                     l1289 0BDE  
                   l1609 0E58                     l1529 09E4                     l1561 0B42  
                   l1553 0B0E                     l1545 0AE2                     l1481 0F42  
                   l1633 0A9C                     l1625 0A5C                     l1617 0A22  
                   l1641 1032                     l1721 0930                     l1801 06C4  
                   l1299 0BEA                     l1731 0768                     l1571 0B6E  
                   l1563 0B4A                     l1555 0B16                     l1547 0AE6  
                   l1539 0ACA                     l1491 0F6C                     l1483 0F46  
                   l1635 0AA8                     l1627 0A60                     l1619 0A26  
                   l1643 103A                     l1651 0D38                     l1723 0938  
                   l1715 08F2                     l1707 08AE                     l1811 0734  
                   l1803 06D8                     l1741 07C4                     l1733 076C  
                   l1565 0B50                     l1557 0B1E                     l1549 0AF4  
                   l1485 0F50                     l1493 0F6E                     l1637 0AAC  
                   l1629 0A7C                     l1645 103C                     l1581 0F1C  
                   l1661 0DA4                     l1653 0D44                     l1717 090E  
                   l1709 08C6                     l1805 06F6                     l1901 106C  
                   l1671 0C3C                     l1751 0820                     l1743 07CC  
                   l1735 0786                     l1727 075A                     l1495 094A  
                   l1559 0B2C                     l1567 0B56                     l1487 0F60  
                   l1639 0AB6                     l1591 0CA8                     l1647 1052  
                   l1583 0F3E                     l1575 0EFA                     l1663 0DAC  
                   l1655 0D4C                     l1719 0926                     l1807 070C  
                   l1903 107A                     l1673 0C50                     l1681 0C60  
                   l1753 0840                     l1737 07A6                     l1729 0762  
                   l1497 094C                     l1569 0B66                     l1489 0F6A  
                   l1593 0CBA                     l1577 0F16                     l1665 0DC4  
                   l1657 0D64                     l1809 0720                     l1595 0F82  
                   l1683 0C6A                     l1675 0C54                     l1667 0C0A  
                   l1755 0850                     l1747 07EA                     l1739 07C0  
                   l1499 095A                     l1587 0C76                     l1691 0E16  
                   l1659 0D98                     l1669 0C28                     l1589 0C88  
                   l1693 0E24                     l1781 062A                     l1695 0E2A  
                   l1687 0DF8                     l1791 0654                     l1783 0630  
                   l1697 0E4A                     l1689 0E08                     l1793 066C  
                   l1785 0634                     l1699 0876                     l1795 0680  
                   l1787 063C                     l1779 0626                     l1797 0698  
                   l1789 0650                     l1799 06AC                     l1895 1060  
                   l1897 1064                     l1899 1068                     STR_1 0601  
                   STR_2 0615                     STR_3 0622                     STR_4 0622  
                   STR_5 0622                     u1000 0D8E                     _CREN 7D5C  
                   u1001 0D8A                     u1010 0DC4                     u1011 0DC0  
                   u1100 07A6                     u1020 0DEE                     u1101 07A2  
                   u1021 0DEA                     u1030 0C28                     u1110 07C0  
                   u1031 0C24                     u1111 07BC                     u1120 07E6  
                   u1040 0E4A                     u1121 07E2                     u1041 0E46  
                   u1130 0840                     u1050 0888                     u1131 083C  
                   u1051 0884                     u1140 0850                     u1060 08A2  
                   u1220 06F6                     u1141 084C                     u1061 089E  
                   u1221 06F2                     u1070 08DE                     u1230 070C  
                   u1071 08DA                     u1231 0708                     u1080 0926  
                   u1240 0720                     u1081 0922                     u1241 071C  
                   u1090 0786                     u1250 0734                     u1091 0782  
                   u1251 0730                     _LATA 0F89                     _LATC 0F8B  
                   u1380 107A                     u1381 1076                     _RCIF 7CF5  
                   i1l82 0CFC                     i1l91 0D32                     i1l92 0D36  
                   i1l85 0D0E                     i1l89 0D24                     _atoi 075A  
                   _main 1060                     _itoa 0A0C                     fsr0h 0FEA  
                   fsr1h 0FE2                     indf0 0FEF                     fsr2h 0FDA  
                   fsr0l 0FE9                     indf1 0FE7                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     btemp 0023  
                   prodh 0FF4                     prodl 0FF3                     start 006C  
        __end_ofi1_putch 0D38          MyusartRead@data 0004             ___param_bank 0000  
                  ?_atoi 000A                    ?_main 0001                    ?_itoa 0012  
        __end_of___awdiv 0A0C          __end_of___awmod 0B78          ___awdiv@divisor 000C  
                  _T2CON 0FCA                    i1l101 0EF8                    i1l113 0054  
                  i2l123 0FFC          ___awdiv@counter 000E                    _RCREG 0FAE  
                  _H_ISR 0008                    _SPBRG 0FAF                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94                    _TXREG 0FAD  
                  atoi@n 0010                    atoi@s 000A                    _putch 0C74  
            _ClearBuffer 0F82                    itoa@i 0018                    itoa@n 0012  
                  itoa@s 0014                    tablat 0FF5          __end_of_reverse 0F82  
                  ttemp5 0024                    ttemp6 0027                    ttemp7 002B  
                  status 0FD8                    wtemp8 0024          __end_of_strcspn 0DF8  
          ??_ParsingData 001C          __initialization 1000             __end_of_atoi 0876  
           __end_of_main 1084             __end_of_itoa 0ACA               _Initialize 0B78  
                 ??_atoi 000C                   ??_main 001C            print_number@i 00E4  
                 ??_itoa 0015            __activetblptr 0002                   ?_H_ISR 0001  
       ___awdiv@dividend 000A                   ?_putch 0001                   i1l1821 0050  
                 i1l1815 002E                   i1l1761 0D0A                   i1l1817 003C  
                 i1l1763 0D1C                   i1l1819 004A                   i1l1757 0CD8  
                 i1l1773 0EDE                   i1l1765 0EAC                   i1l1759 0CEA  
                 i1l1775 0EEE                   i1l1767 0EB0                   i1l1777 0EF2  
                 i1l1769 0EC8                   i2l1371 0FC4                   i2l1381 0FF6  
                 i2l1373 0FD2                   i2l1383 0FFA                   i2l1375 0FE2  
                 i2l1377 0FE6                   i2l1379 0FE8                ??i1_putch 0002  
                 _Lo_ISR 0018                ??___awdiv 000E                ??___awmod 000E  
                 _buffer 0264                   clear_0 1006                   clear_1 1012  
                 clear_2 101E         ___awdiv@quotient 0010          ___awmod@divisor 000C  
                 isa$std 0001          ___awmod@counter 000E      __end_of_ParsingData 075A  
                 _strchr 0EFA                   _strcpy 0E58                   _strlen 1032  
                 _strtok 0876                   _strspn 0D38             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
              ??_reverse 000C                ??_strcspn 0011               __accesstop 0080  
__end_of__initialization 1024            ___rparam_used 0001            __end_of_H_ISR 1000  
      __end_of_GetString 0C74           __pcstackCOMRAM 0001              i1putch@data 0002  
            ?_Initialize 0001            __end_of_putch 0CD6                  ??_H_ISR 0001  
          ??_MyusartRead 0003                  ??_putch 000A               __pbssBANK2 0200  
             __pbssBANK3 0300                  ?_Lo_ISR 0001              _ParsingData 0626  
                ?_strchr 000A                  ?_strcpy 000A                  ?_strlen 000A  
                ?_strtok 0014                  ?_strspn 000E                  i2u57_40 0FD2  
                i2u57_41 0FCE                  i2u58_40 0FF6                  i2u58_41 0FF2  
             _btn_interr 0022             ?_ClearBuffer 0001      __end_of_MyusartRead 0EFA  
                i1_putch 0CD6                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 094A                  ___awmod 0ACA             __psmallconst 0600  
                __pcinit 1000                  __ramtop 0600                  __ptext0 1060  
                __ptext1 0626                  __ptext2 0876                  __ptext3 0D38  
                __ptext4 0D98                  __ptext5 0EFA                  __ptext6 0DF8  
                __ptext7 1032                  __ptext8 0C74                  __ptext9 0A0C  
              _T2CONbits 0FCA         ___awmod@dividend 000A                  _reverse 0F42  
                atoi@neg 000F                  _strcspn 0D98           __pintcode_body 0FC2  
   end_of_initialization 1024            __Lmediumconst 0000                  int_func 0FC2  
            reverse@last 000B                _RCSTAbits 0FAB                  postinc0 0FEE  
                postinc2 0FDE                  strchr@c 000B                  strchr@s 000A  
                strcpy@d 0010                  strlen@a 000C                  strlen@s 000A  
                strspn@c 0010                  strspn@i 0012                  strtok@p 001C  
                strtok@s 0014                  strspn@s 000E                _TRISAbits 0F92  
              _TRISCbits 0F94              _MyusartRead 0EAC            ?_print_number 001A  
            _CCP1CONbits 0FBD                _TXSTAbits 0FAC           __end_of_Lo_ISR 006C  
              _GetString 0C0A             ??_Initialize 000A              _BAUDCONbits 0FB8  
         __end_of_strchr 0F42           __end_of_strcpy 0EAC           __end_of_strlen 1060  
         __end_of_strtok 094A           __end_of_strspn 0D98      start_initialization 1000  
         ??_print_number 001C    output_total_dis@F3131 0200    output_total_dis@F3134 0300  
           ClearBuffer@i 000A     ParsingData@heartRate 01CA       __end_of_Initialize 0C0A  
               ??_Lo_ISR 0005             ?_ParsingData 0001               ?_GetString 0012  
        print_number@num 001A          print_number@tmp 0080                 ??_strchr 000D  
               ??_strcpy 000E                 ??_strlen 000C                 ??_strtok 0017  
               ??_strspn 0011              __pbssCOMRAM 001C            __pcstackBANK0 0080  
          __pcstackBANK1 0100                 ?i1_putch 0001         ParsingData@input 0164  
       ParsingData@token 01CE                __pintcode 0008                 ?___awdiv 000A  
               ?___awmod 000A              __pintcodelo 0018              __smallconst 0600  
               ?_reverse 000A                 ?_strcspn 000E                 _IPR1bits 0F9F  
               _PIE1bits 0F9D                 i1u120_20 0EC8                 i1u120_21 0EC4  
               i1u121_20 0EDA                 i1u121_21 0ED6                 i1u115_20 0CEA  
               i1u115_21 0CE6                 i1u116_20 0CFC                 i1u116_21 0CF8  
               i1u117_20 0D0A                 i1u117_21 0D06                 i1u118_20 0D1C  
               i1u126_20 003C                 i1u118_21 0D18                 i1u126_21 0038  
               i1u119_20 0D32                 i1u127_20 004A                 i1u119_21 0D2E  
               i1u127_21 0046               reverse@tmp 000C                 i2u139_47 0FD8  
               _PIR1bits 0F9E              _buffer_size 0020     __end_of_print_number 0E58  
               _RCONbits 0FD0              ??_GetString 0014               _ADCON0bits 0FC2  
             _ADCON1bits 0FC1               _ADCON2bits 0FC0             ?_MyusartRead 0001  
               __Hrparam 0000                 __Lrparam 0000          ParsingData@temp 01CC  
        ParsingData@step 01C8                 __ptext10 0F42                 __ptext11 0ACA  
               __ptext20 0CD6                 __ptext12 094A                 __ptext13 075A  
               __ptext14 0C0A                 __ptext15 0E58                 __ptext16 0F82  
               __ptext17 0B78                 __ptext19 0EAC             GetString@str 0012  
             strcpy@dest 000A                 isa$xinst 0000                 int$flags 0023  
              putch@data 000A               _INTCONbits 0FF2                 itoa@sign 0016  
          ??_ClearBuffer 000A                 intlevel1 0000                 intlevel2 0000  
           reverse@first 000A           ParsingData@str 0100                strcpy@src 000C  
             _OSCCONbits 0FD3                strtok@sep 0016                 strcspn@c 0010  
               strcspn@i 0012                 strcspn@s 000E             _print_number 0DF8  
    __end_of_ClearBuffer 0FC2  
