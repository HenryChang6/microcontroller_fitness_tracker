

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 16 07:08:07 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000FE0                     bsr             equ	4064
    71   000FE9                     fsr0            equ	4073
    72   000FEA                     fsr0h           equ	4074
    73   000FE9                     fsr0l           equ	4073
    74   000FE1                     fsr1            equ	4065
    75   000FE2                     fsr1h           equ	4066
    76   000FE1                     fsr1l           equ	4065
    77   000FD9                     fsr2            equ	4057
    78   000FDA                     fsr2h           equ	4058
    79   000FD9                     fsr2l           equ	4057
    80   000FEF                     indf0           equ	4079
    81   000FE7                     indf1           equ	4071
    82   000FDF                     indf2           equ	4063
    83   000FF2                     intcon          equ	4082
    84   000000                     nvmcon          equ	0
    85   000FF9                     pcl             equ	4089
    86   000FFA                     pclath          equ	4090
    87   000FFB                     pclatu          equ	4091
    88   000FEB                     plusw0          equ	4075
    89   000FE3                     plusw1          equ	4067
    90   000FDB                     plusw2          equ	4059
    91   000FED                     postdec0        equ	4077
    92   000FE5                     postdec1        equ	4069
    93   000FDD                     postdec2        equ	4061
    94   000FEE                     postinc0        equ	4078
    95   000FE6                     postinc1        equ	4070
    96   000FDE                     postinc2        equ	4062
    97   000FEC                     preinc0         equ	4076
    98   000FE4                     preinc1         equ	4068
    99   000FDC                     preinc2         equ	4060
   100   000FF3                     prod            equ	4083
   101   000FF4                     prodh           equ	4084
   102   000FF3                     prodl           equ	4083
   103   000FD8                     status          equ	4056
   104   000FF5                     tablat          equ	4085
   105   000FF6                     tblptr          equ	4086
   106   000FF7                     tblptrh         equ	4087
   107   000FF6                     tblptrl         equ	4086
   108   000FF8                     tblptru         equ	4088
   109   000FFD                     tosl            equ	4093
   110   000FE8                     wreg            equ	4072
   111   000F80                     PORTA           equ	3968	;# 
   112   000F81                     PORTB           equ	3969	;# 
   113   000F82                     PORTC           equ	3970	;# 
   114   000F83                     PORTD           equ	3971	;# 
   115   000F84                     PORTE           equ	3972	;# 
   116   000F89                     LATA            equ	3977	;# 
   117   000F8A                     LATB            equ	3978	;# 
   118   000F8B                     LATC            equ	3979	;# 
   119   000F8C                     LATD            equ	3980	;# 
   120   000F8D                     LATE            equ	3981	;# 
   121   000F92                     TRISA           equ	3986	;# 
   122   000F92                     DDRA            equ	3986	;# 
   123   000F93                     TRISB           equ	3987	;# 
   124   000F93                     DDRB            equ	3987	;# 
   125   000F94                     TRISC           equ	3988	;# 
   126   000F94                     DDRC            equ	3988	;# 
   127   000F95                     TRISD           equ	3989	;# 
   128   000F95                     DDRD            equ	3989	;# 
   129   000F96                     TRISE           equ	3990	;# 
   130   000F96                     DDRE            equ	3990	;# 
   131   000F9B                     OSCTUNE         equ	3995	;# 
   132   000F9D                     PIE1            equ	3997	;# 
   133   000F9E                     PIR1            equ	3998	;# 
   134   000F9F                     IPR1            equ	3999	;# 
   135   000FA0                     PIE2            equ	4000	;# 
   136   000FA1                     PIR2            equ	4001	;# 
   137   000FA2                     IPR2            equ	4002	;# 
   138   000FA6                     EECON1          equ	4006	;# 
   139   000FA7                     EECON2          equ	4007	;# 
   140   000FA8                     EEDATA          equ	4008	;# 
   141   000FA9                     EEADR           equ	4009	;# 
   142   000FAB                     RCSTA           equ	4011	;# 
   143   000FAB                     RCSTA1          equ	4011	;# 
   144   000FAC                     TXSTA           equ	4012	;# 
   145   000FAC                     TXSTA1          equ	4012	;# 
   146   000FAD                     TXREG           equ	4013	;# 
   147   000FAD                     TXREG1          equ	4013	;# 
   148   000FAE                     RCREG           equ	4014	;# 
   149   000FAE                     RCREG1          equ	4014	;# 
   150   000FAF                     SPBRG           equ	4015	;# 
   151   000FAF                     SPBRG1          equ	4015	;# 
   152   000FB0                     SPBRGH          equ	4016	;# 
   153   000FB1                     T3CON           equ	4017	;# 
   154   000FB2                     TMR3            equ	4018	;# 
   155   000FB2                     TMR3L           equ	4018	;# 
   156   000FB3                     TMR3H           equ	4019	;# 
   157   000FB4                     CMCON           equ	4020	;# 
   158   000FB5                     CVRCON          equ	4021	;# 
   159   000FB6                     ECCP1AS         equ	4022	;# 
   160   000FB6                     ECCPAS          equ	4022	;# 
   161   000FB7                     PWM1CON         equ	4023	;# 
   162   000FB7                     ECCP1DEL        equ	4023	;# 
   163   000FB8                     BAUDCON         equ	4024	;# 
   164   000FB8                     BAUDCTL         equ	4024	;# 
   165   000FBA                     CCP2CON         equ	4026	;# 
   166   000FBB                     CCPR2           equ	4027	;# 
   167   000FBB                     CCPR2L          equ	4027	;# 
   168   000FBC                     CCPR2H          equ	4028	;# 
   169   000FBD                     CCP1CON         equ	4029	;# 
   170   000FBE                     CCPR1           equ	4030	;# 
   171   000FBE                     CCPR1L          equ	4030	;# 
   172   000FBF                     CCPR1H          equ	4031	;# 
   173   000FC0                     ADCON2          equ	4032	;# 
   174   000FC1                     ADCON1          equ	4033	;# 
   175   000FC2                     ADCON0          equ	4034	;# 
   176   000FC3                     ADRES           equ	4035	;# 
   177   000FC3                     ADRESL          equ	4035	;# 
   178   000FC4                     ADRESH          equ	4036	;# 
   179   000FC5                     SSPCON2         equ	4037	;# 
   180   000FC6                     SSPCON1         equ	4038	;# 
   181   000FC7                     SSPSTAT         equ	4039	;# 
   182   000FC8                     SSPADD          equ	4040	;# 
   183   000FC9                     SSPBUF          equ	4041	;# 
   184   000FCA                     T2CON           equ	4042	;# 
   185   000FCB                     PR2             equ	4043	;# 
   186   000FCB                     MEMCON          equ	4043	;# 
   187   000FCC                     TMR2            equ	4044	;# 
   188   000FCD                     T1CON           equ	4045	;# 
   189   000FCE                     TMR1            equ	4046	;# 
   190   000FCE                     TMR1L           equ	4046	;# 
   191   000FCF                     TMR1H           equ	4047	;# 
   192   000FD0                     RCON            equ	4048	;# 
   193   000FD1                     WDTCON          equ	4049	;# 
   194   000FD2                     HLVDCON         equ	4050	;# 
   195   000FD2                     LVDCON          equ	4050	;# 
   196   000FD3                     OSCCON          equ	4051	;# 
   197   000FD5                     T0CON           equ	4053	;# 
   198   000FD6                     TMR0            equ	4054	;# 
   199   000FD6                     TMR0L           equ	4054	;# 
   200   000FD7                     TMR0H           equ	4055	;# 
   201   000FD8                     STATUS          equ	4056	;# 
   202   000FD9                     FSR2            equ	4057	;# 
   203   000FD9                     FSR2L           equ	4057	;# 
   204   000FDA                     FSR2H           equ	4058	;# 
   205   000FDB                     PLUSW2          equ	4059	;# 
   206   000FDC                     PREINC2         equ	4060	;# 
   207   000FDD                     POSTDEC2        equ	4061	;# 
   208   000FDE                     POSTINC2        equ	4062	;# 
   209   000FDF                     INDF2           equ	4063	;# 
   210   000FE0                     BSR             equ	4064	;# 
   211   000FE1                     FSR1            equ	4065	;# 
   212   000FE1                     FSR1L           equ	4065	;# 
   213   000FE2                     FSR1H           equ	4066	;# 
   214   000FE3                     PLUSW1          equ	4067	;# 
   215   000FE4                     PREINC1         equ	4068	;# 
   216   000FE5                     POSTDEC1        equ	4069	;# 
   217   000FE6                     POSTINC1        equ	4070	;# 
   218   000FE7                     INDF1           equ	4071	;# 
   219   000FE8                     WREG            equ	4072	;# 
   220   000FE9                     FSR0            equ	4073	;# 
   221   000FE9                     FSR0L           equ	4073	;# 
   222   000FEA                     FSR0H           equ	4074	;# 
   223   000FEB                     PLUSW0          equ	4075	;# 
   224   000FEC                     PREINC0         equ	4076	;# 
   225   000FED                     POSTDEC0        equ	4077	;# 
   226   000FEE                     POSTINC0        equ	4078	;# 
   227   000FEF                     INDF0           equ	4079	;# 
   228   000FF0                     INTCON3         equ	4080	;# 
   229   000FF1                     INTCON2         equ	4081	;# 
   230   000FF2                     INTCON          equ	4082	;# 
   231   000FF3                     PROD            equ	4083	;# 
   232   000FF3                     PRODL           equ	4083	;# 
   233   000FF4                     PRODH           equ	4084	;# 
   234   000FF5                     TABLAT          equ	4085	;# 
   235   000FF6                     TBLPTR          equ	4086	;# 
   236   000FF6                     TBLPTRL         equ	4086	;# 
   237   000FF7                     TBLPTRH         equ	4087	;# 
   238   000FF8                     TBLPTRU         equ	4088	;# 
   239   000FF9                     PCLAT           equ	4089	;# 
   240   000FF9                     PC              equ	4089	;# 
   241   000FF9                     PCL             equ	4089	;# 
   242   000FFA                     PCLATH          equ	4090	;# 
   243   000FFB                     PCLATU          equ	4091	;# 
   244   000FFC                     STKPTR          equ	4092	;# 
   245   000FFD                     TOS             equ	4093	;# 
   246   000FFD                     TOSL            equ	4093	;# 
   247   000FFE                     TOSH            equ	4094	;# 
   248   000FFF                     TOSU            equ	4095	;# 
   249   000F80                     PORTA           equ	3968	;# 
   250   000F81                     PORTB           equ	3969	;# 
   251   000F82                     PORTC           equ	3970	;# 
   252   000F83                     PORTD           equ	3971	;# 
   253   000F84                     PORTE           equ	3972	;# 
   254   000F89                     LATA            equ	3977	;# 
   255   000F8A                     LATB            equ	3978	;# 
   256   000F8B                     LATC            equ	3979	;# 
   257   000F8C                     LATD            equ	3980	;# 
   258   000F8D                     LATE            equ	3981	;# 
   259   000F92                     TRISA           equ	3986	;# 
   260   000F92                     DDRA            equ	3986	;# 
   261   000F93                     TRISB           equ	3987	;# 
   262   000F93                     DDRB            equ	3987	;# 
   263   000F94                     TRISC           equ	3988	;# 
   264   000F94                     DDRC            equ	3988	;# 
   265   000F95                     TRISD           equ	3989	;# 
   266   000F95                     DDRD            equ	3989	;# 
   267   000F96                     TRISE           equ	3990	;# 
   268   000F96                     DDRE            equ	3990	;# 
   269   000F9B                     OSCTUNE         equ	3995	;# 
   270   000F9D                     PIE1            equ	3997	;# 
   271   000F9E                     PIR1            equ	3998	;# 
   272   000F9F                     IPR1            equ	3999	;# 
   273   000FA0                     PIE2            equ	4000	;# 
   274   000FA1                     PIR2            equ	4001	;# 
   275   000FA2                     IPR2            equ	4002	;# 
   276   000FA6                     EECON1          equ	4006	;# 
   277   000FA7                     EECON2          equ	4007	;# 
   278   000FA8                     EEDATA          equ	4008	;# 
   279   000FA9                     EEADR           equ	4009	;# 
   280   000FAB                     RCSTA           equ	4011	;# 
   281   000FAB                     RCSTA1          equ	4011	;# 
   282   000FAC                     TXSTA           equ	4012	;# 
   283   000FAC                     TXSTA1          equ	4012	;# 
   284   000FAD                     TXREG           equ	4013	;# 
   285   000FAD                     TXREG1          equ	4013	;# 
   286   000FAE                     RCREG           equ	4014	;# 
   287   000FAE                     RCREG1          equ	4014	;# 
   288   000FAF                     SPBRG           equ	4015	;# 
   289   000FAF                     SPBRG1          equ	4015	;# 
   290   000FB0                     SPBRGH          equ	4016	;# 
   291   000FB1                     T3CON           equ	4017	;# 
   292   000FB2                     TMR3            equ	4018	;# 
   293   000FB2                     TMR3L           equ	4018	;# 
   294   000FB3                     TMR3H           equ	4019	;# 
   295   000FB4                     CMCON           equ	4020	;# 
   296   000FB5                     CVRCON          equ	4021	;# 
   297   000FB6                     ECCP1AS         equ	4022	;# 
   298   000FB6                     ECCPAS          equ	4022	;# 
   299   000FB7                     PWM1CON         equ	4023	;# 
   300   000FB7                     ECCP1DEL        equ	4023	;# 
   301   000FB8                     BAUDCON         equ	4024	;# 
   302   000FB8                     BAUDCTL         equ	4024	;# 
   303   000FBA                     CCP2CON         equ	4026	;# 
   304   000FBB                     CCPR2           equ	4027	;# 
   305   000FBB                     CCPR2L          equ	4027	;# 
   306   000FBC                     CCPR2H          equ	4028	;# 
   307   000FBD                     CCP1CON         equ	4029	;# 
   308   000FBE                     CCPR1           equ	4030	;# 
   309   000FBE                     CCPR1L          equ	4030	;# 
   310   000FBF                     CCPR1H          equ	4031	;# 
   311   000FC0                     ADCON2          equ	4032	;# 
   312   000FC1                     ADCON1          equ	4033	;# 
   313   000FC2                     ADCON0          equ	4034	;# 
   314   000FC3                     ADRES           equ	4035	;# 
   315   000FC3                     ADRESL          equ	4035	;# 
   316   000FC4                     ADRESH          equ	4036	;# 
   317   000FC5                     SSPCON2         equ	4037	;# 
   318   000FC6                     SSPCON1         equ	4038	;# 
   319   000FC7                     SSPSTAT         equ	4039	;# 
   320   000FC8                     SSPADD          equ	4040	;# 
   321   000FC9                     SSPBUF          equ	4041	;# 
   322   000FCA                     T2CON           equ	4042	;# 
   323   000FCB                     PR2             equ	4043	;# 
   324   000FCB                     MEMCON          equ	4043	;# 
   325   000FCC                     TMR2            equ	4044	;# 
   326   000FCD                     T1CON           equ	4045	;# 
   327   000FCE                     TMR1            equ	4046	;# 
   328   000FCE                     TMR1L           equ	4046	;# 
   329   000FCF                     TMR1H           equ	4047	;# 
   330   000FD0                     RCON            equ	4048	;# 
   331   000FD1                     WDTCON          equ	4049	;# 
   332   000FD2                     HLVDCON         equ	4050	;# 
   333   000FD2                     LVDCON          equ	4050	;# 
   334   000FD3                     OSCCON          equ	4051	;# 
   335   000FD5                     T0CON           equ	4053	;# 
   336   000FD6                     TMR0            equ	4054	;# 
   337   000FD6                     TMR0L           equ	4054	;# 
   338   000FD7                     TMR0H           equ	4055	;# 
   339   000FD8                     STATUS          equ	4056	;# 
   340   000FD9                     FSR2            equ	4057	;# 
   341   000FD9                     FSR2L           equ	4057	;# 
   342   000FDA                     FSR2H           equ	4058	;# 
   343   000FDB                     PLUSW2          equ	4059	;# 
   344   000FDC                     PREINC2         equ	4060	;# 
   345   000FDD                     POSTDEC2        equ	4061	;# 
   346   000FDE                     POSTINC2        equ	4062	;# 
   347   000FDF                     INDF2           equ	4063	;# 
   348   000FE0                     BSR             equ	4064	;# 
   349   000FE1                     FSR1            equ	4065	;# 
   350   000FE1                     FSR1L           equ	4065	;# 
   351   000FE2                     FSR1H           equ	4066	;# 
   352   000FE3                     PLUSW1          equ	4067	;# 
   353   000FE4                     PREINC1         equ	4068	;# 
   354   000FE5                     POSTDEC1        equ	4069	;# 
   355   000FE6                     POSTINC1        equ	4070	;# 
   356   000FE7                     INDF1           equ	4071	;# 
   357   000FE8                     WREG            equ	4072	;# 
   358   000FE9                     FSR0            equ	4073	;# 
   359   000FE9                     FSR0L           equ	4073	;# 
   360   000FEA                     FSR0H           equ	4074	;# 
   361   000FEB                     PLUSW0          equ	4075	;# 
   362   000FEC                     PREINC0         equ	4076	;# 
   363   000FED                     POSTDEC0        equ	4077	;# 
   364   000FEE                     POSTINC0        equ	4078	;# 
   365   000FEF                     INDF0           equ	4079	;# 
   366   000FF0                     INTCON3         equ	4080	;# 
   367   000FF1                     INTCON2         equ	4081	;# 
   368   000FF2                     INTCON          equ	4082	;# 
   369   000FF3                     PROD            equ	4083	;# 
   370   000FF3                     PRODL           equ	4083	;# 
   371   000FF4                     PRODH           equ	4084	;# 
   372   000FF5                     TABLAT          equ	4085	;# 
   373   000FF6                     TBLPTR          equ	4086	;# 
   374   000FF6                     TBLPTRL         equ	4086	;# 
   375   000FF7                     TBLPTRH         equ	4087	;# 
   376   000FF8                     TBLPTRU         equ	4088	;# 
   377   000FF9                     PCLAT           equ	4089	;# 
   378   000FF9                     PC              equ	4089	;# 
   379   000FF9                     PCL             equ	4089	;# 
   380   000FFA                     PCLATH          equ	4090	;# 
   381   000FFB                     PCLATU          equ	4091	;# 
   382   000FFC                     STKPTR          equ	4092	;# 
   383   000FFD                     TOS             equ	4093	;# 
   384   000FFD                     TOSL            equ	4093	;# 
   385   000FFE                     TOSH            equ	4094	;# 
   386   000FFF                     TOSU            equ	4095	;# 
   387   000F80                     PORTA           equ	3968	;# 
   388   000F81                     PORTB           equ	3969	;# 
   389   000F82                     PORTC           equ	3970	;# 
   390   000F83                     PORTD           equ	3971	;# 
   391   000F84                     PORTE           equ	3972	;# 
   392   000F89                     LATA            equ	3977	;# 
   393   000F8A                     LATB            equ	3978	;# 
   394   000F8B                     LATC            equ	3979	;# 
   395   000F8C                     LATD            equ	3980	;# 
   396   000F8D                     LATE            equ	3981	;# 
   397   000F92                     TRISA           equ	3986	;# 
   398   000F92                     DDRA            equ	3986	;# 
   399   000F93                     TRISB           equ	3987	;# 
   400   000F93                     DDRB            equ	3987	;# 
   401   000F94                     TRISC           equ	3988	;# 
   402   000F94                     DDRC            equ	3988	;# 
   403   000F95                     TRISD           equ	3989	;# 
   404   000F95                     DDRD            equ	3989	;# 
   405   000F96                     TRISE           equ	3990	;# 
   406   000F96                     DDRE            equ	3990	;# 
   407   000F9B                     OSCTUNE         equ	3995	;# 
   408   000F9D                     PIE1            equ	3997	;# 
   409   000F9E                     PIR1            equ	3998	;# 
   410   000F9F                     IPR1            equ	3999	;# 
   411   000FA0                     PIE2            equ	4000	;# 
   412   000FA1                     PIR2            equ	4001	;# 
   413   000FA2                     IPR2            equ	4002	;# 
   414   000FA6                     EECON1          equ	4006	;# 
   415   000FA7                     EECON2          equ	4007	;# 
   416   000FA8                     EEDATA          equ	4008	;# 
   417   000FA9                     EEADR           equ	4009	;# 
   418   000FAB                     RCSTA           equ	4011	;# 
   419   000FAB                     RCSTA1          equ	4011	;# 
   420   000FAC                     TXSTA           equ	4012	;# 
   421   000FAC                     TXSTA1          equ	4012	;# 
   422   000FAD                     TXREG           equ	4013	;# 
   423   000FAD                     TXREG1          equ	4013	;# 
   424   000FAE                     RCREG           equ	4014	;# 
   425   000FAE                     RCREG1          equ	4014	;# 
   426   000FAF                     SPBRG           equ	4015	;# 
   427   000FAF                     SPBRG1          equ	4015	;# 
   428   000FB0                     SPBRGH          equ	4016	;# 
   429   000FB1                     T3CON           equ	4017	;# 
   430   000FB2                     TMR3            equ	4018	;# 
   431   000FB2                     TMR3L           equ	4018	;# 
   432   000FB3                     TMR3H           equ	4019	;# 
   433   000FB4                     CMCON           equ	4020	;# 
   434   000FB5                     CVRCON          equ	4021	;# 
   435   000FB6                     ECCP1AS         equ	4022	;# 
   436   000FB6                     ECCPAS          equ	4022	;# 
   437   000FB7                     PWM1CON         equ	4023	;# 
   438   000FB7                     ECCP1DEL        equ	4023	;# 
   439   000FB8                     BAUDCON         equ	4024	;# 
   440   000FB8                     BAUDCTL         equ	4024	;# 
   441   000FBA                     CCP2CON         equ	4026	;# 
   442   000FBB                     CCPR2           equ	4027	;# 
   443   000FBB                     CCPR2L          equ	4027	;# 
   444   000FBC                     CCPR2H          equ	4028	;# 
   445   000FBD                     CCP1CON         equ	4029	;# 
   446   000FBE                     CCPR1           equ	4030	;# 
   447   000FBE                     CCPR1L          equ	4030	;# 
   448   000FBF                     CCPR1H          equ	4031	;# 
   449   000FC0                     ADCON2          equ	4032	;# 
   450   000FC1                     ADCON1          equ	4033	;# 
   451   000FC2                     ADCON0          equ	4034	;# 
   452   000FC3                     ADRES           equ	4035	;# 
   453   000FC3                     ADRESL          equ	4035	;# 
   454   000FC4                     ADRESH          equ	4036	;# 
   455   000FC5                     SSPCON2         equ	4037	;# 
   456   000FC6                     SSPCON1         equ	4038	;# 
   457   000FC7                     SSPSTAT         equ	4039	;# 
   458   000FC8                     SSPADD          equ	4040	;# 
   459   000FC9                     SSPBUF          equ	4041	;# 
   460   000FCA                     T2CON           equ	4042	;# 
   461   000FCB                     PR2             equ	4043	;# 
   462   000FCB                     MEMCON          equ	4043	;# 
   463   000FCC                     TMR2            equ	4044	;# 
   464   000FCD                     T1CON           equ	4045	;# 
   465   000FCE                     TMR1            equ	4046	;# 
   466   000FCE                     TMR1L           equ	4046	;# 
   467   000FCF                     TMR1H           equ	4047	;# 
   468   000FD0                     RCON            equ	4048	;# 
   469   000FD1                     WDTCON          equ	4049	;# 
   470   000FD2                     HLVDCON         equ	4050	;# 
   471   000FD2                     LVDCON          equ	4050	;# 
   472   000FD3                     OSCCON          equ	4051	;# 
   473   000FD5                     T0CON           equ	4053	;# 
   474   000FD6                     TMR0            equ	4054	;# 
   475   000FD6                     TMR0L           equ	4054	;# 
   476   000FD7                     TMR0H           equ	4055	;# 
   477   000FD8                     STATUS          equ	4056	;# 
   478   000FD9                     FSR2            equ	4057	;# 
   479   000FD9                     FSR2L           equ	4057	;# 
   480   000FDA                     FSR2H           equ	4058	;# 
   481   000FDB                     PLUSW2          equ	4059	;# 
   482   000FDC                     PREINC2         equ	4060	;# 
   483   000FDD                     POSTDEC2        equ	4061	;# 
   484   000FDE                     POSTINC2        equ	4062	;# 
   485   000FDF                     INDF2           equ	4063	;# 
   486   000FE0                     BSR             equ	4064	;# 
   487   000FE1                     FSR1            equ	4065	;# 
   488   000FE1                     FSR1L           equ	4065	;# 
   489   000FE2                     FSR1H           equ	4066	;# 
   490   000FE3                     PLUSW1          equ	4067	;# 
   491   000FE4                     PREINC1         equ	4068	;# 
   492   000FE5                     POSTDEC1        equ	4069	;# 
   493   000FE6                     POSTINC1        equ	4070	;# 
   494   000FE7                     INDF1           equ	4071	;# 
   495   000FE8                     WREG            equ	4072	;# 
   496   000FE9                     FSR0            equ	4073	;# 
   497   000FE9                     FSR0L           equ	4073	;# 
   498   000FEA                     FSR0H           equ	4074	;# 
   499   000FEB                     PLUSW0          equ	4075	;# 
   500   000FEC                     PREINC0         equ	4076	;# 
   501   000FED                     POSTDEC0        equ	4077	;# 
   502   000FEE                     POSTINC0        equ	4078	;# 
   503   000FEF                     INDF0           equ	4079	;# 
   504   000FF0                     INTCON3         equ	4080	;# 
   505   000FF1                     INTCON2         equ	4081	;# 
   506   000FF2                     INTCON          equ	4082	;# 
   507   000FF3                     PROD            equ	4083	;# 
   508   000FF3                     PRODL           equ	4083	;# 
   509   000FF4                     PRODH           equ	4084	;# 
   510   000FF5                     TABLAT          equ	4085	;# 
   511   000FF6                     TBLPTR          equ	4086	;# 
   512   000FF6                     TBLPTRL         equ	4086	;# 
   513   000FF7                     TBLPTRH         equ	4087	;# 
   514   000FF8                     TBLPTRU         equ	4088	;# 
   515   000FF9                     PCLAT           equ	4089	;# 
   516   000FF9                     PC              equ	4089	;# 
   517   000FF9                     PCL             equ	4089	;# 
   518   000FFA                     PCLATH          equ	4090	;# 
   519   000FFB                     PCLATU          equ	4091	;# 
   520   000FFC                     STKPTR          equ	4092	;# 
   521   000FFD                     TOS             equ	4093	;# 
   522   000FFD                     TOSL            equ	4093	;# 
   523   000FFE                     TOSH            equ	4094	;# 
   524   000FFF                     TOSU            equ	4095	;# 
   525   000F80                     PORTA           equ	3968	;# 
   526   000F81                     PORTB           equ	3969	;# 
   527   000F82                     PORTC           equ	3970	;# 
   528   000F83                     PORTD           equ	3971	;# 
   529   000F84                     PORTE           equ	3972	;# 
   530   000F89                     LATA            equ	3977	;# 
   531   000F8A                     LATB            equ	3978	;# 
   532   000F8B                     LATC            equ	3979	;# 
   533   000F8C                     LATD            equ	3980	;# 
   534   000F8D                     LATE            equ	3981	;# 
   535   000F92                     TRISA           equ	3986	;# 
   536   000F92                     DDRA            equ	3986	;# 
   537   000F93                     TRISB           equ	3987	;# 
   538   000F93                     DDRB            equ	3987	;# 
   539   000F94                     TRISC           equ	3988	;# 
   540   000F94                     DDRC            equ	3988	;# 
   541   000F95                     TRISD           equ	3989	;# 
   542   000F95                     DDRD            equ	3989	;# 
   543   000F96                     TRISE           equ	3990	;# 
   544   000F96                     DDRE            equ	3990	;# 
   545   000F9B                     OSCTUNE         equ	3995	;# 
   546   000F9D                     PIE1            equ	3997	;# 
   547   000F9E                     PIR1            equ	3998	;# 
   548   000F9F                     IPR1            equ	3999	;# 
   549   000FA0                     PIE2            equ	4000	;# 
   550   000FA1                     PIR2            equ	4001	;# 
   551   000FA2                     IPR2            equ	4002	;# 
   552   000FA6                     EECON1          equ	4006	;# 
   553   000FA7                     EECON2          equ	4007	;# 
   554   000FA8                     EEDATA          equ	4008	;# 
   555   000FA9                     EEADR           equ	4009	;# 
   556   000FAB                     RCSTA           equ	4011	;# 
   557   000FAB                     RCSTA1          equ	4011	;# 
   558   000FAC                     TXSTA           equ	4012	;# 
   559   000FAC                     TXSTA1          equ	4012	;# 
   560   000FAD                     TXREG           equ	4013	;# 
   561   000FAD                     TXREG1          equ	4013	;# 
   562   000FAE                     RCREG           equ	4014	;# 
   563   000FAE                     RCREG1          equ	4014	;# 
   564   000FAF                     SPBRG           equ	4015	;# 
   565   000FAF                     SPBRG1          equ	4015	;# 
   566   000FB0                     SPBRGH          equ	4016	;# 
   567   000FB1                     T3CON           equ	4017	;# 
   568   000FB2                     TMR3            equ	4018	;# 
   569   000FB2                     TMR3L           equ	4018	;# 
   570   000FB3                     TMR3H           equ	4019	;# 
   571   000FB4                     CMCON           equ	4020	;# 
   572   000FB5                     CVRCON          equ	4021	;# 
   573   000FB6                     ECCP1AS         equ	4022	;# 
   574   000FB6                     ECCPAS          equ	4022	;# 
   575   000FB7                     PWM1CON         equ	4023	;# 
   576   000FB7                     ECCP1DEL        equ	4023	;# 
   577   000FB8                     BAUDCON         equ	4024	;# 
   578   000FB8                     BAUDCTL         equ	4024	;# 
   579   000FBA                     CCP2CON         equ	4026	;# 
   580   000FBB                     CCPR2           equ	4027	;# 
   581   000FBB                     CCPR2L          equ	4027	;# 
   582   000FBC                     CCPR2H          equ	4028	;# 
   583   000FBD                     CCP1CON         equ	4029	;# 
   584   000FBE                     CCPR1           equ	4030	;# 
   585   000FBE                     CCPR1L          equ	4030	;# 
   586   000FBF                     CCPR1H          equ	4031	;# 
   587   000FC0                     ADCON2          equ	4032	;# 
   588   000FC1                     ADCON1          equ	4033	;# 
   589   000FC2                     ADCON0          equ	4034	;# 
   590   000FC3                     ADRES           equ	4035	;# 
   591   000FC3                     ADRESL          equ	4035	;# 
   592   000FC4                     ADRESH          equ	4036	;# 
   593   000FC5                     SSPCON2         equ	4037	;# 
   594   000FC6                     SSPCON1         equ	4038	;# 
   595   000FC7                     SSPSTAT         equ	4039	;# 
   596   000FC8                     SSPADD          equ	4040	;# 
   597   000FC9                     SSPBUF          equ	4041	;# 
   598   000FCA                     T2CON           equ	4042	;# 
   599   000FCB                     PR2             equ	4043	;# 
   600   000FCB                     MEMCON          equ	4043	;# 
   601   000FCC                     TMR2            equ	4044	;# 
   602   000FCD                     T1CON           equ	4045	;# 
   603   000FCE                     TMR1            equ	4046	;# 
   604   000FCE                     TMR1L           equ	4046	;# 
   605   000FCF                     TMR1H           equ	4047	;# 
   606   000FD0                     RCON            equ	4048	;# 
   607   000FD1                     WDTCON          equ	4049	;# 
   608   000FD2                     HLVDCON         equ	4050	;# 
   609   000FD2                     LVDCON          equ	4050	;# 
   610   000FD3                     OSCCON          equ	4051	;# 
   611   000FD5                     T0CON           equ	4053	;# 
   612   000FD6                     TMR0            equ	4054	;# 
   613   000FD6                     TMR0L           equ	4054	;# 
   614   000FD7                     TMR0H           equ	4055	;# 
   615   000FD8                     STATUS          equ	4056	;# 
   616   000FD9                     FSR2            equ	4057	;# 
   617   000FD9                     FSR2L           equ	4057	;# 
   618   000FDA                     FSR2H           equ	4058	;# 
   619   000FDB                     PLUSW2          equ	4059	;# 
   620   000FDC                     PREINC2         equ	4060	;# 
   621   000FDD                     POSTDEC2        equ	4061	;# 
   622   000FDE                     POSTINC2        equ	4062	;# 
   623   000FDF                     INDF2           equ	4063	;# 
   624   000FE0                     BSR             equ	4064	;# 
   625   000FE1                     FSR1            equ	4065	;# 
   626   000FE1                     FSR1L           equ	4065	;# 
   627   000FE2                     FSR1H           equ	4066	;# 
   628   000FE3                     PLUSW1          equ	4067	;# 
   629   000FE4                     PREINC1         equ	4068	;# 
   630   000FE5                     POSTDEC1        equ	4069	;# 
   631   000FE6                     POSTINC1        equ	4070	;# 
   632   000FE7                     INDF1           equ	4071	;# 
   633   000FE8                     WREG            equ	4072	;# 
   634   000FE9                     FSR0            equ	4073	;# 
   635   000FE9                     FSR0L           equ	4073	;# 
   636   000FEA                     FSR0H           equ	4074	;# 
   637   000FEB                     PLUSW0          equ	4075	;# 
   638   000FEC                     PREINC0         equ	4076	;# 
   639   000FED                     POSTDEC0        equ	4077	;# 
   640   000FEE                     POSTINC0        equ	4078	;# 
   641   000FEF                     INDF0           equ	4079	;# 
   642   000FF0                     INTCON3         equ	4080	;# 
   643   000FF1                     INTCON2         equ	4081	;# 
   644   000FF2                     INTCON          equ	4082	;# 
   645   000FF3                     PROD            equ	4083	;# 
   646   000FF3                     PRODL           equ	4083	;# 
   647   000FF4                     PRODH           equ	4084	;# 
   648   000FF5                     TABLAT          equ	4085	;# 
   649   000FF6                     TBLPTR          equ	4086	;# 
   650   000FF6                     TBLPTRL         equ	4086	;# 
   651   000FF7                     TBLPTRH         equ	4087	;# 
   652   000FF8                     TBLPTRU         equ	4088	;# 
   653   000FF9                     PCLAT           equ	4089	;# 
   654   000FF9                     PC              equ	4089	;# 
   655   000FF9                     PCL             equ	4089	;# 
   656   000FFA                     PCLATH          equ	4090	;# 
   657   000FFB                     PCLATU          equ	4091	;# 
   658   000FFC                     STKPTR          equ	4092	;# 
   659   000FFD                     TOS             equ	4093	;# 
   660   000FFD                     TOSL            equ	4093	;# 
   661   000FFE                     TOSH            equ	4094	;# 
   662   000FFF                     TOSU            equ	4095	;# 
   663   007D5C                     _CREN           set	32092
   664   007CF5                     _RCIF           set	31989
   665   000FAE                     _RCREG          set	4014
   666   000FAD                     _TXREG          set	4013
   667   000FCA                     _T2CON          set	4042
   668   000F9F                     _IPR1bits       set	3999
   669   000FAF                     _SPBRG          set	4015
   670   000FB8                     _BAUDCONbits    set	4024
   671   000FAC                     _TXSTAbits      set	4012
   672   000FD0                     _RCONbits       set	4048
   673   000F9D                     _PIE1bits       set	3997
   674   000F8B                     _LATC           set	3979
   675   000F89                     _LATA           set	3977
   676   000F94                     _TRISC          set	3988
   677   000F93                     _TRISB          set	3987
   678   000F92                     _TRISA          set	3986
   679   000F94                     _TRISCbits      set	3988
   680   000FCB                     _PR2            set	4043
   681   000FBD                     _CCP1CONbits    set	4029
   682   000FCA                     _T2CONbits      set	4042
   683   000FC0                     _ADCON2bits     set	4032
   684   000FC1                     _ADCON1bits     set	4033
   685   000F92                     _TRISAbits      set	3986
   686   000FD3                     _OSCCONbits     set	4051
   687   000FC2                     _ADCON0bits     set	4034
   688   000F9E                     _PIR1bits       set	3998
   689   000FF2                     _INTCONbits     set	4082
   690   000FAB                     _RCSTAbits      set	4011
   691                           
   692                           	psect	smallconst
   693   000600                     __psmallconst:
   694                           	callstack 0
   695   000600  00                 	db	0
   696   000601                     STR_3:
   697   000601  20                 	db	32
   698   000602  00                 	db	0
   699   000603                     STR_1:
   700   000603  30                 	db	48	;'0'
   701   000604  00                 	db	0
   702   000603                     STR_2           equ	STR_1
   703   000601                     STR_4           equ	STR_3
   704   000601                     STR_5           equ	STR_3
   705   000605  00                 	db	0	; dummy byte at the end
   706   000002                     __activetblptr  equ	2
   707                           
   708                           ; #config settings
   709                           
   710                           	psect	cinit
   711   000C48                     __pcinit:
   712                           	callstack 0
   713   000C48                     start_initialization:
   714                           	callstack 0
   715   000C48                     __initialization:
   716                           	callstack 0
   717                           
   718                           ; Clear objects allocated to BANK1 (100 bytes)
   719   000C48  EE01  F000         	lfsr	0,__pbssBANK1
   720   000C4C  0E64               	movlw	100
   721   000C4E                     clear_0:
   722   000C4E  6AEE               	clrf	postinc0,c
   723   000C50  06E8               	decf	wreg,f,c
   724   000C52  E1FD               	bnz	clear_0
   725                           
   726                           ; Clear objects allocated to COMRAM (6 bytes)
   727   000C54  6A22               	clrf	(__pbssCOMRAM+5)& (0+255),c
   728   000C56  6A21               	clrf	(__pbssCOMRAM+4)& (0+255),c
   729   000C58  6A20               	clrf	(__pbssCOMRAM+3)& (0+255),c
   730   000C5A  6A1F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   731   000C5C  6A1E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   732   000C5E  6A1D               	clrf	__pbssCOMRAM& (0+255),c
   733   000C60                     end_of_initialization:
   734                           	callstack 0
   735   000C60                     __end_of__initialization:
   736                           	callstack 0
   737   000C60  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   738   000C62  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   739   000C64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   740   000C66  6EF8               	movwf	tblptru,c
   741   000C68  0100               	movlb	0
   742   000C6A  EF86  F005         	goto	_main	;jump to C main() function
   743                           
   744                           	psect	bssCOMRAM
   745   00001D                     __pbssCOMRAM:
   746                           	callstack 0
   747   00001D                     _buffer_size:
   748                           	callstack 0
   749   00001D                     	ds	2
   750   00001F                     _cnt:
   751                           	callstack 0
   752   00001F                     	ds	2
   753   000021                     strtok@p:
   754                           	callstack 0
   755   000021                     	ds	1
   756   000022                     _btn_interr:
   757                           	callstack 0
   758   000022                     	ds	1
   759                           
   760                           	psect	bssBANK1
   761   000100                     __pbssBANK1:
   762                           	callstack 0
   763   000100                     _buffer:
   764                           	callstack 0
   765   000100                     	ds	100
   766                           
   767                           	psect	cstackBANK1
   768   000164                     __pcstackBANK1:
   769                           	callstack 0
   770   000164                     main@str:
   771                           	callstack 0
   772                           
   773                           ; 100 bytes @ 0x0
   774   000164                     	ds	100
   775                           
   776                           	psect	cstackBANK0
   777   000080                     __pcstackBANK0:
   778                           	callstack 0
   779   000080                     ParsingData@input:
   780                           	callstack 0
   781                           
   782                           ; 100 bytes @ 0x0
   783   000080                     	ds	100
   784   0000E4                     ParsingData@num1:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x64
   788   0000E4                     	ds	2
   789   0000E6                     ParsingData@num2:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x66
   793   0000E6                     	ds	2
   794   0000E8                     ParsingData@num3:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x68
   798   0000E8                     	ds	2
   799   0000EA                     ParsingData@val:
   800                           	callstack 0
   801                           
   802                           ; 6 bytes @ 0x6A
   803   0000EA                     	ds	6
   804   0000F0                     ParsingData@token:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x70
   808   0000F0                     	ds	1
   809                           
   810                           	psect	cstackCOMRAM
   811   000001                     __pcstackCOMRAM:
   812                           	callstack 0
   813   000001                     ??_H_ISR:
   814                           
   815                           ; 1 bytes @ 0x0
   816   000001                     	ds	1
   817   000002                     ?_isprint:
   818                           	callstack 0
   819   000002                     putch@data:
   820                           	callstack 0
   821   000002                     isprint@c:
   822                           	callstack 0
   823   000002                     
   824                           ; 1 bytes @ 0x1
   825   000002                     	ds	2
   826   000004                     ??_isprint:
   827                           
   828                           ; 1 bytes @ 0x3
   829   000004                     	ds	2
   830   000006                     MyusartRead@data:
   831                           	callstack 0
   832   000006                     
   833                           ; 1 bytes @ 0x5
   834   000006                     	ds	1
   835   000007                     ??_Lo_ISR:
   836                           
   837                           ; 1 bytes @ 0x6
   838   000007                     	ds	5
   839   00000C                     ?_atoi:
   840                           	callstack 0
   841   00000C                     atoi@s:
   842                           	callstack 0
   843   00000C                     strchr@s:
   844                           	callstack 0
   845   00000C                     ClearBuffer@i:
   846                           	callstack 0
   847   00000C                     strcpy@dest:
   848                           	callstack 0
   849   00000C                     
   850                           ; 1 bytes @ 0xB
   851   00000C                     	ds	1
   852   00000D                     strchr@c:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0xC
   856   00000D                     	ds	1
   857   00000E                     strcpy@src:
   858                           	callstack 0
   859   00000E                     ??_atoi:
   860                           
   861                           ; 1 bytes @ 0xD
   862   00000E                     	ds	1
   863   00000F                     ??_strchr:
   864                           
   865                           ; 1 bytes @ 0xE
   866   00000F                     	ds	1
   867   000010                     ?_strspn:
   868                           	callstack 0
   869   000010                     ?_strcspn:
   870                           	callstack 0
   871   000010                     strcspn@s:
   872                           	callstack 0
   873   000010                     strspn@s:
   874                           	callstack 0
   875   000010                     ??_strcpy:
   876                           
   877                           ; 1 bytes @ 0xF
   878   000010                     	ds	1
   879   000011                     atoi@neg:
   880                           	callstack 0
   881   000011                     strcspn@c:
   882                           	callstack 0
   883   000011                     strspn@c:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x10
   887   000011                     	ds	1
   888   000012                     atoi@n:
   889                           	callstack 0
   890   000012                     strcpy@d:
   891                           	callstack 0
   892   000012                     ??_strspn:
   893   000012                     ??_strcspn:
   894                           
   895                           ; 1 bytes @ 0x11
   896   000012                     	ds	1
   897   000013                     strcspn@i:
   898                           	callstack 0
   899   000013                     strspn@i:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x12
   903   000013                     	ds	1
   904   000014                     ?_GetString:
   905                           	callstack 0
   906   000014                     GetString@str:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x13
   910   000014                     	ds	1
   911   000015                     strtok@s:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x14
   915   000015                     	ds	1
   916   000016                     strtok@sep:
   917                           	callstack 0
   918   000016                     
   919                           ; 1 bytes @ 0x15
   920   000016                     	ds	1
   921   000017                     ?_ParsingData:
   922                           	callstack 0
   923   000017                     ParsingData@s:
   924                           	callstack 0
   925   000017                     
   926                           ; 1 bytes @ 0x16
   927   000017                     	ds	6
   928   00001D                     
   929                           ; 1 bytes @ 0x1C
   930 ;;
   931 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   932 ;;
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 155 in file "newmain.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  return_val      6    0        struct Data
   940 ;;  str           100    0[BANK1 ] unsigned char [100]
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   950 ;;      Params:         0       0       0       0       0       0       0
   951 ;;      Locals:         0       0     100       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0
   953 ;;      Totals:         0       0     100       0       0       0       0
   954 ;;Total ram usage:      100 bytes
   955 ;; Hardware stack levels required when called: 8
   956 ;; This function calls:
   957 ;;		_ClearBuffer
   958 ;;		_GetString
   959 ;;		_Initialize
   960 ;;		_ParsingData
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text0
   967   000B0C                     __ptext0:
   968                           	callstack 0
   969   000B0C                     _main:
   970                           	callstack 23
   971   000B0C                     
   972                           ;newmain.c: 157:     Initialize();
   973   000B0C  EC2A  F004         	call	_Initialize	;wreg free
   974   000B10                     
   975                           ;newmain.c: 158:     char str[100];;newmain.c: 159:     ClearBuffer();
   976   000B10  ECCF  F005         	call	_ClearBuffer	;wreg free
   977   000B14                     l1591:
   978                           
   979                           ;newmain.c: 162:         if( GetString(str) ) {
   980   000B14  0E64               	movlw	low main@str
   981   000B16  6E14               	movwf	GetString@str^0,c
   982   000B18  0E01               	movlw	high main@str
   983   000B1A  6E15               	movwf	(GetString@str+1)^0,c
   984   000B1C  EC73  F004         	call	_GetString	;wreg free
   985   000B20  5014               	movf	?_GetString^0,w,c
   986   000B22  1015               	iorwf	(?_GetString+1)^0,w,c
   987   000B24  B4D8               	btfsc	status,2,c
   988   000B26  EF97  F005         	goto	u771
   989   000B2A  EF99  F005         	goto	u770
   990   000B2E                     u771:
   991   000B2E  EF9F  F005         	goto	l1595
   992   000B32                     u770:
   993   000B32  0E64               	movlw	low main@str
   994   000B34  6E17               	movwf	ParsingData@s^0,c
   995   000B36  0E01               	movlw	high main@str
   996   000B38  6E18               	movwf	(ParsingData@s+1)^0,c
   997   000B3A  EC89  F003         	call	_ParsingData	;wreg free
   998   000B3E                     l1595:
   999                           
  1000                           ;newmain.c: 165:         if (ADCON0bits.GO == 0) ADCON0bits.GO = 1;
  1001   000B3E  B2C2               	btfsc	194,1,c	;volatile
  1002   000B40  EFA4  F005         	goto	u781
  1003   000B44  EFA6  F005         	goto	u780
  1004   000B48                     u781:
  1005   000B48  EF8A  F005         	goto	l1591
  1006   000B4C                     u780:
  1007   000B4C  82C2               	bsf	194,1,c	;volatile
  1008   000B4E  EF8A  F005         	goto	l1591
  1009   000B52  EF36  F000         	goto	start
  1010   000B56                     __end_of_main:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _ParsingData *****************
  1014 ;; Defined at:
  1015 ;;		line 17 in file "parsing.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  s               2   22[COMRAM] PTR unsigned char 
  1018 ;;		 -> main@str(100), 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  input         100    0[BANK0 ] unsigned char [100]
  1021 ;;  val             6  106[BANK0 ] struct Data
  1022 ;;  num3            2  104[BANK0 ] int 
  1023 ;;  num2            2  102[BANK0 ] int 
  1024 ;;  num1            2  100[BANK0 ] int 
  1025 ;;  token           1  112[BANK0 ] PTR unsigned char 
  1026 ;;		 -> NULL(0), ParsingData@input(100), 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  6   22[COMRAM] struct Data
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         6       0       0       0       0       0       0
  1037 ;;      Locals:         0     113       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         6     113       0       0       0       0       0
  1040 ;;Total ram usage:      119 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 7
  1043 ;; This function calls:
  1044 ;;		_ClearBuffer
  1045 ;;		_atoi
  1046 ;;		_strcpy
  1047 ;;		_strtok
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text1
  1054   000712                     __ptext1:
  1055                           	callstack 0
  1056   000712                     _ParsingData:
  1057                           	callstack 23
  1058   000712  0100               	movlb	0	; () banked
  1059   000714  69E6               	setf	ParsingData@num2& (0+255),b
  1060   000716  69E7               	setf	(ParsingData@num2+1)& (0+255),b
  1061   000718  69E8               	setf	ParsingData@num3& (0+255),b
  1062   00071A  69E9               	setf	(ParsingData@num3+1)& (0+255),b
  1063   00071C                     
  1064                           ; BSR set to: 0
  1065                           ;parsing.c: 19:     char *token;;parsing.c: 20:     char input[100];;parsing.c: 21:     
      +                          strcpy(input, s);
  1066   00071C  0E80               	movlw	low ParsingData@input
  1067   00071E  6E0C               	movwf	strcpy@dest^0,c
  1068   000720  6A0D               	clrf	(strcpy@dest+1)^0,c
  1069   000722  C017  F00E         	movff	ParsingData@s,strcpy@src
  1070   000726  C018  F00F         	movff	ParsingData@s+1,strcpy@src+1
  1071   00072A  EC33  F005         	call	_strcpy	;wreg free
  1072   00072E                     
  1073                           ;parsing.c: 22:     ClearBuffer();
  1074   00072E  ECCF  F005         	call	_ClearBuffer	;wreg free
  1075   000732                     
  1076                           ;parsing.c: 23:     token = strtok(input, " ");
  1077   000732  0E80               	movlw	low ParsingData@input
  1078   000734  6E15               	movwf	strtok@s^0,c
  1079   000736  0E01               	movlw	low STR_3
  1080   000738  6E16               	movwf	strtok@sep^0,c
  1081   00073A  ECDF  F003         	call	_strtok	;wreg free
  1082   00073E  0100               	movlb	0	; () banked
  1083   000740  6FF0               	movwf	ParsingData@token& (0+255),b
  1084   000742                     
  1085                           ; BSR set to: 0
  1086                           ;parsing.c: 24:     num1 = atoi(token);
  1087   000742  C0F0  F00C         	movff	ParsingData@token,atoi@s
  1088   000746  EC03  F003         	call	_atoi	;wreg free
  1089   00074A  C00C  F0E4         	movff	?_atoi,ParsingData@num1
  1090   00074E  C00D  F0E5         	movff	?_atoi+1,ParsingData@num1+1
  1091   000752                     
  1092                           ;parsing.c: 26:     token = strtok(((void*)0), " ");
  1093   000752  0E00               	movlw	0
  1094   000754  6E15               	movwf	strtok@s^0,c
  1095   000756  0E01               	movlw	low STR_3
  1096   000758  6E16               	movwf	strtok@sep^0,c
  1097   00075A  ECDF  F003         	call	_strtok	;wreg free
  1098   00075E  0100               	movlb	0	; () banked
  1099   000760  6FF0               	movwf	ParsingData@token& (0+255),b
  1100   000762                     
  1101                           ; BSR set to: 0
  1102                           ;parsing.c: 27:     num2 = atoi(token);
  1103   000762  C0F0  F00C         	movff	ParsingData@token,atoi@s
  1104   000766  EC03  F003         	call	_atoi	;wreg free
  1105   00076A  C00C  F0E6         	movff	?_atoi,ParsingData@num2
  1106   00076E  C00D  F0E7         	movff	?_atoi+1,ParsingData@num2+1
  1107   000772                     
  1108                           ;parsing.c: 29:     token = strtok(((void*)0), " ");
  1109   000772  0E00               	movlw	0
  1110   000774  6E15               	movwf	strtok@s^0,c
  1111   000776  0E01               	movlw	low STR_3
  1112   000778  6E16               	movwf	strtok@sep^0,c
  1113   00077A  ECDF  F003         	call	_strtok	;wreg free
  1114   00077E  0100               	movlb	0	; () banked
  1115   000780  6FF0               	movwf	ParsingData@token& (0+255),b
  1116   000782                     
  1117                           ; BSR set to: 0
  1118                           ;parsing.c: 30:     num3 = atoi(token);
  1119   000782  C0F0  F00C         	movff	ParsingData@token,atoi@s
  1120   000786  EC03  F003         	call	_atoi	;wreg free
  1121   00078A  C00C  F0E8         	movff	?_atoi,ParsingData@num3
  1122   00078E  C00D  F0E9         	movff	?_atoi+1,ParsingData@num3+1
  1123   000792                     
  1124                           ;parsing.c: 32:     struct Data val;;parsing.c: 33:     val.step = num1;
  1125   000792  C0E4  F0EA         	movff	ParsingData@num1,ParsingData@val
  1126   000796  C0E5  F0EB         	movff	ParsingData@num1+1,ParsingData@val+1
  1127   00079A                     
  1128                           ;parsing.c: 34:     val.heartRate = num2;
  1129   00079A  C0E6  F0EC         	movff	ParsingData@num2,ParsingData@val+2
  1130   00079E  C0E7  F0ED         	movff	ParsingData@num2+1,ParsingData@val+3
  1131   0007A2                     
  1132                           ;parsing.c: 35:     val.temp = num3;
  1133   0007A2  C0E8  F0EE         	movff	ParsingData@num3,ParsingData@val+4
  1134   0007A6  C0E9  F0EF         	movff	ParsingData@num3+1,ParsingData@val+5
  1135   0007AA                     
  1136                           ;parsing.c: 37:     return val;
  1137   0007AA  EE20  F0EA         	lfsr	2,ParsingData@val
  1138   0007AE  EE00  F017         	lfsr	0,?_ParsingData
  1139   0007B2  0E05               	movlw	5
  1140   0007B4                     u721:
  1141   0007B4  CFDB FFEB          	movff	plusw2,plusw0
  1142   0007B8  06E8               	decf	wreg,f,c
  1143   0007BA  E2FC               	bc	u721
  1144   0007BC  0012               	return		;funcret
  1145   0007BE                     __end_of_ParsingData:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _strtok *****************
  1149 ;; Defined at:
  1150 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strtok.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  s               1   20[COMRAM] PTR unsigned char 
  1153 ;;		 -> NULL(0), ParsingData@input(100), 
  1154 ;;  sep             1   21[COMRAM] PTR const unsigned char 
  1155 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1   20[COMRAM] PTR unsigned char 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1167 ;;      Params:         2       0       0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0
  1170 ;;      Totals:         2       0       0       0       0       0       0
  1171 ;;Total ram usage:        2 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 6
  1174 ;; This function calls:
  1175 ;;		_strcspn
  1176 ;;		_strspn
  1177 ;; This function is called by:
  1178 ;;		_ParsingData
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text2
  1183   0007BE                     __ptext2:
  1184                           	callstack 0
  1185   0007BE                     _strtok:
  1186                           	callstack 23
  1187   0007BE  5015               	movf	strtok@s^0,w,c
  1188   0007C0  A4D8               	btfss	status,2,c
  1189   0007C2  EFE5  F003         	goto	u521
  1190   0007C6  EFE7  F003         	goto	u520
  1191   0007CA                     u521:
  1192   0007CA  EFF4  F003         	goto	l1353
  1193   0007CE                     u520:
  1194   0007CE  C021  F015         	movff	strtok@p,strtok@s
  1195   0007D2  5015               	movf	strtok@s^0,w,c
  1196   0007D4  A4D8               	btfss	status,2,c
  1197   0007D6  EFEF  F003         	goto	u531
  1198   0007DA  EFF1  F003         	goto	u530
  1199   0007DE                     u531:
  1200   0007DE  EFF4  F003         	goto	l1353
  1201   0007E2                     u530:
  1202   0007E2  0E00               	movlw	0
  1203   0007E4  EF29  F004         	goto	l910
  1204   0007E8                     l1353:
  1205   0007E8  C015  F010         	movff	strtok@s,strspn@s
  1206   0007EC  C016  F011         	movff	strtok@sep,strspn@c
  1207   0007F0  ECD9  F004         	call	_strspn	;wreg free
  1208   0007F4  5010               	movf	?_strspn^0,w,c
  1209   0007F6  2615               	addwf	strtok@s^0,f,c
  1210   0007F8  5015               	movf	strtok@s^0,w,c
  1211   0007FA  6ED9               	movwf	fsr2l,c
  1212   0007FC  6ADA               	clrf	fsr2h,c
  1213   0007FE  50DF               	movf	indf2,w,c
  1214   000800  A4D8               	btfss	status,2,c
  1215   000802  EF05  F004         	goto	u541
  1216   000806  EF07  F004         	goto	u540
  1217   00080A                     u541:
  1218   00080A  EF0C  F004         	goto	l1361
  1219   00080E                     u540:
  1220   00080E  0E00               	movlw	0
  1221   000810  6E21               	movwf	strtok@p^0,c
  1222   000812  5021               	movf	strtok@p^0,w,c
  1223   000814  EF29  F004         	goto	l910
  1224   000818                     l1361:
  1225   000818  C015  F010         	movff	strtok@s,strcspn@s
  1226   00081C  C016  F011         	movff	strtok@sep,strcspn@c
  1227   000820  EC06  F005         	call	_strcspn	;wreg free
  1228   000824  5015               	movf	strtok@s^0,w,c
  1229   000826  2410               	addwf	?_strcspn^0,w,c
  1230   000828  6E21               	movwf	strtok@p^0,c
  1231   00082A  5021               	movf	strtok@p^0,w,c
  1232   00082C  6ED9               	movwf	fsr2l,c
  1233   00082E  6ADA               	clrf	fsr2h,c
  1234   000830  50DF               	movf	indf2,w,c
  1235   000832  B4D8               	btfsc	status,2,c
  1236   000834  EF1E  F004         	goto	u551
  1237   000838  EF20  F004         	goto	u550
  1238   00083C                     u551:
  1239   00083C  EF27  F004         	goto	l912
  1240   000840                     u550:
  1241   000840  5021               	movf	strtok@p^0,w,c
  1242   000842  6ED9               	movwf	fsr2l,c
  1243   000844  6ADA               	clrf	fsr2h,c
  1244   000846  6ADF               	clrf	indf2,c
  1245   000848  2A21               	incf	strtok@p^0,f,c
  1246   00084A  EF28  F004         	goto	l1369
  1247   00084E                     l912:
  1248   00084E  6A21               	clrf	strtok@p^0,c
  1249   000850                     l1369:
  1250   000850  5015               	movf	strtok@s^0,w,c
  1251   000852                     l910:
  1252   000852  0012               	return		;funcret
  1253   000854                     __end_of_strtok:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _strspn *****************
  1257 ;; Defined at:
  1258 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strspn.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  s               1   15[COMRAM] PTR const unsigned char 
  1261 ;;		 -> NULL(0), ParsingData@input(100), 
  1262 ;;  c               1   16[COMRAM] PTR const unsigned char 
  1263 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  i               2   18[COMRAM] unsigned int 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  2   15[COMRAM] unsigned int 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1275 ;;      Params:         2       0       0       0       0       0       0
  1276 ;;      Locals:         2       0       0       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0       0       0
  1278 ;;      Totals:         5       0       0       0       0       0       0
  1279 ;;Total ram usage:        5 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 5
  1282 ;; This function calls:
  1283 ;;		_strchr
  1284 ;; This function is called by:
  1285 ;;		_strtok
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text3
  1290   0009B2                     __ptext3:
  1291                           	callstack 0
  1292   0009B2                     _strspn:
  1293                           	callstack 23
  1294   0009B2  0E00               	movlw	0
  1295   0009B4  6E14               	movwf	(strspn@i+1)^0,c
  1296   0009B6  0E00               	movlw	0
  1297   0009B8  6E13               	movwf	strspn@i^0,c
  1298   0009BA  EFE2  F004         	goto	l1315
  1299   0009BE                     l1313:
  1300   0009BE  2A10               	incf	strspn@s^0,f,c
  1301   0009C0  4A13               	infsnz	strspn@i^0,f,c
  1302   0009C2  2A14               	incf	(strspn@i+1)^0,f,c
  1303   0009C4                     l1315:
  1304   0009C4  5010               	movf	strspn@s^0,w,c
  1305   0009C6  6ED9               	movwf	fsr2l,c
  1306   0009C8  6ADA               	clrf	fsr2h,c
  1307   0009CA  50DF               	movf	indf2,w,c
  1308   0009CC  B4D8               	btfsc	status,2,c
  1309   0009CE  EFEB  F004         	goto	u451
  1310   0009D2  EFED  F004         	goto	u450
  1311   0009D6                     u451:
  1312   0009D6  EF01  F005         	goto	l938
  1313   0009DA                     u450:
  1314   0009DA  C011  F00C         	movff	strspn@c,strchr@s
  1315   0009DE  5010               	movf	strspn@s^0,w,c
  1316   0009E0  6ED9               	movwf	fsr2l,c
  1317   0009E2  6ADA               	clrf	fsr2h,c
  1318   0009E4  50DF               	movf	indf2,w,c
  1319   0009E6  6E12               	movwf	??_strspn^0,c
  1320   0009E8  5012               	movf	??_strspn^0,w,c
  1321   0009EA  6E0D               	movwf	strchr@c^0,c
  1322   0009EC  6A0E               	clrf	(strchr@c+1)^0,c
  1323   0009EE  ECAB  F005         	call	_strchr	;wreg free
  1324   0009F2  0900               	iorlw	0
  1325   0009F4  A4D8               	btfss	status,2,c
  1326   0009F6  EFFF  F004         	goto	u461
  1327   0009FA  EF01  F005         	goto	u460
  1328   0009FE                     u461:
  1329   0009FE  EFDF  F004         	goto	l1313
  1330   000A02                     u460:
  1331   000A02                     l938:
  1332   000A02  C013  F010         	movff	strspn@i,?_strspn
  1333   000A06  C014  F011         	movff	strspn@i+1,?_strspn+1
  1334   000A0A  0012               	return		;funcret
  1335   000A0C                     __end_of_strspn:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _strcspn *****************
  1339 ;; Defined at:
  1340 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcspn.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  s               1   15[COMRAM] PTR const unsigned char 
  1343 ;;		 -> NULL(0), ParsingData@input(100), 
  1344 ;;  c               1   16[COMRAM] PTR const unsigned char 
  1345 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  i               2   18[COMRAM] unsigned int 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  2   15[COMRAM] unsigned int 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1357 ;;      Params:         2       0       0       0       0       0       0
  1358 ;;      Locals:         2       0       0       0       0       0       0
  1359 ;;      Temps:          1       0       0       0       0       0       0
  1360 ;;      Totals:         5       0       0       0       0       0       0
  1361 ;;Total ram usage:        5 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 5
  1364 ;; This function calls:
  1365 ;;		_strchr
  1366 ;; This function is called by:
  1367 ;;		_strtok
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text4
  1372   000A0C                     __ptext4:
  1373                           	callstack 0
  1374   000A0C                     _strcspn:
  1375                           	callstack 23
  1376   000A0C  0E00               	movlw	0
  1377   000A0E  6E14               	movwf	(strcspn@i+1)^0,c
  1378   000A10  0E00               	movlw	0
  1379   000A12  6E13               	movwf	strcspn@i^0,c
  1380   000A14  EF0F  F005         	goto	l1323
  1381   000A18                     l1321:
  1382   000A18  2A10               	incf	strcspn@s^0,f,c
  1383   000A1A  4A13               	infsnz	strcspn@i^0,f,c
  1384   000A1C  2A14               	incf	(strcspn@i+1)^0,f,c
  1385   000A1E                     l1323:
  1386   000A1E  5010               	movf	strcspn@s^0,w,c
  1387   000A20  6ED9               	movwf	fsr2l,c
  1388   000A22  6ADA               	clrf	fsr2h,c
  1389   000A24  50DF               	movf	indf2,w,c
  1390   000A26  B4D8               	btfsc	status,2,c
  1391   000A28  EF18  F005         	goto	u471
  1392   000A2C  EF1A  F005         	goto	u470
  1393   000A30                     u471:
  1394   000A30  EF2E  F005         	goto	l922
  1395   000A34                     u470:
  1396   000A34  C011  F00C         	movff	strcspn@c,strchr@s
  1397   000A38  5010               	movf	strcspn@s^0,w,c
  1398   000A3A  6ED9               	movwf	fsr2l,c
  1399   000A3C  6ADA               	clrf	fsr2h,c
  1400   000A3E  50DF               	movf	indf2,w,c
  1401   000A40  6E12               	movwf	??_strcspn^0,c
  1402   000A42  5012               	movf	??_strcspn^0,w,c
  1403   000A44  6E0D               	movwf	strchr@c^0,c
  1404   000A46  6A0E               	clrf	(strchr@c+1)^0,c
  1405   000A48  ECAB  F005         	call	_strchr	;wreg free
  1406   000A4C  0900               	iorlw	0
  1407   000A4E  B4D8               	btfsc	status,2,c
  1408   000A50  EF2C  F005         	goto	u481
  1409   000A54  EF2E  F005         	goto	u480
  1410   000A58                     u481:
  1411   000A58  EF0C  F005         	goto	l1321
  1412   000A5C                     u480:
  1413   000A5C                     l922:
  1414   000A5C  C013  F010         	movff	strcspn@i,?_strcspn
  1415   000A60  C014  F011         	movff	strcspn@i+1,?_strcspn+1
  1416   000A64  0012               	return		;funcret
  1417   000A66                     __end_of_strcspn:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _strchr *****************
  1421 ;; Defined at:
  1422 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strchr.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1425 ;;		 -> STR_5(2), STR_4(2), STR_3(2), 
  1426 ;;  c               2   12[COMRAM] int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1   11[COMRAM] PTR unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         3       0       0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0       0       0
  1441 ;;      Totals:         4       0       0       0       0       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 4
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_strcspn
  1449 ;;		_strspn
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text5
  1454   000B56                     __ptext5:
  1455                           	callstack 0
  1456   000B56                     _strchr:
  1457                           	callstack 23
  1458   000B56                     l926:
  1459   000B56  C00C  FFF6         	movff	strchr@s,tblptrl
  1460   000B5A                     	if	1	;There is more than 1 active tblptr byte
  1461   000B5A  0E06               	movlw	high __smallconst
  1462   000B5C  6EF7               	movwf	tblptrh,c
  1463   000B5E                     	endif
  1464   000B5E                     	if	0	;tblptru may be non-zero
  1465   000B5E                     	endif
  1466   000B5E                     	if	0	;tblptru may be non-zero
  1467   000B5E                     	endif
  1468   000B5E  0008               	tblrd		*
  1469   000B60  50F5               	movf	tablat,w,c
  1470   000B62  180D               	xorwf	strchr@c^0,w,c
  1471   000B64  A4D8               	btfss	status,2,c
  1472   000B66  EFB7  F005         	goto	u431
  1473   000B6A  EFB9  F005         	goto	u430
  1474   000B6E                     u431:
  1475   000B6E  EFBC  F005         	goto	l1305
  1476   000B72                     u430:
  1477   000B72  500C               	movf	strchr@s^0,w,c
  1478   000B74  EFCE  F005         	goto	l928
  1479   000B78                     l1305:
  1480   000B78  2A0C               	incf	strchr@s^0,f,c
  1481   000B7A  040C               	decf	strchr@s^0,w,c
  1482   000B7C  6E0F               	movwf	??_strchr^0,c
  1483   000B7E  C00F  FFF6         	movff	??_strchr,tblptrl
  1484   000B82                     	if	1	;There is more than 1 active tblptr byte
  1485   000B82  0E06               	movlw	high __smallconst
  1486   000B84  6EF7               	movwf	tblptrh,c
  1487   000B86                     	endif
  1488   000B86                     	if	0	;tblptru may be non-zero
  1489   000B86                     	endif
  1490   000B86                     	if	0	;tblptru may be non-zero
  1491   000B86                     	endif
  1492   000B86  0008               	tblrd		*
  1493   000B88  50F5               	movf	tablat,w,c
  1494   000B8A  0900               	iorlw	0
  1495   000B8C  A4D8               	btfss	status,2,c
  1496   000B8E  EFCB  F005         	goto	u441
  1497   000B92  EFCD  F005         	goto	u440
  1498   000B96                     u441:
  1499   000B96  EFAB  F005         	goto	l926
  1500   000B9A                     u440:
  1501   000B9A  0E00               	movlw	0
  1502   000B9C                     l928:
  1503   000B9C  0012               	return		;funcret
  1504   000B9E                     __end_of_strchr:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _atoi *****************
  1508 ;; Defined at:
  1509 ;;		line 5 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/atoi.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1512 ;;		 -> NULL(0), ParsingData@input(100), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  n               2   17[COMRAM] int 
  1515 ;;  neg             1   16[COMRAM] _Bool 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2   11[COMRAM] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1525 ;;      Params:         2       0       0       0       0       0       0
  1526 ;;      Locals:         3       0       0       0       0       0       0
  1527 ;;      Temps:          3       0       0       0       0       0       0
  1528 ;;      Totals:         8       0       0       0       0       0       0
  1529 ;;Total ram usage:        8 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 4
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_ParsingData
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text6
  1540   000606                     __ptext6:
  1541                           	callstack 0
  1542   000606                     _atoi:
  1543                           	callstack 25
  1544   000606  0E00               	movlw	0
  1545   000608  6E13               	movwf	(atoi@n+1)^0,c
  1546   00060A  0E00               	movlw	0
  1547   00060C  6E12               	movwf	atoi@n^0,c
  1548   00060E  6A11               	clrf	atoi@neg^0,c
  1549   000610  EF0B  F003         	goto	l1379
  1550   000614                     l1377:
  1551   000614  2A0C               	incf	atoi@s^0,f,c
  1552   000616                     l1379:
  1553   000616  500C               	movf	atoi@s^0,w,c
  1554   000618  6ED9               	movwf	fsr2l,c
  1555   00061A  6ADA               	clrf	fsr2h,c
  1556   00061C  0E20               	movlw	32
  1557   00061E  18DE               	xorwf	postinc2,w,c
  1558   000620  B4D8               	btfsc	status,2,c
  1559   000622  EF15  F003         	goto	u561
  1560   000626  EF17  F003         	goto	u560
  1561   00062A                     u561:
  1562   00062A  EF0A  F003         	goto	l1377
  1563   00062E                     u560:
  1564   00062E  500C               	movf	atoi@s^0,w,c
  1565   000630  6ED9               	movwf	fsr2l,c
  1566   000632  6ADA               	clrf	fsr2h,c
  1567   000634  50DF               	movf	indf2,w,c
  1568   000636  6E0E               	movwf	??_atoi^0,c
  1569   000638  0EF7               	movlw	247
  1570   00063A  260E               	addwf	??_atoi^0,f,c
  1571   00063C  0E04               	movlw	4
  1572   00063E  640E               	cpfsgt	??_atoi^0,c
  1573   000640  EF24  F003         	goto	u571
  1574   000644  EF26  F003         	goto	u570
  1575   000648                     u571:
  1576   000648  EF0A  F003         	goto	l1377
  1577   00064C                     u570:
  1578   00064C  500C               	movf	atoi@s^0,w,c
  1579   00064E  6ED9               	movwf	fsr2l,c
  1580   000650  6ADA               	clrf	fsr2h,c
  1581   000652  0E2D               	movlw	45
  1582   000654  18DE               	xorwf	postinc2,w,c
  1583   000656  A4D8               	btfss	status,2,c
  1584   000658  EF30  F003         	goto	u581
  1585   00065C  EF32  F003         	goto	u580
  1586   000660                     u581:
  1587   000660  EF37  F003         	goto	l1389
  1588   000664                     u580:
  1589   000664  0E01               	movlw	1
  1590   000666  6E11               	movwf	atoi@neg^0,c
  1591   000668                     l1387:
  1592   000668  2A0C               	incf	atoi@s^0,f,c
  1593   00066A  EF5F  F003         	goto	l1397
  1594   00066E                     l1389:
  1595   00066E  500C               	movf	atoi@s^0,w,c
  1596   000670  6ED9               	movwf	fsr2l,c
  1597   000672  6ADA               	clrf	fsr2h,c
  1598   000674  0E2B               	movlw	43
  1599   000676  18DE               	xorwf	postinc2,w,c
  1600   000678  A4D8               	btfss	status,2,c
  1601   00067A  EF41  F003         	goto	u591
  1602   00067E  EF43  F003         	goto	u590
  1603   000682                     u591:
  1604   000682  EF5F  F003         	goto	l1397
  1605   000686                     u590:
  1606   000686  EF34  F003         	goto	l1387
  1607   00068A                     l1393:
  1608   00068A  0E0A               	movlw	10
  1609   00068C  0212               	mulwf	atoi@n^0,c
  1610   00068E  CFF3 F00E          	movff	prodl,??_atoi
  1611   000692  CFF4 F00F          	movff	prodh,??_atoi+1
  1612   000696  0213               	mulwf	(atoi@n+1)^0,c
  1613   000698  50F3               	movf	prodl,w,c
  1614   00069A  260F               	addwf	(??_atoi+1)^0,f,c
  1615   00069C  500C               	movf	atoi@s^0,w,c
  1616   00069E  6ED9               	movwf	fsr2l,c
  1617   0006A0  6ADA               	clrf	fsr2h,c
  1618   0006A2  50DF               	movf	indf2,w,c
  1619   0006A4  6E10               	movwf	(??_atoi+2)^0,c
  1620   0006A6  5010               	movf	(??_atoi+2)^0,w,c
  1621   0006A8  5E0E               	subwf	??_atoi^0,f,c
  1622   0006AA  0E00               	movlw	0
  1623   0006AC  5A0F               	subwfb	(??_atoi+1)^0,f,c
  1624   0006AE  0E30               	movlw	48
  1625   0006B0  240E               	addwf	??_atoi^0,w,c
  1626   0006B2  6E12               	movwf	atoi@n^0,c
  1627   0006B4  0E00               	movlw	0
  1628   0006B6  200F               	addwfc	(??_atoi+1)^0,w,c
  1629   0006B8  6E13               	movwf	(atoi@n+1)^0,c
  1630   0006BA  EF34  F003         	goto	l1387
  1631   0006BE                     l1397:
  1632   0006BE  500C               	movf	atoi@s^0,w,c
  1633   0006C0  6ED9               	movwf	fsr2l,c
  1634   0006C2  6ADA               	clrf	fsr2h,c
  1635   0006C4  50DF               	movf	indf2,w,c
  1636   0006C6  6E0E               	movwf	??_atoi^0,c
  1637   0006C8  0ED0               	movlw	208
  1638   0006CA  260E               	addwf	??_atoi^0,f,c
  1639   0006CC  0E09               	movlw	9
  1640   0006CE  640E               	cpfsgt	??_atoi^0,c
  1641   0006D0  EF6C  F003         	goto	u601
  1642   0006D4  EF6E  F003         	goto	u600
  1643   0006D8                     u601:
  1644   0006D8  EF45  F003         	goto	l1393
  1645   0006DC                     u600:
  1646   0006DC  5011               	movf	atoi@neg^0,w,c
  1647   0006DE  A4D8               	btfss	status,2,c
  1648   0006E0  EF74  F003         	goto	u611
  1649   0006E4  EF76  F003         	goto	u610
  1650   0006E8                     u611:
  1651   0006E8  EF84  F003         	goto	l876
  1652   0006EC                     u610:
  1653   0006EC  C012  F00E         	movff	atoi@n,??_atoi
  1654   0006F0  C013  F00F         	movff	atoi@n+1,??_atoi+1
  1655   0006F4  1E0E               	comf	??_atoi^0,f,c
  1656   0006F6  1E0F               	comf	(??_atoi+1)^0,f,c
  1657   0006F8  4A0E               	infsnz	??_atoi^0,f,c
  1658   0006FA  2A0F               	incf	(??_atoi+1)^0,f,c
  1659   0006FC  C00E  F00C         	movff	??_atoi,?_atoi
  1660   000700  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  1661   000704  EF88  F003         	goto	l879
  1662   000708                     l876:
  1663   000708  C012  F00C         	movff	atoi@n,?_atoi
  1664   00070C  C013  F00D         	movff	atoi@n+1,?_atoi+1
  1665   000710                     l879:
  1666   000710  0012               	return		;funcret
  1667   000712                     __end_of_atoi:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _Initialize *****************
  1671 ;; Defined at:
  1672 ;;		line 12 in file "init.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         0       0       0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 4
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text7
  1701   000854                     __ptext7:
  1702                           	callstack 0
  1703   000854                     _Initialize:
  1704                           	callstack 26
  1705   000854                     
  1706                           ;init.c: 14:     OSCCONbits.IRCF = 0b110;
  1707   000854  50D3               	movf	211,w,c	;volatile
  1708   000856  0B8F               	andlw	-113
  1709   000858  0960               	iorlw	96
  1710   00085A  6ED3               	movwf	211,c	;volatile
  1711   00085C                     
  1712                           ;init.c: 16:     TRISAbits.RA0 = 1;
  1713   00085C  8092               	bsf	146,0,c	;volatile
  1714                           
  1715                           ;init.c: 17:     ADCON1bits.PCFG = 0b1110;
  1716   00085E  50C1               	movf	193,w,c	;volatile
  1717   000860  0BF0               	andlw	-16
  1718   000862  090E               	iorlw	14
  1719   000864  6EC1               	movwf	193,c	;volatile
  1720                           
  1721                           ;init.c: 18:     ADCON0bits.CHS = 0b0000;
  1722   000866  0EC3               	movlw	-61
  1723   000868  16C2               	andwf	194,f,c	;volatile
  1724   00086A                     
  1725                           ;init.c: 19:     ADCON1bits.VCFG0 = 0;
  1726   00086A  98C1               	bcf	193,4,c	;volatile
  1727   00086C                     
  1728                           ;init.c: 20:     ADCON1bits.VCFG1 = 0;
  1729   00086C  9AC1               	bcf	193,5,c	;volatile
  1730                           
  1731                           ;init.c: 21:     ADCON2bits.ADCS = 0b000;
  1732   00086E  0EF8               	movlw	-8
  1733   000870  16C0               	andwf	192,f,c	;volatile
  1734                           
  1735                           ;init.c: 22:     ADCON2bits.ACQT = 0b001;
  1736   000872  50C0               	movf	192,w,c	;volatile
  1737   000874  0BC7               	andlw	-57
  1738   000876  0908               	iorlw	8
  1739   000878  6EC0               	movwf	192,c	;volatile
  1740   00087A                     
  1741                           ;init.c: 23:     ADCON0bits.ADON = 1;
  1742   00087A  80C2               	bsf	194,0,c	;volatile
  1743   00087C                     
  1744                           ;init.c: 24:     ADCON2bits.ADFM = 1;
  1745   00087C  8EC0               	bsf	192,7,c	;volatile
  1746   00087E                     
  1747                           ;init.c: 27:     T2CONbits.TMR2ON = 0b1;
  1748   00087E  84CA               	bsf	202,2,c	;volatile
  1749                           
  1750                           ;init.c: 28:     T2CONbits.T2CKPS = 0b11;
  1751   000880  0E03               	movlw	3
  1752   000882  12CA               	iorwf	202,f,c	;volatile
  1753                           
  1754                           ;init.c: 29:     CCP1CONbits.CCP1M = 0b1100;
  1755   000884  50BD               	movf	189,w,c	;volatile
  1756   000886  0BF0               	andlw	-16
  1757   000888  090C               	iorlw	12
  1758   00088A  6EBD               	movwf	189,c	;volatile
  1759                           
  1760                           ;init.c: 30:     PR2 = 0x9b;
  1761   00088C  0E9B               	movlw	155
  1762   00088E  6ECB               	movwf	203,c	;volatile
  1763   000890                     
  1764                           ;init.c: 32:     TRISCbits.TRISC2 = 0;
  1765   000890  9494               	bcf	148,2,c	;volatile
  1766   000892                     
  1767                           ;init.c: 35:     TRISA &= 0xF1;
  1768   000892  0EF1               	movlw	241
  1769   000894  1692               	andwf	146,f,c	;volatile
  1770   000896                     
  1771                           ;init.c: 36:     TRISB = 1;
  1772   000896  0E01               	movlw	1
  1773   000898  6E93               	movwf	147,c	;volatile
  1774   00089A                     
  1775                           ;init.c: 37:     TRISC = 0;
  1776   00089A  6A94               	clrf	148,c	;volatile
  1777                           
  1778                           ;init.c: 38:     LATA &= 0xF1;
  1779   00089C  0EF1               	movlw	241
  1780   00089E  1689               	andwf	137,f,c	;volatile
  1781   0008A0                     
  1782                           ;init.c: 39:     LATC = 0;
  1783   0008A0  6A8B               	clrf	139,c	;volatile
  1784   0008A2                     
  1785                           ;init.c: 42:     INTCONbits.INT0IF = 0;
  1786   0008A2  92F2               	bcf	242,1,c	;volatile
  1787   0008A4                     
  1788                           ;init.c: 43:     INTCONbits.INT0IE = 1;
  1789   0008A4  88F2               	bsf	242,4,c	;volatile
  1790   0008A6                     
  1791                           ;init.c: 44:     PIE1bits.ADIE = 1;
  1792   0008A6  8C9D               	bsf	157,6,c	;volatile
  1793   0008A8                     
  1794                           ;init.c: 45:     PIR1bits.ADIF = 0;
  1795   0008A8  9C9E               	bcf	158,6,c	;volatile
  1796   0008AA                     
  1797                           ;init.c: 46:     INTCONbits.PEIE = 1;
  1798   0008AA  8CF2               	bsf	242,6,c	;volatile
  1799   0008AC                     
  1800                           ;init.c: 47:     INTCONbits.GIE = 1;
  1801   0008AC  8EF2               	bsf	242,7,c	;volatile
  1802   0008AE                     
  1803                           ;init.c: 48:     RCONbits.IPEN = 1;
  1804   0008AE  8ED0               	bsf	208,7,c	;volatile
  1805   0008B0                     
  1806                           ;init.c: 49:     INTCONbits.GIEH = 1;
  1807   0008B0  8EF2               	bsf	242,7,c	;volatile
  1808   0008B2                     
  1809                           ;init.c: 50:     INTCONbits.GIEL = 1;
  1810   0008B2  8CF2               	bsf	242,6,c	;volatile
  1811   0008B4                     
  1812                           ;init.c: 62:     TRISCbits.TRISC6 = 1;
  1813   0008B4  8C94               	bsf	148,6,c	;volatile
  1814   0008B6                     
  1815                           ;init.c: 63:     TRISCbits.TRISC7 = 1;
  1816   0008B6  8E94               	bsf	148,7,c	;volatile
  1817   0008B8                     
  1818                           ;init.c: 67:     TXSTAbits.SYNC = 0;
  1819   0008B8  98AC               	bcf	172,4,c	;volatile
  1820   0008BA                     
  1821                           ;init.c: 68:     BAUDCONbits.BRG16 = 0;
  1822   0008BA  96B8               	bcf	184,3,c	;volatile
  1823   0008BC                     
  1824                           ;init.c: 69:     TXSTAbits.BRGH = 0;
  1825   0008BC  94AC               	bcf	172,2,c	;volatile
  1826   0008BE                     
  1827                           ;init.c: 70:     SPBRG = 51;
  1828   0008BE  0E33               	movlw	51
  1829   0008C0  6EAF               	movwf	175,c	;volatile
  1830   0008C2                     
  1831                           ;init.c: 73:     RCSTAbits.SPEN = 1;
  1832   0008C2  8EAB               	bsf	171,7,c	;volatile
  1833   0008C4                     
  1834                           ;init.c: 74:     PIR1bits.TXIF = 0;
  1835   0008C4  989E               	bcf	158,4,c	;volatile
  1836   0008C6                     
  1837                           ;init.c: 75:     PIR1bits.RCIF = 0;
  1838   0008C6  9A9E               	bcf	158,5,c	;volatile
  1839   0008C8                     
  1840                           ;init.c: 76:     TXSTAbits.TXEN = 1;
  1841   0008C8  8AAC               	bsf	172,5,c	;volatile
  1842   0008CA                     
  1843                           ;init.c: 77:     RCSTAbits.CREN = 1;
  1844   0008CA  88AB               	bsf	171,4,c	;volatile
  1845   0008CC                     
  1846                           ;init.c: 78:     PIE1bits.TXIE = 0;
  1847   0008CC  989D               	bcf	157,4,c	;volatile
  1848   0008CE                     
  1849                           ;init.c: 79:     IPR1bits.TXIP = 0;
  1850   0008CE  989F               	bcf	159,4,c	;volatile
  1851   0008D0                     
  1852                           ;init.c: 80:     PIE1bits.RCIE = 1;
  1853   0008D0  8A9D               	bsf	157,5,c	;volatile
  1854   0008D2                     
  1855                           ;init.c: 81:     IPR1bits.RCIP = 0;
  1856   0008D2  9A9F               	bcf	159,5,c	;volatile
  1857   0008D4                     
  1858                           ;init.c: 93:     ADCON0bits.GO = 1;
  1859   0008D4  82C2               	bsf	194,1,c	;volatile
  1860   0008D6                     
  1861                           ;init.c: 96:     T2CON = 0b01111111;
  1862   0008D6  0E7F               	movlw	127
  1863   0008D8  6ECA               	movwf	202,c	;volatile
  1864   0008DA                     
  1865                           ;init.c: 97:     PR2 = 122;
  1866   0008DA  0E7A               	movlw	122
  1867   0008DC  6ECB               	movwf	203,c	;volatile
  1868   0008DE                     
  1869                           ;init.c: 98:     PIR1bits.TMR2IF = 0;
  1870   0008DE  929E               	bcf	158,1,c	;volatile
  1871   0008E0                     
  1872                           ;init.c: 99:     PIE1bits.TMR2IE = 1;
  1873   0008E0  829D               	bsf	157,1,c	;volatile
  1874   0008E2                     
  1875                           ;init.c: 100:     IPR1bits.TMR2IP = 1;
  1876   0008E2  829F               	bsf	159,1,c	;volatile
  1877   0008E4  0012               	return		;funcret
  1878   0008E6                     __end_of_Initialize:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _GetString *****************
  1882 ;; Defined at:
  1883 ;;		line 43 in file "uart.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  str             2   19[COMRAM] PTR unsigned char 
  1886 ;;		 -> main@str(100), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2   19[COMRAM] int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1898 ;;      Params:         2       0       0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0
  1900 ;;      Temps:          1       0       0       0       0       0       0
  1901 ;;      Totals:         3       0       0       0       0       0       0
  1902 ;;Total ram usage:        3 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 5
  1905 ;; This function calls:
  1906 ;;		_ClearBuffer
  1907 ;;		_strcpy
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text8
  1914   0008E6                     __ptext8:
  1915                           	callstack 0
  1916   0008E6                     _GetString:
  1917                           	callstack 25
  1918   0008E6                     
  1919                           ;uart.c: 44:     if (buffer[buffer_size - 1] == '\r') {
  1920   0008E6  0EFF               	movlw	low (_buffer+65535)
  1921   0008E8  241D               	addwf	_buffer_size^0,w,c
  1922   0008EA  6ED9               	movwf	fsr2l,c
  1923   0008EC  0E00               	movlw	high (_buffer+65535)
  1924   0008EE  201E               	addwfc	(_buffer_size+1)^0,w,c
  1925   0008F0  6EDA               	movwf	fsr2h,c
  1926   0008F2  0E0D               	movlw	13
  1927   0008F4  18DE               	xorwf	postinc2,w,c
  1928   0008F6  A4D8               	btfss	status,2,c
  1929   0008F8  EF80  F004         	goto	u711
  1930   0008FC  EF82  F004         	goto	u710
  1931   000900                     u711:
  1932   000900  EF9E  F004         	goto	l1527
  1933   000904                     u710:
  1934   000904                     
  1935                           ;uart.c: 45:         buffer[--buffer_size] = '\0';
  1936   000904  061D               	decf	_buffer_size^0,f,c
  1937   000906  A0D8               	btfss	status,0,c
  1938   000908  061E               	decf	(_buffer_size+1)^0,f,c
  1939   00090A  0E00               	movlw	low _buffer
  1940   00090C  241D               	addwf	_buffer_size^0,w,c
  1941   00090E  6ED9               	movwf	fsr2l,c
  1942   000910  0E01               	movlw	high _buffer
  1943   000912  201E               	addwfc	(_buffer_size+1)^0,w,c
  1944   000914  6EDA               	movwf	fsr2h,c
  1945   000916  6ADF               	clrf	indf2,c
  1946   000918                     
  1947                           ;uart.c: 46:         strcpy(str, buffer);
  1948   000918  C014  F00C         	movff	GetString@str,strcpy@dest
  1949   00091C  C015  F00D         	movff	GetString@str+1,strcpy@dest+1
  1950   000920  0E00               	movlw	low _buffer
  1951   000922  6E0E               	movwf	strcpy@src^0,c
  1952   000924  0E01               	movlw	high _buffer
  1953   000926  6E0F               	movwf	(strcpy@src+1)^0,c
  1954   000928  EC33  F005         	call	_strcpy	;wreg free
  1955   00092C                     
  1956                           ;uart.c: 47:         ClearBuffer();
  1957   00092C  ECCF  F005         	call	_ClearBuffer	;wreg free
  1958   000930                     
  1959                           ;uart.c: 48:         return 1;
  1960   000930  0E00               	movlw	0
  1961   000932  6E15               	movwf	(?_GetString+1)^0,c
  1962   000934  0E01               	movlw	1
  1963   000936  6E14               	movwf	?_GetString^0,c
  1964   000938  EFA7  F004         	goto	l188
  1965   00093C                     l1527:
  1966                           
  1967                           ;uart.c: 50:         str[0] = '\0';
  1968   00093C  C014  FFD9         	movff	GetString@str,fsr2l
  1969   000940  C015  FFDA         	movff	GetString@str+1,fsr2h
  1970   000944  6ADF               	clrf	indf2,c
  1971   000946                     
  1972                           ;uart.c: 51:         return 0;
  1973   000946  0E00               	movlw	0
  1974   000948  6E15               	movwf	(?_GetString+1)^0,c
  1975   00094A  0E00               	movlw	0
  1976   00094C  6E14               	movwf	?_GetString^0,c
  1977   00094E                     l188:
  1978   00094E  0012               	return		;funcret
  1979   000950                     __end_of_GetString:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _strcpy *****************
  1983 ;; Defined at:
  1984 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  dest            2   11[COMRAM] PTR unsigned char 
  1987 ;;		 -> ParsingData@input(100), main@str(100), 
  1988 ;;  src             2   13[COMRAM] PTR const unsigned char 
  1989 ;;		 -> buffer(100), main@str(100), STR_2(2), STR_1(2), 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  d               2   17[COMRAM] PTR unsigned char 
  1992 ;;		 -> ParsingData@input(100), main@str(100), 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2   11[COMRAM] PTR unsigned char 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2002 ;;      Params:         4       0       0       0       0       0       0
  2003 ;;      Locals:         2       0       0       0       0       0       0
  2004 ;;      Temps:          2       0       0       0       0       0       0
  2005 ;;      Totals:         8       0       0       0       0       0       0
  2006 ;;Total ram usage:        8 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 4
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_ParsingData
  2013 ;;		_GetString
  2014 ;;		_Get_Timer_H
  2015 ;;		_Get_Timer_M
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text9
  2020   000A66                     __ptext9:
  2021                           	callstack 0
  2022   000A66                     _strcpy:
  2023                           	callstack 25
  2024   000A66  C00C  F012         	movff	strcpy@dest,strcpy@d
  2025   000A6A  C00D  F013         	movff	strcpy@dest+1,strcpy@d+1
  2026   000A6E                     l1329:
  2027   000A6E  500E               	movf	strcpy@src^0,w,c
  2028   000A70  6E10               	movwf	??_strcpy^0,c
  2029   000A72  500F               	movf	(strcpy@src+1)^0,w,c
  2030   000A74  6E11               	movwf	(??_strcpy+1)^0,c
  2031   000A76  4A0E               	infsnz	strcpy@src^0,f,c
  2032   000A78  2A0F               	incf	(strcpy@src+1)^0,f,c
  2033   000A7A  C010  FFF6         	movff	??_strcpy,tblptrl
  2034   000A7E  C011  FFF7         	movff	??_strcpy+1,tblptrh
  2035   000A82  6AF8               	clrf	tblptru,c
  2036   000A84  C012  FFD9         	movff	strcpy@d,fsr2l
  2037   000A88  C013  FFDA         	movff	strcpy@d+1,fsr2h
  2038   000A8C  4A12               	infsnz	strcpy@d^0,f,c
  2039   000A8E  2A13               	incf	(strcpy@d+1)^0,f,c
  2040   000A90  0E05               	movlw	(high __ramtop+-1)
  2041   000A92  64F7               	cpfsgt	tblptrh,c
  2042   000A94  D003               	bra	u497
  2043   000A96  0008               	tblrd		*
  2044   000A98  50F5               	movf	tablat,w,c
  2045   000A9A  D005               	bra	u490
  2046   000A9C                     u497:
  2047   000A9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2048   000AA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2049   000AA4  50EF               	movf	indf0,w,c
  2050   000AA6                     u490:
  2051   000AA6  6EDF               	movwf	indf2,c
  2052   000AA8  50DF               	movf	indf2,w,c
  2053   000AAA  A4D8               	btfss	status,2,c
  2054   000AAC  EF5A  F005         	goto	u501
  2055   000AB0  EF5C  F005         	goto	u500
  2056   000AB4                     u501:
  2057   000AB4  EF37  F005         	goto	l1329
  2058   000AB8                     u500:
  2059   000AB8  0012               	return		;funcret
  2060   000ABA                     __end_of_strcpy:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _ClearBuffer *****************
  2064 ;; Defined at:
  2065 ;;		line 30 in file "uart.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  i               2   11[COMRAM] int 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2079 ;;      Params:         0       0       0       0       0       0       0
  2080 ;;      Locals:         2       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 4
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;;		_ParsingData
  2091 ;;		_GetString
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text10
  2096   000B9E                     __ptext10:
  2097                           	callstack 0
  2098   000B9E                     _ClearBuffer:
  2099                           	callstack 25
  2100   000B9E                     
  2101                           ;uart.c: 31:     for (int i = 0; i < 100; i++)
  2102   000B9E  0E00               	movlw	0
  2103   000BA0  6E0D               	movwf	(ClearBuffer@i+1)^0,c
  2104   000BA2  0E00               	movlw	0
  2105   000BA4  6E0C               	movwf	ClearBuffer@i^0,c
  2106   000BA6                     l1337:
  2107                           
  2108                           ;uart.c: 32:         buffer[i] = '\0';
  2109   000BA6  0E00               	movlw	low _buffer
  2110   000BA8  240C               	addwf	ClearBuffer@i^0,w,c
  2111   000BAA  6ED9               	movwf	fsr2l,c
  2112   000BAC  0E01               	movlw	high _buffer
  2113   000BAE  200D               	addwfc	(ClearBuffer@i+1)^0,w,c
  2114   000BB0  6EDA               	movwf	fsr2h,c
  2115   000BB2  6ADF               	clrf	indf2,c
  2116   000BB4  4A0C               	infsnz	ClearBuffer@i^0,f,c
  2117   000BB6  2A0D               	incf	(ClearBuffer@i+1)^0,f,c
  2118   000BB8  BE0D               	btfsc	(ClearBuffer@i+1)^0,7,c
  2119   000BBA  EFE8  F005         	goto	u511
  2120   000BBE  500D               	movf	(ClearBuffer@i+1)^0,w,c
  2121   000BC0  E109               	bnz	u510
  2122   000BC2  0E64               	movlw	100
  2123   000BC4  5C0C               	subwf	ClearBuffer@i^0,w,c
  2124   000BC6  A0D8               	btfss	status,0,c
  2125   000BC8  EFE8  F005         	goto	u511
  2126   000BCC  EFEA  F005         	goto	u510
  2127   000BD0                     u511:
  2128   000BD0  EFD3  F005         	goto	l1337
  2129   000BD4                     u510:
  2130   000BD4                     
  2131                           ;uart.c: 33:     buffer_size = 0;
  2132   000BD4  0E00               	movlw	0
  2133   000BD6  6E1E               	movwf	(_buffer_size+1)^0,c
  2134   000BD8  0E00               	movlw	0
  2135   000BDA  6E1D               	movwf	_buffer_size^0,c
  2136   000BDC  0012               	return		;funcret
  2137   000BDE                     __end_of_ClearBuffer:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _Lo_ISR *****************
  2141 ;; Defined at:
  2142 ;;		line 78 in file "newmain.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2156 ;;      Params:         0       0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0
  2158 ;;      Temps:          5       0       0       0       0       0       0
  2159 ;;      Totals:         5       0       0       0       0       0       0
  2160 ;;Total ram usage:        5 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 3
  2163 ;; This function calls:
  2164 ;;		_MyusartRead
  2165 ;; This function is called by:
  2166 ;;		Interrupt level 1
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	intcodelo
  2171   000018                     __pintcodelo:
  2172                           	callstack 0
  2173   000018                     _Lo_ISR:
  2174                           	callstack 23
  2175                           
  2176                           ;incstack = 0
  2177   000018  8023               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2178   00001A  CFD8 F007          	movff	status,??_Lo_ISR
  2179   00001E  CFE8 F008          	movff	wreg,??_Lo_ISR+1
  2180   000022  CFE0 F009          	movff	bsr,??_Lo_ISR+2
  2181   000026  CFD9 F00A          	movff	fsr2l,??_Lo_ISR+3
  2182   00002A  CFDA F00B          	movff	fsr2h,??_Lo_ISR+4
  2183   00002E                     
  2184                           ;newmain.c: 79:     if (RCIF) {
  2185   00002E  AA9E               	btfss	3998,5,c	;volatile
  2186   000030  EF1C  F000         	goto	i1u73_21
  2187   000034  EF1E  F000         	goto	i1u73_20
  2188   000038                     i1u73_21:
  2189   000038  EF2A  F000         	goto	i1l41
  2190   00003C                     i1u73_20:
  2191   00003C                     
  2192                           ;newmain.c: 80:         if (RCSTAbits.OERR) {
  2193   00003C  A2AB               	btfss	171,1,c	;volatile
  2194   00003E  EF23  F000         	goto	i1u74_21
  2195   000042  EF25  F000         	goto	i1u74_20
  2196   000046                     i1u74_21:
  2197   000046  EF28  F000         	goto	i1l1567
  2198   00004A                     i1u74_20:
  2199   00004A                     
  2200                           ;newmain.c: 81:             CREN = 0;
  2201   00004A  98AB               	bcf	4011,4,c	;volatile
  2202                           
  2203                           ;newmain.c: 82:             __nop();
  2204   00004C  0000               	nop	
  2205                           
  2206                           ;newmain.c: 83:             CREN = 1;
  2207   00004E  88AB               	bsf	4011,4,c	;volatile
  2208   000050                     i1l1567:
  2209                           
  2210                           ;newmain.c: 86:         MyusartRead();
  2211   000050  EC5D  F005         	call	_MyusartRead	;wreg free
  2212   000054                     i1l41:
  2213   000054  C00B  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2214   000058  C00A  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2215   00005C  C009  FFE0         	movff	??_Lo_ISR+2,bsr
  2216   000060  C008  FFE8         	movff	??_Lo_ISR+1,wreg
  2217   000064  C007  FFD8         	movff	??_Lo_ISR,status
  2218   000068  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2219   00006A  0010               	retfie	
  2220   00006C                     __end_of_Lo_ISR:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _MyusartRead *****************
  2224 ;; Defined at:
  2225 ;;		line 36 in file "uart.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  data            1    5[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2239 ;;      Params:         0       0       0       0       0       0       0
  2240 ;;      Locals:         1       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0
  2242 ;;      Totals:         1       0       0       0       0       0       0
  2243 ;;Total ram usage:        1 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; Hardware stack levels required when called: 2
  2246 ;; This function calls:
  2247 ;;		_isprint
  2248 ;;		_putch
  2249 ;; This function is called by:
  2250 ;;		_Lo_ISR
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text12
  2255   000ABA                     __ptext12:
  2256                           	callstack 0
  2257   000ABA                     _MyusartRead:
  2258                           	callstack 23
  2259   000ABA                     
  2260                           ;uart.c: 37:     char data = RCREG;
  2261   000ABA  CFAE F006          	movff	4014,MyusartRead@data	;volatile
  2262   000ABE                     
  2263                           ;uart.c: 38:     if (!isprint(data) && data != '\r') return;
  2264   000ABE  C006  F002         	movff	MyusartRead@data,isprint@c
  2265   000AC2  6A03               	clrf	(isprint@c+1)^0,c
  2266   000AC4  EC0E  F006         	call	_isprint	;wreg free
  2267   000AC8  5002               	movf	?_isprint^0,w,c
  2268   000ACA  1003               	iorwf	(?_isprint+1)^0,w,c
  2269   000ACC  A4D8               	btfss	status,2,c
  2270   000ACE  EF6B  F005         	goto	i1u69_21
  2271   000AD2  EF6D  F005         	goto	i1u69_20
  2272   000AD6                     i1u69_21:
  2273   000AD6  EF78  F005         	goto	i1l1423
  2274   000ADA                     i1u69_20:
  2275   000ADA  0E0D               	movlw	13
  2276   000ADC  1806               	xorwf	MyusartRead@data^0,w,c
  2277   000ADE  B4D8               	btfsc	status,2,c
  2278   000AE0  EF74  F005         	goto	i1u70_21
  2279   000AE4  EF76  F005         	goto	i1u70_20
  2280   000AE8                     i1u70_21:
  2281   000AE8  EF78  F005         	goto	i1l1423
  2282   000AEC                     i1u70_20:
  2283   000AEC  EF85  F005         	goto	i1l184
  2284   000AF0                     i1l1423:
  2285                           
  2286                           ;uart.c: 39:     buffer[buffer_size++] = data;
  2287   000AF0  0E00               	movlw	low _buffer
  2288   000AF2  241D               	addwf	_buffer_size^0,w,c
  2289   000AF4  6ED9               	movwf	fsr2l,c
  2290   000AF6  0E01               	movlw	high _buffer
  2291   000AF8  201E               	addwfc	(_buffer_size+1)^0,w,c
  2292   000AFA  6EDA               	movwf	fsr2h,c
  2293   000AFC  C006  FFDF         	movff	MyusartRead@data,indf2
  2294   000B00  4A1D               	infsnz	_buffer_size^0,f,c
  2295   000B02  2A1E               	incf	(_buffer_size+1)^0,f,c
  2296   000B04                     
  2297                           ;uart.c: 40:     putch(data);
  2298   000B04  5006               	movf	MyusartRead@data^0,w,c
  2299   000B06  ECA8  F004         	call	_putch
  2300   000B0A                     i1l184:
  2301   000B0A  0012               	return		;funcret
  2302   000B0C                     __end_of_MyusartRead:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _putch *****************
  2306 ;; Defined at:
  2307 ;;		line 18 in file "uart.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  data            1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  data            1    1[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2321 ;;      Params:         0       0       0       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0
  2324 ;;      Totals:         1       0       0       0       0       0       0
  2325 ;;Total ram usage:        1 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 1
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_MyusartRead
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text13
  2336   000950                     __ptext13:
  2337                           	callstack 0
  2338   000950                     _putch:
  2339                           	callstack 23
  2340                           
  2341                           ;incstack = 0
  2342                           ;putch@data stored from wreg
  2343   000950  6E02               	movwf	putch@data^0,c
  2344   000952                     
  2345                           ;uart.c: 19:     if (data == '\n' || data == '\r') {
  2346   000952  0E0A               	movlw	10
  2347   000954  1802               	xorwf	putch@data^0,w,c
  2348   000956  B4D8               	btfsc	status,2,c
  2349   000958  EFB0  F004         	goto	i1u62_21
  2350   00095C  EFB2  F004         	goto	i1u62_20
  2351   000960                     i1u62_21:
  2352   000960  EFBB  F004         	goto	i1l165
  2353   000964                     i1u62_20:
  2354   000964  0E0D               	movlw	13
  2355   000966  1802               	xorwf	putch@data^0,w,c
  2356   000968  A4D8               	btfss	status,2,c
  2357   00096A  EFB9  F004         	goto	i1u63_21
  2358   00096E  EFBB  F004         	goto	i1u63_20
  2359   000972                     i1u63_21:
  2360   000972  EFCF  F004         	goto	i1l172
  2361   000976                     i1u63_20:
  2362   000976                     i1l165:
  2363   000976  A2AC               	btfss	172,1,c	;volatile
  2364   000978  EFC0  F004         	goto	i1u64_21
  2365   00097C  EFC2  F004         	goto	i1u64_20
  2366   000980                     i1u64_21:
  2367   000980  EFBB  F004         	goto	i1l165
  2368   000984                     i1u64_20:
  2369   000984                     
  2370                           ;uart.c: 21:         TXREG = '\r';
  2371   000984  0E0D               	movlw	13
  2372   000986  6EAD               	movwf	173,c	;volatile
  2373   000988                     i1l168:
  2374   000988  A2AC               	btfss	172,1,c	;volatile
  2375   00098A  EFC9  F004         	goto	i1u65_21
  2376   00098E  EFCB  F004         	goto	i1u65_20
  2377   000992                     i1u65_21:
  2378   000992  EFC4  F004         	goto	i1l168
  2379   000996                     i1u65_20:
  2380   000996                     
  2381                           ;uart.c: 23:         TXREG = '\n';
  2382   000996  0E0A               	movlw	10
  2383   000998  6EAD               	movwf	173,c	;volatile
  2384                           
  2385                           ;uart.c: 24:     } else {
  2386   00099A  EFD8  F004         	goto	i1l175
  2387   00099E                     i1l172:
  2388   00099E  A2AC               	btfss	172,1,c	;volatile
  2389   0009A0  EFD4  F004         	goto	i1u66_21
  2390   0009A4  EFD6  F004         	goto	i1u66_20
  2391   0009A8                     i1u66_21:
  2392   0009A8  EFCF  F004         	goto	i1l172
  2393   0009AC                     i1u66_20:
  2394   0009AC                     
  2395                           ;uart.c: 26:         TXREG = data;
  2396   0009AC  C002  FFAD         	movff	putch@data,4013	;volatile
  2397   0009B0                     i1l175:
  2398   0009B0  0012               	return		;funcret
  2399   0009B2                     __end_of_putch:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _isprint *****************
  2403 ;; Defined at:
  2404 ;;		line 5 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/isprint.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  c               2    1[COMRAM] int 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    1[COMRAM] int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         2       0       0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0
  2420 ;;      Temps:          2       0       0       0       0       0       0
  2421 ;;      Totals:         4       0       0       0       0       0       0
  2422 ;;Total ram usage:        4 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 1
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_MyusartRead
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text14
  2433   000C1C                     __ptext14:
  2434                           	callstack 0
  2435   000C1C                     _isprint:
  2436                           	callstack 23
  2437   000C1C  0EE0               	movlw	224
  2438   000C1E  2402               	addwf	isprint@c^0,w,c
  2439   000C20  6E04               	movwf	??_isprint^0,c
  2440   000C22  0EFF               	movlw	255
  2441   000C24  2003               	addwfc	(isprint@c+1)^0,w,c
  2442   000C26  6E05               	movwf	(??_isprint+1)^0,c
  2443   000C28  5005               	movf	(??_isprint+1)^0,w,c
  2444   000C2A  E10A               	bnz	i1u67_20
  2445   000C2C  0E5F               	movlw	95
  2446   000C2E  5C04               	subwf	??_isprint^0,w,c
  2447   000C30  A0D8               	btfss	status,0,c
  2448   000C32  EF1D  F006         	goto	i1u67_21
  2449   000C36  EF20  F006         	goto	i1u67_20
  2450   000C3A                     i1u67_21:
  2451   000C3A  0E01               	movlw	1
  2452   000C3C  EF21  F006         	goto	i1u68_20
  2453   000C40                     i1u67_20:
  2454   000C40  0E00               	movlw	0
  2455   000C42                     i1u68_20:
  2456   000C42  6E02               	movwf	?_isprint^0,c
  2457   000C44  6A03               	clrf	(?_isprint+1)^0,c
  2458   000C46  0012               	return		;funcret
  2459   000C48                     __end_of_isprint:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _H_ISR *****************
  2463 ;; Defined at:
  2464 ;;		line 95 in file "newmain.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2478 ;;      Params:         0       0       0       0       0       0       0
  2479 ;;      Locals:         0       0       0       0       0       0       0
  2480 ;;      Temps:          1       0       0       0       0       0       0
  2481 ;;      Totals:         1       0       0       0       0       0       0
  2482 ;;Total ram usage:        1 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		Interrupt level 2
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	intcode
  2492   000008                     __pintcode:
  2493                           	callstack 0
  2494   000008                     _H_ISR:
  2495                           	callstack 23
  2496                           
  2497                           ;incstack = 0
  2498   000008  8223               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2499   00000A  EDEF  F005         	call	int_func,f	;refresh shadow registers
  2500                           
  2501                           	psect	intcode_body
  2502   000BDE                     __pintcode_body:
  2503                           	callstack 23
  2504   000BDE                     int_func:
  2505                           	callstack 23
  2506   000BDE  0006               	pop		; remove dummy address from shadow register refresh
  2507   000BE0                     
  2508                           ;newmain.c: 97:     if (INTCONbits.INT0IF) {
  2509   000BE0  A2F2               	btfss	242,1,c	;volatile
  2510   000BE2  EFF5  F005         	goto	i2u37_41
  2511   000BE6  EFF7  F005         	goto	i2u37_40
  2512   000BEA                     i2u37_41:
  2513   000BEA  EF02  F006         	goto	i2l1263
  2514   000BEE                     i2u37_40:
  2515   000BEE                     
  2516                           ;newmain.c: 98:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2517   000BEE  0E41               	movlw	65
  2518   000BF0  6E01               	movwf	??_H_ISR^0,c
  2519   000BF2  0EEE               	movlw	238
  2520   000BF4                     i2u79_47:
  2521   000BF4  2EE8               	decfsz	wreg,f,c
  2522   000BF6  D7FE               	bra	i2u79_47
  2523   000BF8  2E01               	decfsz	??_H_ISR^0,f,c
  2524   000BFA  D7FC               	bra	i2u79_47
  2525   000BFC  D000               	nop2	
  2526   000BFE                     
  2527                           ;newmain.c: 99:         btn_interr = 1;
  2528   000BFE  0E01               	movlw	1
  2529   000C00  6E22               	movwf	_btn_interr^0,c
  2530   000C02                     
  2531                           ;newmain.c: 100:         INTCONbits.INT0IF = 0;
  2532   000C02  92F2               	bcf	242,1,c	;volatile
  2533   000C04                     i2l1263:
  2534                           
  2535                           ;newmain.c: 103:     if (PIR1bits.TMR2IF) {
  2536   000C04  A29E               	btfss	158,1,c	;volatile
  2537   000C06  EF07  F006         	goto	i2u38_41
  2538   000C0A  EF09  F006         	goto	i2u38_40
  2539   000C0E                     i2u38_41:
  2540   000C0E  EF0C  F006         	goto	i2l48
  2541   000C12                     i2u38_40:
  2542   000C12                     
  2543                           ;newmain.c: 104:         cnt++;
  2544   000C12  4A1F               	infsnz	_cnt^0,f,c
  2545   000C14  2A20               	incf	(_cnt+1)^0,f,c
  2546   000C16                     
  2547                           ;newmain.c: 105:         PIR1bits.TMR2IF = 0;
  2548   000C16  929E               	bcf	158,1,c	;volatile
  2549   000C18                     i2l48:
  2550   000C18  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2551   000C1A  0011               	retfie		f
  2552   000C1C                     __end_of_H_ISR:
  2553                           	callstack 0
  2554                           
  2555                           	psect	rparam
  2556   000001                     ___rparam_used  equ	1
  2557   000000                     ___param_bank   equ	0
  2558   000000                     __Lparam        equ	__Lrparam
  2559   000000                     __Hparam        equ	__Hrparam
  2560                           
  2561                           	psect	temp
  2562   000023                     btemp:
  2563                           	callstack 0
  2564   000023                     	ds	1
  2565   000023                     int$flags       set	btemp
  2566   000024                     wtemp8          set	btemp+1
  2567   000024                     ttemp5          set	btemp+1
  2568   000027                     ttemp6          set	btemp+4
  2569   00002B                     ttemp7          set	btemp+8
  2570                           
  2571                           	psect	idloc
  2572                           
  2573                           ;Config register IDLOC0 @ 0x200000
  2574                           ;	unspecified, using default values
  2575   200000                     	org	2097152
  2576   200000  FF                 	db	255
  2577                           
  2578                           ;Config register IDLOC1 @ 0x200001
  2579                           ;	unspecified, using default values
  2580   200001                     	org	2097153
  2581   200001  FF                 	db	255
  2582                           
  2583                           ;Config register IDLOC2 @ 0x200002
  2584                           ;	unspecified, using default values
  2585   200002                     	org	2097154
  2586   200002  FF                 	db	255
  2587                           
  2588                           ;Config register IDLOC3 @ 0x200003
  2589                           ;	unspecified, using default values
  2590   200003                     	org	2097155
  2591   200003  FF                 	db	255
  2592                           
  2593                           ;Config register IDLOC4 @ 0x200004
  2594                           ;	unspecified, using default values
  2595   200004                     	org	2097156
  2596   200004  FF                 	db	255
  2597                           
  2598                           ;Config register IDLOC5 @ 0x200005
  2599                           ;	unspecified, using default values
  2600   200005                     	org	2097157
  2601   200005  FF                 	db	255
  2602                           
  2603                           ;Config register IDLOC6 @ 0x200006
  2604                           ;	unspecified, using default values
  2605   200006                     	org	2097158
  2606   200006  FF                 	db	255
  2607                           
  2608                           ;Config register IDLOC7 @ 0x200007
  2609                           ;	unspecified, using default values
  2610   200007                     	org	2097159
  2611   200007  FF                 	db	255
  2612                           
  2613                           	psect	config
  2614                           
  2615                           ; Padding undefined space
  2616   300000                     	org	3145728
  2617   300000  FF                 	db	255
  2618                           
  2619                           ;Config register CONFIG1H @ 0x300001
  2620                           ;	Oscillator Selection bits
  2621                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2622                           ;	Fail-Safe Clock Monitor Enable bit
  2623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2624                           ;	Internal/External Oscillator Switchover bit
  2625                           ;	IESO = ON, Oscillator Switchover mode enabled
  2626   300001                     	org	3145729
  2627   300001  88                 	db	136
  2628                           
  2629                           ;Config register CONFIG2L @ 0x300002
  2630                           ;	Power-up Timer Enable bit
  2631                           ;	PWRT = OFF, PWRT disabled
  2632                           ;	Brown-out Reset Enable bits
  2633                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2634                           ;	Brown Out Reset Voltage bits
  2635                           ;	BORV = 3, Minimum setting
  2636   300002                     	org	3145730
  2637   300002  1F                 	db	31
  2638                           
  2639                           ;Config register CONFIG2H @ 0x300003
  2640                           ;	Watchdog Timer Enable bit
  2641                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2642                           ;	Watchdog Timer Postscale Select bits
  2643                           ;	WDTPS = 1, 1:1
  2644   300003                     	org	3145731
  2645   300003  00                 	db	0
  2646                           
  2647                           ; Padding undefined space
  2648   300004                     	org	3145732
  2649   300004  FF                 	db	255
  2650                           
  2651                           ;Config register CONFIG3H @ 0x300005
  2652                           ;	CCP2 MUX bit
  2653                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2654                           ;	PORTB A/D Enable bit
  2655                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2656                           ;	Low-Power Timer1 Oscillator Enable bit
  2657                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2658                           ;	MCLR Pin Enable bit
  2659                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2660   300005                     	org	3145733
  2661   300005  83                 	db	131
  2662                           
  2663                           ;Config register CONFIG4L @ 0x300006
  2664                           ;	Stack Full/Underflow Reset Enable bit
  2665                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2666                           ;	Single-Supply ICSP Enable bit
  2667                           ;	LVP = OFF, Single-Supply ICSP disabled
  2668                           ;	Extended Instruction Set Enable bit
  2669                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2670                           ;	Background Debugger Enable bit
  2671                           ;	DEBUG = 0x1, unprogrammed default
  2672   300006                     	org	3145734
  2673   300006  81                 	db	129
  2674                           
  2675                           ; Padding undefined space
  2676   300007                     	org	3145735
  2677   300007  FF                 	db	255
  2678                           
  2679                           ;Config register CONFIG5L @ 0x300008
  2680                           ;	Code Protection bit
  2681                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2682                           ;	Code Protection bit
  2683                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2684                           ;	Code Protection bit
  2685                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2686                           ;	Code Protection bit
  2687                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2688   300008                     	org	3145736
  2689   300008  0F                 	db	15
  2690                           
  2691                           ;Config register CONFIG5H @ 0x300009
  2692                           ;	Boot Block Code Protection bit
  2693                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2694                           ;	Data EEPROM Code Protection bit
  2695                           ;	CPD = OFF, Data EEPROM not code-protected
  2696   300009                     	org	3145737
  2697   300009  C0                 	db	192
  2698                           
  2699                           ;Config register CONFIG6L @ 0x30000A
  2700                           ;	Write Protection bit
  2701                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2702                           ;	Write Protection bit
  2703                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2704                           ;	Write Protection bit
  2705                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2706                           ;	Write Protection bit
  2707                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2708   30000A                     	org	3145738
  2709   30000A  0F                 	db	15
  2710                           
  2711                           ;Config register CONFIG6H @ 0x30000B
  2712                           ;	Configuration Register Write Protection bit
  2713                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2714                           ;	Boot Block Write Protection bit
  2715                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2716                           ;	Data EEPROM Write Protection bit
  2717                           ;	WRTD = OFF, Data EEPROM not write-protected
  2718   30000B                     	org	3145739
  2719   30000B  E0                 	db	224
  2720                           
  2721                           ;Config register CONFIG7L @ 0x30000C
  2722                           ;	Table Read Protection bit
  2723                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2724                           ;	Table Read Protection bit
  2725                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2726                           ;	Table Read Protection bit
  2727                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2728                           ;	Table Read Protection bit
  2729                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2730   30000C                     	org	3145740
  2731   30000C  0F                 	db	15
  2732                           
  2733                           ;Config register CONFIG7H @ 0x30000D
  2734                           ;	Boot Block Table Read Protection bit
  2735                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2736   30000D                     	org	3145741
  2737   30000D  40                 	db	64
  2738                           tosu	equ	0xFFF
  2739                           tosh	equ	0xFFE
  2740                           tosl	equ	0xFFD
  2741                           stkptr	equ	0xFFC
  2742                           pclatu	equ	0xFFB
  2743                           pclath	equ	0xFFA
  2744                           pcl	equ	0xFF9
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           indf0	equ	0xFEF
  2752                           postinc0	equ	0xFEE
  2753                           postdec0	equ	0xFED
  2754                           preinc0	equ	0xFEC
  2755                           plusw0	equ	0xFEB
  2756                           fsr0h	equ	0xFEA
  2757                           fsr0l	equ	0xFE9
  2758                           wreg	equ	0xFE8
  2759                           indf1	equ	0xFE7
  2760                           postinc1	equ	0xFE6
  2761                           postdec1	equ	0xFE5
  2762                           preinc1	equ	0xFE4
  2763                           plusw1	equ	0xFE3
  2764                           fsr1h	equ	0xFE2
  2765                           fsr1l	equ	0xFE1
  2766                           bsr	equ	0xFE0
  2767                           indf2	equ	0xFDF
  2768                           postinc2	equ	0xFDE
  2769                           postdec2	equ	0xFDD
  2770                           preinc2	equ	0xFDC
  2771                           plusw2	equ	0xFDB
  2772                           fsr2h	equ	0xFDA
  2773                           fsr2l	equ	0xFD9
  2774                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     28      34
    BANK0           128    113     113
    BANK1           256    100     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    GetString@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), 

    ParsingData@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), 

    ParsingData@token	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), ParsingData@input(BANK0[100]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), ParsingData@input(BANK0[100]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), ParsingData@input(BANK0[100]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 100
		 -> buffer(BANK1[100]), main@str(BANK1[100]), STR_1(CODE[2]), STR_2(CODE[2]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_ParsingData
    _ParsingData->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _GetString->_strcpy

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->_isprint

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ParsingData

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               106   106      0    1541
                                              0 BANK1    100   100      0
                        _ClearBuffer
                          _GetString
                         _Initialize
                        _ParsingData
 ---------------------------------------------------------------------------------
 (1) _ParsingData                                        119   113      6    1229
                                             22 COMRAM     6     0      6
                                              0 BANK0    113   113      0
                        _ClearBuffer
                               _atoi
                             _strcpy
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               2     0      2     554
                                             20 COMRAM     2     0      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               5     3      2     185
                                             15 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              5     3      2     185
                                             15 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               4     1      3      92
                                             11 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     231
                                             11 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            3     1      2     194
                                             19 COMRAM     3     1      2
                        _ClearBuffer
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4      81
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Lo_ISR                                               5     5      0     199
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (6) _MyusartRead                                          1     1      0     199
                                              5 COMRAM     1     1      0
                            _isprint
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      87
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isprint                                              4     2      2      23
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _H_ISR                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
     _ClearBuffer
     _strcpy
   _Initialize
   _ParsingData
     _ClearBuffer
     _atoi
     _strcpy
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr

 _Lo_ISR (ROOT)
   _MyusartRead
     _isprint
     _putch

 _H_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    100     200     78.1%
BITBANK0           128      0       0      0.0%
BANK0              128    113     113     88.3%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     28      34     27.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        22      0       0      0.0%
BITBIGSFRlllh       10      0       0      0.0%
BITBIGSFRllll        9      0       0      0.0%
BITBIGSFRlh          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     347      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 16 07:08:07 2025

                     l94 07BC                       bsr 0FE0                      l145 08E4  
                    l180 0BDC                      l188 094E                      l900 0AB8  
                    l910 0852                      l912 084E                      l922 0A5C  
                    l923 0A64                      l926 0B56                      l928 0B9C  
                    l938 0A02                      l939 0A0A                      l876 0708  
                    l879 0710                      u500 0AB8                      u501 0AB4  
                    u510 0BD4                      u430 0B72                      _PR2 0FCB  
                    u511 0BD0                      u431 0B6E                      u600 06DC  
                    u440 0B9A                      u520 07CE                      u601 06D8  
                    u441 0B96                      u521 07CA                      u610 06EC  
                    u450 09DA                      u530 07E2                      u611 06E8  
                    u451 09D6                      u531 07DE                      u460 0A02  
                    u540 080E                      u461 09FE                      u541 080A  
                    u710 0904                      u470 0A34                      u550 0840  
                    u711 0900                      u471 0A30                      u551 083C  
                    u560 062E                      u480 0A5C                      u561 062A  
                    u481 0A58                      u721 07B4                      u490 0AA6  
                    u570 064C                      u571 0648                      u580 0664  
                    u581 0660                      u590 0686                      u591 0682  
                    u497 0A9C                      u770 0B32                      u771 0B2E  
                    u780 0B4C                      u781 0B48                      _cnt 001F  
                    wreg 0FE8                     l1301 0B72                     l1311 09B2  
                   l1401 06EC                     l1305 0B78                     l1321 0A18  
                   l1313 09BE                     l1331 0B9E                     l1307 0B9A  
                   l1323 0A1E                     l1315 09C4                     l1341 0BB8  
                   l1501 08D4                     l1325 0A34                     l1317 09DA  
                   l1343 0BD4                     l1327 0A66                     l1511 08E2  
                   l1503 08D6                     l1431 085C                     l1319 0A0C  
                   l1337 0BA6                     l1329 0A6E                     l1521 0930  
                   l1513 08E6                     l1505 08DA                     l1441 087E  
                   l1433 086A                     l1361 0818                     l1353 07E8  
                   l1345 07BE                     l1339 0BB4                     l1515 0904  
                   l1507 08DE                     l1451 08A0                     l1443 0890  
                   l1435 086C                     l1363 082A                     l1355 07F8  
                   l1347 07CE                     l1517 0918                     l1509 08E0  
                   l1461 08AA                     l1453 08A2                     l1445 0892  
                   l1437 087A                     l1429 0854                     l1381 062E  
                   l1373 0606                     l1365 0840                     l1357 080E  
                   l1349 07E2                     l1541 0742                     l1533 0712  
                   l1519 092C                     l1527 093C                     l1471 08B4  
                   l1463 08AC                     l1455 08A4                     l1447 0896  
                   l1439 087C                     l1383 064C                     l1375 060E  
                   l1367 0848                     l1551 0792                     l1543 0752  
                   l1535 071C                     l1529 0946                     l1481 08BE  
                   l1473 08B6                     l1465 08AE                     l1457 08A6  
                   l1449 089A                     l1393 068A                     l1385 0664  
                   l1377 0614                     l1369 0850                     l1553 079A  
                   l1545 0762                     l1537 072E                     l1491 08CA  
                   l1483 08C2                     l1475 08B8                     l1467 08B0  
                   l1459 08A8                     l1387 0668                     l1379 0616  
                   l1299 0B56                     l1555 07A2                     l1547 0772  
                   l1539 0732                     l1493 08CC                     l1485 08C4  
                   l1477 08BA                     l1469 08B2                     l1397 06BE  
                   l1389 066E                     l1557 07AA                     l1549 0782  
                   l1495 08CE                     l1487 08C6                     l1479 08BC  
                   l1399 06DC                     l1591 0B14                     l1497 08D0  
                   l1489 08C8                     l1593 0B32                     l1499 08D2  
                   l1595 0B3E                     l1587 0B0C                     l1597 0B4C  
                   l1589 0B10                     STR_1 0603                     STR_3 0601  
                   STR_4 0601                     STR_5 0601                     _CREN 7D5C  
                   _LATA 0F89                     _LATC 0F8B                     i1l41 0054  
                   _RCIF 7CF5                     i2l48 0C18                     _atoi 0606  
                   _main 0B0C                     fsr0h 0FEA                     indf0 0FEF  
                   fsr2h 0FDA                     fsr0l 0FE9                     indf2 0FDF  
                   fsr2l 0FD9                     btemp 0023                     prodh 0FF4  
                   prodl 0FF3                     start 006C          MyusartRead@data 0006  
           ___param_bank 0000                    ?_atoi 000C                    ?_main 0001  
                  _T2CON 0FCA                    i1l172 099E                    i1l165 0976  
                  i1l174 09AC                    i1l175 09B0                    i1l168 0988  
                  i1l184 0B0A                    i1l882 0C46                    _RCREG 0FAE  
                  _H_ISR 0008                    _SPBRG 0FAF                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94                    _TXREG 0FAD  
                  atoi@n 0012                    atoi@s 000C                    _putch 0950  
            _ClearBuffer 0B9E          __end_of_isprint 0C48                    tablat 0FF5  
                  plusw0 0FEB                    plusw2 0FDB                    ttemp5 0024  
                  ttemp6 0027                    ttemp7 002B                    status 0FD8  
                  wtemp8 0024          __end_of_strcspn 0A66            ??_ParsingData 001D  
        __initialization 0C48             __end_of_atoi 0712             __end_of_main 0B56  
             _Initialize 0854                   ??_atoi 000E                   ??_main 001D  
          __activetblptr 0002                   ?_H_ISR 0001                   ?_putch 0001  
                 i1l1411 0C1C                   i1l1403 0952                   i1l1405 0964  
                 i1l1407 0984                   i1l1423 0AF0                   i1l1415 0ABA  
                 i1l1409 0996                   i1l1425 0B00                   i1l1417 0ABE  
                 i1l1427 0B04                   i1l1419 0ADA                   i1l1561 002E  
                 i1l1563 003C                   i1l1565 004A                   i1l1567 0050  
                 i2l1261 0C02                   i2l1263 0C04                   i2l1255 0BE0  
                 i2l1265 0C12                   i2l1257 0BEE                   i2l1267 0C16  
                 i2l1259 0BFE                   _Lo_ISR 0018                   _buffer 0100  
                 clear_0 0C4E                   isa$std 0001      __end_of_ParsingData 07BE  
                 _strchr 0B56                   _strcpy 0A66                   _strtok 07BE  
                 _strspn 09B2             __mediumconst 0000                ??_isprint 0004  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
              ??_strcspn 0012               __accesstop 0080  __end_of__initialization 0C60  
          ___rparam_used 0001            __end_of_H_ISR 0C1C        __end_of_GetString 0950  
         __pcstackCOMRAM 0001              ?_Initialize 0001            __end_of_putch 09B2  
                ??_H_ISR 0001            ??_MyusartRead 0006                  ??_putch 0002  
             __pbssBANK1 0100                  ?_Lo_ISR 0001              _ParsingData 0712  
                ?_strchr 000C                  ?_strcpy 000C                  ?_strtok 0015  
                ?_strspn 0010                  i1u62_20 0964                  i1u70_20 0AEC  
                i1u62_21 0960                  i1u70_21 0AE8                  i1u63_20 0976  
                i1u63_21 0972                  i1u64_20 0984                  i1u64_21 0980  
                i1u65_20 0996                  i1u73_20 003C                  i1u65_21 0992  
                i1u73_21 0038                  i1u66_20 09AC                  i1u74_20 004A  
                i1u66_21 09A8                  i1u74_21 0046                  i1u67_20 0C40  
                i1u67_21 0C3A                  i1u68_20 0C42                  i1u69_20 0ADA  
                i1u69_21 0AD6                  i2u37_40 0BEE                  i2u37_41 0BEA  
                i2u38_40 0C12                  i2u38_41 0C0E                  i2u79_47 0BF4  
             _btn_interr 0022             ?_ClearBuffer 0001      __end_of_MyusartRead 0B0C  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0C48                  __ramtop 0600                  __ptext0 0B0C  
                __ptext1 0712                  __ptext2 07BE                  __ptext3 09B2  
                __ptext4 0A0C                  __ptext5 0B56                  __ptext6 0606  
                __ptext7 0854                  __ptext8 08E6                  __ptext9 0A66  
              _T2CONbits 0FCA                  _isprint 0C1C                  atoi@neg 0011  
                main@str 0164                  _strcspn 0A0C           __pintcode_body 0BDE  
   end_of_initialization 0C60            __Lmediumconst 0000                  int_func 0BDE  
              _RCSTAbits 0FAB                  postinc0 0FEE                  postinc2 0FDE  
           ParsingData@s 0017                  strchr@c 000D                  strchr@s 000C  
                strcpy@d 0012                  strspn@c 0011                  strspn@i 0013  
                strtok@p 0021                  strtok@s 0015                  strspn@s 0010  
              _TRISAbits 0F92                _TRISCbits 0F94              _MyusartRead 0ABA  
            _CCP1CONbits 0FBD                _TXSTAbits 0FAC           __end_of_Lo_ISR 006C  
              _GetString 08E6             ??_Initialize 000C              _BAUDCONbits 0FB8  
         __end_of_strchr 0B9E           __end_of_strcpy 0ABA           __end_of_strtok 0854  
         __end_of_strspn 0A0C      start_initialization 0C48             ClearBuffer@i 000C  
     __end_of_Initialize 08E6                 ??_Lo_ISR 0007             ?_ParsingData 0017  
             ?_GetString 0014                 ??_strchr 000F                 ??_strcpy 0010  
               ??_strtok 0017                 ??_strspn 0012              __pbssCOMRAM 001D  
          __pcstackBANK0 0080            __pcstackBANK1 0164         ParsingData@input 0080  
       ParsingData@token 00F0                __pintcode 0008              __pintcodelo 0018  
            __smallconst 0600                 ?_isprint 0002                 ?_strcspn 0010  
               _IPR1bits 0F9F                 _PIE1bits 0F9D                 _PIR1bits 0F9E  
            _buffer_size 001D                 _RCONbits 0FD0              ??_GetString 0016  
             _ADCON0bits 0FC2               _ADCON1bits 0FC1               _ADCON2bits 0FC0  
           ?_MyusartRead 0001                 __Hrparam 0000                 __Lrparam 0000  
        ParsingData@num1 00E4          ParsingData@num2 00E6          ParsingData@num3 00E8  
               __ptext10 0B9E                 __ptext12 0ABA                 __ptext13 0950  
               __ptext14 0C1C             GetString@str 0014               strcpy@dest 000C  
               isa$xinst 0000                 int$flags 0023                putch@data 0002  
             _INTCONbits 0FF2            ??_ClearBuffer 000C                 intlevel1 0000  
               intlevel2 0000           ParsingData@val 00EA                 isprint@c 0002  
              strcpy@src 000E               _OSCCONbits 0FD3                strtok@sep 0016  
               strcspn@c 0011                 strcspn@i 0013                 strcspn@s 0010  
    __end_of_ClearBuffer 0BDE  
