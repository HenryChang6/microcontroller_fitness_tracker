

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 16 10:31:08 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 25/07/2024 GMT
    67                           ; 
    68                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4520 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000FE0                     bsr             equ	4064
   101   000FE9                     fsr0            equ	4073
   102   000FEA                     fsr0h           equ	4074
   103   000FE9                     fsr0l           equ	4073
   104   000FE1                     fsr1            equ	4065
   105   000FE2                     fsr1h           equ	4066
   106   000FE1                     fsr1l           equ	4065
   107   000FD9                     fsr2            equ	4057
   108   000FDA                     fsr2h           equ	4058
   109   000FD9                     fsr2l           equ	4057
   110   000FEF                     indf0           equ	4079
   111   000FE7                     indf1           equ	4071
   112   000FDF                     indf2           equ	4063
   113   000FF2                     intcon          equ	4082
   114   000000                     nvmcon          equ	0
   115   000FF9                     pcl             equ	4089
   116   000FFA                     pclath          equ	4090
   117   000FFB                     pclatu          equ	4091
   118   000FEB                     plusw0          equ	4075
   119   000FE3                     plusw1          equ	4067
   120   000FDB                     plusw2          equ	4059
   121   000FED                     postdec0        equ	4077
   122   000FE5                     postdec1        equ	4069
   123   000FDD                     postdec2        equ	4061
   124   000FEE                     postinc0        equ	4078
   125   000FE6                     postinc1        equ	4070
   126   000FDE                     postinc2        equ	4062
   127   000FEC                     preinc0         equ	4076
   128   000FE4                     preinc1         equ	4068
   129   000FDC                     preinc2         equ	4060
   130   000FF3                     prod            equ	4083
   131   000FF4                     prodh           equ	4084
   132   000FF3                     prodl           equ	4083
   133   000FD8                     status          equ	4056
   134   000FF5                     tablat          equ	4085
   135   000FF6                     tblptr          equ	4086
   136   000FF7                     tblptrh         equ	4087
   137   000FF6                     tblptrl         equ	4086
   138   000FF8                     tblptru         equ	4088
   139   000FFD                     tosl            equ	4093
   140   000FE8                     wreg            equ	4072
   141   000F80                     PORTA           equ	3968	;# 
   142   000F81                     PORTB           equ	3969	;# 
   143   000F82                     PORTC           equ	3970	;# 
   144   000F83                     PORTD           equ	3971	;# 
   145   000F84                     PORTE           equ	3972	;# 
   146   000F89                     LATA            equ	3977	;# 
   147   000F8A                     LATB            equ	3978	;# 
   148   000F8B                     LATC            equ	3979	;# 
   149   000F8C                     LATD            equ	3980	;# 
   150   000F8D                     LATE            equ	3981	;# 
   151   000F92                     TRISA           equ	3986	;# 
   152   000F92                     DDRA            equ	3986	;# 
   153   000F93                     TRISB           equ	3987	;# 
   154   000F93                     DDRB            equ	3987	;# 
   155   000F94                     TRISC           equ	3988	;# 
   156   000F94                     DDRC            equ	3988	;# 
   157   000F95                     TRISD           equ	3989	;# 
   158   000F95                     DDRD            equ	3989	;# 
   159   000F96                     TRISE           equ	3990	;# 
   160   000F96                     DDRE            equ	3990	;# 
   161   000F9B                     OSCTUNE         equ	3995	;# 
   162   000F9D                     PIE1            equ	3997	;# 
   163   000F9E                     PIR1            equ	3998	;# 
   164   000F9F                     IPR1            equ	3999	;# 
   165   000FA0                     PIE2            equ	4000	;# 
   166   000FA1                     PIR2            equ	4001	;# 
   167   000FA2                     IPR2            equ	4002	;# 
   168   000FA6                     EECON1          equ	4006	;# 
   169   000FA7                     EECON2          equ	4007	;# 
   170   000FA8                     EEDATA          equ	4008	;# 
   171   000FA9                     EEADR           equ	4009	;# 
   172   000FAB                     RCSTA           equ	4011	;# 
   173   000FAB                     RCSTA1          equ	4011	;# 
   174   000FAC                     TXSTA           equ	4012	;# 
   175   000FAC                     TXSTA1          equ	4012	;# 
   176   000FAD                     TXREG           equ	4013	;# 
   177   000FAD                     TXREG1          equ	4013	;# 
   178   000FAE                     RCREG           equ	4014	;# 
   179   000FAE                     RCREG1          equ	4014	;# 
   180   000FAF                     SPBRG           equ	4015	;# 
   181   000FAF                     SPBRG1          equ	4015	;# 
   182   000FB0                     SPBRGH          equ	4016	;# 
   183   000FB1                     T3CON           equ	4017	;# 
   184   000FB2                     TMR3            equ	4018	;# 
   185   000FB2                     TMR3L           equ	4018	;# 
   186   000FB3                     TMR3H           equ	4019	;# 
   187   000FB4                     CMCON           equ	4020	;# 
   188   000FB5                     CVRCON          equ	4021	;# 
   189   000FB6                     ECCP1AS         equ	4022	;# 
   190   000FB6                     ECCPAS          equ	4022	;# 
   191   000FB7                     PWM1CON         equ	4023	;# 
   192   000FB7                     ECCP1DEL        equ	4023	;# 
   193   000FB8                     BAUDCON         equ	4024	;# 
   194   000FB8                     BAUDCTL         equ	4024	;# 
   195   000FBA                     CCP2CON         equ	4026	;# 
   196   000FBB                     CCPR2           equ	4027	;# 
   197   000FBB                     CCPR2L          equ	4027	;# 
   198   000FBC                     CCPR2H          equ	4028	;# 
   199   000FBD                     CCP1CON         equ	4029	;# 
   200   000FBE                     CCPR1           equ	4030	;# 
   201   000FBE                     CCPR1L          equ	4030	;# 
   202   000FBF                     CCPR1H          equ	4031	;# 
   203   000FC0                     ADCON2          equ	4032	;# 
   204   000FC1                     ADCON1          equ	4033	;# 
   205   000FC2                     ADCON0          equ	4034	;# 
   206   000FC3                     ADRES           equ	4035	;# 
   207   000FC3                     ADRESL          equ	4035	;# 
   208   000FC4                     ADRESH          equ	4036	;# 
   209   000FC5                     SSPCON2         equ	4037	;# 
   210   000FC6                     SSPCON1         equ	4038	;# 
   211   000FC7                     SSPSTAT         equ	4039	;# 
   212   000FC8                     SSPADD          equ	4040	;# 
   213   000FC9                     SSPBUF          equ	4041	;# 
   214   000FCA                     T2CON           equ	4042	;# 
   215   000FCB                     PR2             equ	4043	;# 
   216   000FCB                     MEMCON          equ	4043	;# 
   217   000FCC                     TMR2            equ	4044	;# 
   218   000FCD                     T1CON           equ	4045	;# 
   219   000FCE                     TMR1            equ	4046	;# 
   220   000FCE                     TMR1L           equ	4046	;# 
   221   000FCF                     TMR1H           equ	4047	;# 
   222   000FD0                     RCON            equ	4048	;# 
   223   000FD1                     WDTCON          equ	4049	;# 
   224   000FD2                     HLVDCON         equ	4050	;# 
   225   000FD2                     LVDCON          equ	4050	;# 
   226   000FD3                     OSCCON          equ	4051	;# 
   227   000FD5                     T0CON           equ	4053	;# 
   228   000FD6                     TMR0            equ	4054	;# 
   229   000FD6                     TMR0L           equ	4054	;# 
   230   000FD7                     TMR0H           equ	4055	;# 
   231   000FD8                     STATUS          equ	4056	;# 
   232   000FD9                     FSR2            equ	4057	;# 
   233   000FD9                     FSR2L           equ	4057	;# 
   234   000FDA                     FSR2H           equ	4058	;# 
   235   000FDB                     PLUSW2          equ	4059	;# 
   236   000FDC                     PREINC2         equ	4060	;# 
   237   000FDD                     POSTDEC2        equ	4061	;# 
   238   000FDE                     POSTINC2        equ	4062	;# 
   239   000FDF                     INDF2           equ	4063	;# 
   240   000FE0                     BSR             equ	4064	;# 
   241   000FE1                     FSR1            equ	4065	;# 
   242   000FE1                     FSR1L           equ	4065	;# 
   243   000FE2                     FSR1H           equ	4066	;# 
   244   000FE3                     PLUSW1          equ	4067	;# 
   245   000FE4                     PREINC1         equ	4068	;# 
   246   000FE5                     POSTDEC1        equ	4069	;# 
   247   000FE6                     POSTINC1        equ	4070	;# 
   248   000FE7                     INDF1           equ	4071	;# 
   249   000FE8                     WREG            equ	4072	;# 
   250   000FE9                     FSR0            equ	4073	;# 
   251   000FE9                     FSR0L           equ	4073	;# 
   252   000FEA                     FSR0H           equ	4074	;# 
   253   000FEB                     PLUSW0          equ	4075	;# 
   254   000FEC                     PREINC0         equ	4076	;# 
   255   000FED                     POSTDEC0        equ	4077	;# 
   256   000FEE                     POSTINC0        equ	4078	;# 
   257   000FEF                     INDF0           equ	4079	;# 
   258   000FF0                     INTCON3         equ	4080	;# 
   259   000FF1                     INTCON2         equ	4081	;# 
   260   000FF2                     INTCON          equ	4082	;# 
   261   000FF3                     PROD            equ	4083	;# 
   262   000FF3                     PRODL           equ	4083	;# 
   263   000FF4                     PRODH           equ	4084	;# 
   264   000FF5                     TABLAT          equ	4085	;# 
   265   000FF6                     TBLPTR          equ	4086	;# 
   266   000FF6                     TBLPTRL         equ	4086	;# 
   267   000FF7                     TBLPTRH         equ	4087	;# 
   268   000FF8                     TBLPTRU         equ	4088	;# 
   269   000FF9                     PCLAT           equ	4089	;# 
   270   000FF9                     PC              equ	4089	;# 
   271   000FF9                     PCL             equ	4089	;# 
   272   000FFA                     PCLATH          equ	4090	;# 
   273   000FFB                     PCLATU          equ	4091	;# 
   274   000FFC                     STKPTR          equ	4092	;# 
   275   000FFD                     TOS             equ	4093	;# 
   276   000FFD                     TOSL            equ	4093	;# 
   277   000FFE                     TOSH            equ	4094	;# 
   278   000FFF                     TOSU            equ	4095	;# 
   279   000F80                     PORTA           equ	3968	;# 
   280   000F81                     PORTB           equ	3969	;# 
   281   000F82                     PORTC           equ	3970	;# 
   282   000F83                     PORTD           equ	3971	;# 
   283   000F84                     PORTE           equ	3972	;# 
   284   000F89                     LATA            equ	3977	;# 
   285   000F8A                     LATB            equ	3978	;# 
   286   000F8B                     LATC            equ	3979	;# 
   287   000F8C                     LATD            equ	3980	;# 
   288   000F8D                     LATE            equ	3981	;# 
   289   000F92                     TRISA           equ	3986	;# 
   290   000F92                     DDRA            equ	3986	;# 
   291   000F93                     TRISB           equ	3987	;# 
   292   000F93                     DDRB            equ	3987	;# 
   293   000F94                     TRISC           equ	3988	;# 
   294   000F94                     DDRC            equ	3988	;# 
   295   000F95                     TRISD           equ	3989	;# 
   296   000F95                     DDRD            equ	3989	;# 
   297   000F96                     TRISE           equ	3990	;# 
   298   000F96                     DDRE            equ	3990	;# 
   299   000F9B                     OSCTUNE         equ	3995	;# 
   300   000F9D                     PIE1            equ	3997	;# 
   301   000F9E                     PIR1            equ	3998	;# 
   302   000F9F                     IPR1            equ	3999	;# 
   303   000FA0                     PIE2            equ	4000	;# 
   304   000FA1                     PIR2            equ	4001	;# 
   305   000FA2                     IPR2            equ	4002	;# 
   306   000FA6                     EECON1          equ	4006	;# 
   307   000FA7                     EECON2          equ	4007	;# 
   308   000FA8                     EEDATA          equ	4008	;# 
   309   000FA9                     EEADR           equ	4009	;# 
   310   000FAB                     RCSTA           equ	4011	;# 
   311   000FAB                     RCSTA1          equ	4011	;# 
   312   000FAC                     TXSTA           equ	4012	;# 
   313   000FAC                     TXSTA1          equ	4012	;# 
   314   000FAD                     TXREG           equ	4013	;# 
   315   000FAD                     TXREG1          equ	4013	;# 
   316   000FAE                     RCREG           equ	4014	;# 
   317   000FAE                     RCREG1          equ	4014	;# 
   318   000FAF                     SPBRG           equ	4015	;# 
   319   000FAF                     SPBRG1          equ	4015	;# 
   320   000FB0                     SPBRGH          equ	4016	;# 
   321   000FB1                     T3CON           equ	4017	;# 
   322   000FB2                     TMR3            equ	4018	;# 
   323   000FB2                     TMR3L           equ	4018	;# 
   324   000FB3                     TMR3H           equ	4019	;# 
   325   000FB4                     CMCON           equ	4020	;# 
   326   000FB5                     CVRCON          equ	4021	;# 
   327   000FB6                     ECCP1AS         equ	4022	;# 
   328   000FB6                     ECCPAS          equ	4022	;# 
   329   000FB7                     PWM1CON         equ	4023	;# 
   330   000FB7                     ECCP1DEL        equ	4023	;# 
   331   000FB8                     BAUDCON         equ	4024	;# 
   332   000FB8                     BAUDCTL         equ	4024	;# 
   333   000FBA                     CCP2CON         equ	4026	;# 
   334   000FBB                     CCPR2           equ	4027	;# 
   335   000FBB                     CCPR2L          equ	4027	;# 
   336   000FBC                     CCPR2H          equ	4028	;# 
   337   000FBD                     CCP1CON         equ	4029	;# 
   338   000FBE                     CCPR1           equ	4030	;# 
   339   000FBE                     CCPR1L          equ	4030	;# 
   340   000FBF                     CCPR1H          equ	4031	;# 
   341   000FC0                     ADCON2          equ	4032	;# 
   342   000FC1                     ADCON1          equ	4033	;# 
   343   000FC2                     ADCON0          equ	4034	;# 
   344   000FC3                     ADRES           equ	4035	;# 
   345   000FC3                     ADRESL          equ	4035	;# 
   346   000FC4                     ADRESH          equ	4036	;# 
   347   000FC5                     SSPCON2         equ	4037	;# 
   348   000FC6                     SSPCON1         equ	4038	;# 
   349   000FC7                     SSPSTAT         equ	4039	;# 
   350   000FC8                     SSPADD          equ	4040	;# 
   351   000FC9                     SSPBUF          equ	4041	;# 
   352   000FCA                     T2CON           equ	4042	;# 
   353   000FCB                     PR2             equ	4043	;# 
   354   000FCB                     MEMCON          equ	4043	;# 
   355   000FCC                     TMR2            equ	4044	;# 
   356   000FCD                     T1CON           equ	4045	;# 
   357   000FCE                     TMR1            equ	4046	;# 
   358   000FCE                     TMR1L           equ	4046	;# 
   359   000FCF                     TMR1H           equ	4047	;# 
   360   000FD0                     RCON            equ	4048	;# 
   361   000FD1                     WDTCON          equ	4049	;# 
   362   000FD2                     HLVDCON         equ	4050	;# 
   363   000FD2                     LVDCON          equ	4050	;# 
   364   000FD3                     OSCCON          equ	4051	;# 
   365   000FD5                     T0CON           equ	4053	;# 
   366   000FD6                     TMR0            equ	4054	;# 
   367   000FD6                     TMR0L           equ	4054	;# 
   368   000FD7                     TMR0H           equ	4055	;# 
   369   000FD8                     STATUS          equ	4056	;# 
   370   000FD9                     FSR2            equ	4057	;# 
   371   000FD9                     FSR2L           equ	4057	;# 
   372   000FDA                     FSR2H           equ	4058	;# 
   373   000FDB                     PLUSW2          equ	4059	;# 
   374   000FDC                     PREINC2         equ	4060	;# 
   375   000FDD                     POSTDEC2        equ	4061	;# 
   376   000FDE                     POSTINC2        equ	4062	;# 
   377   000FDF                     INDF2           equ	4063	;# 
   378   000FE0                     BSR             equ	4064	;# 
   379   000FE1                     FSR1            equ	4065	;# 
   380   000FE1                     FSR1L           equ	4065	;# 
   381   000FE2                     FSR1H           equ	4066	;# 
   382   000FE3                     PLUSW1          equ	4067	;# 
   383   000FE4                     PREINC1         equ	4068	;# 
   384   000FE5                     POSTDEC1        equ	4069	;# 
   385   000FE6                     POSTINC1        equ	4070	;# 
   386   000FE7                     INDF1           equ	4071	;# 
   387   000FE8                     WREG            equ	4072	;# 
   388   000FE9                     FSR0            equ	4073	;# 
   389   000FE9                     FSR0L           equ	4073	;# 
   390   000FEA                     FSR0H           equ	4074	;# 
   391   000FEB                     PLUSW0          equ	4075	;# 
   392   000FEC                     PREINC0         equ	4076	;# 
   393   000FED                     POSTDEC0        equ	4077	;# 
   394   000FEE                     POSTINC0        equ	4078	;# 
   395   000FEF                     INDF0           equ	4079	;# 
   396   000FF0                     INTCON3         equ	4080	;# 
   397   000FF1                     INTCON2         equ	4081	;# 
   398   000FF2                     INTCON          equ	4082	;# 
   399   000FF3                     PROD            equ	4083	;# 
   400   000FF3                     PRODL           equ	4083	;# 
   401   000FF4                     PRODH           equ	4084	;# 
   402   000FF5                     TABLAT          equ	4085	;# 
   403   000FF6                     TBLPTR          equ	4086	;# 
   404   000FF6                     TBLPTRL         equ	4086	;# 
   405   000FF7                     TBLPTRH         equ	4087	;# 
   406   000FF8                     TBLPTRU         equ	4088	;# 
   407   000FF9                     PCLAT           equ	4089	;# 
   408   000FF9                     PC              equ	4089	;# 
   409   000FF9                     PCL             equ	4089	;# 
   410   000FFA                     PCLATH          equ	4090	;# 
   411   000FFB                     PCLATU          equ	4091	;# 
   412   000FFC                     STKPTR          equ	4092	;# 
   413   000FFD                     TOS             equ	4093	;# 
   414   000FFD                     TOSL            equ	4093	;# 
   415   000FFE                     TOSH            equ	4094	;# 
   416   000FFF                     TOSU            equ	4095	;# 
   417   000F80                     PORTA           equ	3968	;# 
   418   000F81                     PORTB           equ	3969	;# 
   419   000F82                     PORTC           equ	3970	;# 
   420   000F83                     PORTD           equ	3971	;# 
   421   000F84                     PORTE           equ	3972	;# 
   422   000F89                     LATA            equ	3977	;# 
   423   000F8A                     LATB            equ	3978	;# 
   424   000F8B                     LATC            equ	3979	;# 
   425   000F8C                     LATD            equ	3980	;# 
   426   000F8D                     LATE            equ	3981	;# 
   427   000F92                     TRISA           equ	3986	;# 
   428   000F92                     DDRA            equ	3986	;# 
   429   000F93                     TRISB           equ	3987	;# 
   430   000F93                     DDRB            equ	3987	;# 
   431   000F94                     TRISC           equ	3988	;# 
   432   000F94                     DDRC            equ	3988	;# 
   433   000F95                     TRISD           equ	3989	;# 
   434   000F95                     DDRD            equ	3989	;# 
   435   000F96                     TRISE           equ	3990	;# 
   436   000F96                     DDRE            equ	3990	;# 
   437   000F9B                     OSCTUNE         equ	3995	;# 
   438   000F9D                     PIE1            equ	3997	;# 
   439   000F9E                     PIR1            equ	3998	;# 
   440   000F9F                     IPR1            equ	3999	;# 
   441   000FA0                     PIE2            equ	4000	;# 
   442   000FA1                     PIR2            equ	4001	;# 
   443   000FA2                     IPR2            equ	4002	;# 
   444   000FA6                     EECON1          equ	4006	;# 
   445   000FA7                     EECON2          equ	4007	;# 
   446   000FA8                     EEDATA          equ	4008	;# 
   447   000FA9                     EEADR           equ	4009	;# 
   448   000FAB                     RCSTA           equ	4011	;# 
   449   000FAB                     RCSTA1          equ	4011	;# 
   450   000FAC                     TXSTA           equ	4012	;# 
   451   000FAC                     TXSTA1          equ	4012	;# 
   452   000FAD                     TXREG           equ	4013	;# 
   453   000FAD                     TXREG1          equ	4013	;# 
   454   000FAE                     RCREG           equ	4014	;# 
   455   000FAE                     RCREG1          equ	4014	;# 
   456   000FAF                     SPBRG           equ	4015	;# 
   457   000FAF                     SPBRG1          equ	4015	;# 
   458   000FB0                     SPBRGH          equ	4016	;# 
   459   000FB1                     T3CON           equ	4017	;# 
   460   000FB2                     TMR3            equ	4018	;# 
   461   000FB2                     TMR3L           equ	4018	;# 
   462   000FB3                     TMR3H           equ	4019	;# 
   463   000FB4                     CMCON           equ	4020	;# 
   464   000FB5                     CVRCON          equ	4021	;# 
   465   000FB6                     ECCP1AS         equ	4022	;# 
   466   000FB6                     ECCPAS          equ	4022	;# 
   467   000FB7                     PWM1CON         equ	4023	;# 
   468   000FB7                     ECCP1DEL        equ	4023	;# 
   469   000FB8                     BAUDCON         equ	4024	;# 
   470   000FB8                     BAUDCTL         equ	4024	;# 
   471   000FBA                     CCP2CON         equ	4026	;# 
   472   000FBB                     CCPR2           equ	4027	;# 
   473   000FBB                     CCPR2L          equ	4027	;# 
   474   000FBC                     CCPR2H          equ	4028	;# 
   475   000FBD                     CCP1CON         equ	4029	;# 
   476   000FBE                     CCPR1           equ	4030	;# 
   477   000FBE                     CCPR1L          equ	4030	;# 
   478   000FBF                     CCPR1H          equ	4031	;# 
   479   000FC0                     ADCON2          equ	4032	;# 
   480   000FC1                     ADCON1          equ	4033	;# 
   481   000FC2                     ADCON0          equ	4034	;# 
   482   000FC3                     ADRES           equ	4035	;# 
   483   000FC3                     ADRESL          equ	4035	;# 
   484   000FC4                     ADRESH          equ	4036	;# 
   485   000FC5                     SSPCON2         equ	4037	;# 
   486   000FC6                     SSPCON1         equ	4038	;# 
   487   000FC7                     SSPSTAT         equ	4039	;# 
   488   000FC8                     SSPADD          equ	4040	;# 
   489   000FC9                     SSPBUF          equ	4041	;# 
   490   000FCA                     T2CON           equ	4042	;# 
   491   000FCB                     PR2             equ	4043	;# 
   492   000FCB                     MEMCON          equ	4043	;# 
   493   000FCC                     TMR2            equ	4044	;# 
   494   000FCD                     T1CON           equ	4045	;# 
   495   000FCE                     TMR1            equ	4046	;# 
   496   000FCE                     TMR1L           equ	4046	;# 
   497   000FCF                     TMR1H           equ	4047	;# 
   498   000FD0                     RCON            equ	4048	;# 
   499   000FD1                     WDTCON          equ	4049	;# 
   500   000FD2                     HLVDCON         equ	4050	;# 
   501   000FD2                     LVDCON          equ	4050	;# 
   502   000FD3                     OSCCON          equ	4051	;# 
   503   000FD5                     T0CON           equ	4053	;# 
   504   000FD6                     TMR0            equ	4054	;# 
   505   000FD6                     TMR0L           equ	4054	;# 
   506   000FD7                     TMR0H           equ	4055	;# 
   507   000FD8                     STATUS          equ	4056	;# 
   508   000FD9                     FSR2            equ	4057	;# 
   509   000FD9                     FSR2L           equ	4057	;# 
   510   000FDA                     FSR2H           equ	4058	;# 
   511   000FDB                     PLUSW2          equ	4059	;# 
   512   000FDC                     PREINC2         equ	4060	;# 
   513   000FDD                     POSTDEC2        equ	4061	;# 
   514   000FDE                     POSTINC2        equ	4062	;# 
   515   000FDF                     INDF2           equ	4063	;# 
   516   000FE0                     BSR             equ	4064	;# 
   517   000FE1                     FSR1            equ	4065	;# 
   518   000FE1                     FSR1L           equ	4065	;# 
   519   000FE2                     FSR1H           equ	4066	;# 
   520   000FE3                     PLUSW1          equ	4067	;# 
   521   000FE4                     PREINC1         equ	4068	;# 
   522   000FE5                     POSTDEC1        equ	4069	;# 
   523   000FE6                     POSTINC1        equ	4070	;# 
   524   000FE7                     INDF1           equ	4071	;# 
   525   000FE8                     WREG            equ	4072	;# 
   526   000FE9                     FSR0            equ	4073	;# 
   527   000FE9                     FSR0L           equ	4073	;# 
   528   000FEA                     FSR0H           equ	4074	;# 
   529   000FEB                     PLUSW0          equ	4075	;# 
   530   000FEC                     PREINC0         equ	4076	;# 
   531   000FED                     POSTDEC0        equ	4077	;# 
   532   000FEE                     POSTINC0        equ	4078	;# 
   533   000FEF                     INDF0           equ	4079	;# 
   534   000FF0                     INTCON3         equ	4080	;# 
   535   000FF1                     INTCON2         equ	4081	;# 
   536   000FF2                     INTCON          equ	4082	;# 
   537   000FF3                     PROD            equ	4083	;# 
   538   000FF3                     PRODL           equ	4083	;# 
   539   000FF4                     PRODH           equ	4084	;# 
   540   000FF5                     TABLAT          equ	4085	;# 
   541   000FF6                     TBLPTR          equ	4086	;# 
   542   000FF6                     TBLPTRL         equ	4086	;# 
   543   000FF7                     TBLPTRH         equ	4087	;# 
   544   000FF8                     TBLPTRU         equ	4088	;# 
   545   000FF9                     PCLAT           equ	4089	;# 
   546   000FF9                     PC              equ	4089	;# 
   547   000FF9                     PCL             equ	4089	;# 
   548   000FFA                     PCLATH          equ	4090	;# 
   549   000FFB                     PCLATU          equ	4091	;# 
   550   000FFC                     STKPTR          equ	4092	;# 
   551   000FFD                     TOS             equ	4093	;# 
   552   000FFD                     TOSL            equ	4093	;# 
   553   000FFE                     TOSH            equ	4094	;# 
   554   000FFF                     TOSU            equ	4095	;# 
   555   000F80                     PORTA           equ	3968	;# 
   556   000F81                     PORTB           equ	3969	;# 
   557   000F82                     PORTC           equ	3970	;# 
   558   000F83                     PORTD           equ	3971	;# 
   559   000F84                     PORTE           equ	3972	;# 
   560   000F89                     LATA            equ	3977	;# 
   561   000F8A                     LATB            equ	3978	;# 
   562   000F8B                     LATC            equ	3979	;# 
   563   000F8C                     LATD            equ	3980	;# 
   564   000F8D                     LATE            equ	3981	;# 
   565   000F92                     TRISA           equ	3986	;# 
   566   000F92                     DDRA            equ	3986	;# 
   567   000F93                     TRISB           equ	3987	;# 
   568   000F93                     DDRB            equ	3987	;# 
   569   000F94                     TRISC           equ	3988	;# 
   570   000F94                     DDRC            equ	3988	;# 
   571   000F95                     TRISD           equ	3989	;# 
   572   000F95                     DDRD            equ	3989	;# 
   573   000F96                     TRISE           equ	3990	;# 
   574   000F96                     DDRE            equ	3990	;# 
   575   000F9B                     OSCTUNE         equ	3995	;# 
   576   000F9D                     PIE1            equ	3997	;# 
   577   000F9E                     PIR1            equ	3998	;# 
   578   000F9F                     IPR1            equ	3999	;# 
   579   000FA0                     PIE2            equ	4000	;# 
   580   000FA1                     PIR2            equ	4001	;# 
   581   000FA2                     IPR2            equ	4002	;# 
   582   000FA6                     EECON1          equ	4006	;# 
   583   000FA7                     EECON2          equ	4007	;# 
   584   000FA8                     EEDATA          equ	4008	;# 
   585   000FA9                     EEADR           equ	4009	;# 
   586   000FAB                     RCSTA           equ	4011	;# 
   587   000FAB                     RCSTA1          equ	4011	;# 
   588   000FAC                     TXSTA           equ	4012	;# 
   589   000FAC                     TXSTA1          equ	4012	;# 
   590   000FAD                     TXREG           equ	4013	;# 
   591   000FAD                     TXREG1          equ	4013	;# 
   592   000FAE                     RCREG           equ	4014	;# 
   593   000FAE                     RCREG1          equ	4014	;# 
   594   000FAF                     SPBRG           equ	4015	;# 
   595   000FAF                     SPBRG1          equ	4015	;# 
   596   000FB0                     SPBRGH          equ	4016	;# 
   597   000FB1                     T3CON           equ	4017	;# 
   598   000FB2                     TMR3            equ	4018	;# 
   599   000FB2                     TMR3L           equ	4018	;# 
   600   000FB3                     TMR3H           equ	4019	;# 
   601   000FB4                     CMCON           equ	4020	;# 
   602   000FB5                     CVRCON          equ	4021	;# 
   603   000FB6                     ECCP1AS         equ	4022	;# 
   604   000FB6                     ECCPAS          equ	4022	;# 
   605   000FB7                     PWM1CON         equ	4023	;# 
   606   000FB7                     ECCP1DEL        equ	4023	;# 
   607   000FB8                     BAUDCON         equ	4024	;# 
   608   000FB8                     BAUDCTL         equ	4024	;# 
   609   000FBA                     CCP2CON         equ	4026	;# 
   610   000FBB                     CCPR2           equ	4027	;# 
   611   000FBB                     CCPR2L          equ	4027	;# 
   612   000FBC                     CCPR2H          equ	4028	;# 
   613   000FBD                     CCP1CON         equ	4029	;# 
   614   000FBE                     CCPR1           equ	4030	;# 
   615   000FBE                     CCPR1L          equ	4030	;# 
   616   000FBF                     CCPR1H          equ	4031	;# 
   617   000FC0                     ADCON2          equ	4032	;# 
   618   000FC1                     ADCON1          equ	4033	;# 
   619   000FC2                     ADCON0          equ	4034	;# 
   620   000FC3                     ADRES           equ	4035	;# 
   621   000FC3                     ADRESL          equ	4035	;# 
   622   000FC4                     ADRESH          equ	4036	;# 
   623   000FC5                     SSPCON2         equ	4037	;# 
   624   000FC6                     SSPCON1         equ	4038	;# 
   625   000FC7                     SSPSTAT         equ	4039	;# 
   626   000FC8                     SSPADD          equ	4040	;# 
   627   000FC9                     SSPBUF          equ	4041	;# 
   628   000FCA                     T2CON           equ	4042	;# 
   629   000FCB                     PR2             equ	4043	;# 
   630   000FCB                     MEMCON          equ	4043	;# 
   631   000FCC                     TMR2            equ	4044	;# 
   632   000FCD                     T1CON           equ	4045	;# 
   633   000FCE                     TMR1            equ	4046	;# 
   634   000FCE                     TMR1L           equ	4046	;# 
   635   000FCF                     TMR1H           equ	4047	;# 
   636   000FD0                     RCON            equ	4048	;# 
   637   000FD1                     WDTCON          equ	4049	;# 
   638   000FD2                     HLVDCON         equ	4050	;# 
   639   000FD2                     LVDCON          equ	4050	;# 
   640   000FD3                     OSCCON          equ	4051	;# 
   641   000FD5                     T0CON           equ	4053	;# 
   642   000FD6                     TMR0            equ	4054	;# 
   643   000FD6                     TMR0L           equ	4054	;# 
   644   000FD7                     TMR0H           equ	4055	;# 
   645   000FD8                     STATUS          equ	4056	;# 
   646   000FD9                     FSR2            equ	4057	;# 
   647   000FD9                     FSR2L           equ	4057	;# 
   648   000FDA                     FSR2H           equ	4058	;# 
   649   000FDB                     PLUSW2          equ	4059	;# 
   650   000FDC                     PREINC2         equ	4060	;# 
   651   000FDD                     POSTDEC2        equ	4061	;# 
   652   000FDE                     POSTINC2        equ	4062	;# 
   653   000FDF                     INDF2           equ	4063	;# 
   654   000FE0                     BSR             equ	4064	;# 
   655   000FE1                     FSR1            equ	4065	;# 
   656   000FE1                     FSR1L           equ	4065	;# 
   657   000FE2                     FSR1H           equ	4066	;# 
   658   000FE3                     PLUSW1          equ	4067	;# 
   659   000FE4                     PREINC1         equ	4068	;# 
   660   000FE5                     POSTDEC1        equ	4069	;# 
   661   000FE6                     POSTINC1        equ	4070	;# 
   662   000FE7                     INDF1           equ	4071	;# 
   663   000FE8                     WREG            equ	4072	;# 
   664   000FE9                     FSR0            equ	4073	;# 
   665   000FE9                     FSR0L           equ	4073	;# 
   666   000FEA                     FSR0H           equ	4074	;# 
   667   000FEB                     PLUSW0          equ	4075	;# 
   668   000FEC                     PREINC0         equ	4076	;# 
   669   000FED                     POSTDEC0        equ	4077	;# 
   670   000FEE                     POSTINC0        equ	4078	;# 
   671   000FEF                     INDF0           equ	4079	;# 
   672   000FF0                     INTCON3         equ	4080	;# 
   673   000FF1                     INTCON2         equ	4081	;# 
   674   000FF2                     INTCON          equ	4082	;# 
   675   000FF3                     PROD            equ	4083	;# 
   676   000FF3                     PRODL           equ	4083	;# 
   677   000FF4                     PRODH           equ	4084	;# 
   678   000FF5                     TABLAT          equ	4085	;# 
   679   000FF6                     TBLPTR          equ	4086	;# 
   680   000FF6                     TBLPTRL         equ	4086	;# 
   681   000FF7                     TBLPTRH         equ	4087	;# 
   682   000FF8                     TBLPTRU         equ	4088	;# 
   683   000FF9                     PCLAT           equ	4089	;# 
   684   000FF9                     PC              equ	4089	;# 
   685   000FF9                     PCL             equ	4089	;# 
   686   000FFA                     PCLATH          equ	4090	;# 
   687   000FFB                     PCLATU          equ	4091	;# 
   688   000FFC                     STKPTR          equ	4092	;# 
   689   000FFD                     TOS             equ	4093	;# 
   690   000FFD                     TOSL            equ	4093	;# 
   691   000FFE                     TOSH            equ	4094	;# 
   692   000FFF                     TOSU            equ	4095	;# 
   693   000F80                     PORTA           equ	3968	;# 
   694   000F81                     PORTB           equ	3969	;# 
   695   000F82                     PORTC           equ	3970	;# 
   696   000F83                     PORTD           equ	3971	;# 
   697   000F84                     PORTE           equ	3972	;# 
   698   000F89                     LATA            equ	3977	;# 
   699   000F8A                     LATB            equ	3978	;# 
   700   000F8B                     LATC            equ	3979	;# 
   701   000F8C                     LATD            equ	3980	;# 
   702   000F8D                     LATE            equ	3981	;# 
   703   000F92                     TRISA           equ	3986	;# 
   704   000F92                     DDRA            equ	3986	;# 
   705   000F93                     TRISB           equ	3987	;# 
   706   000F93                     DDRB            equ	3987	;# 
   707   000F94                     TRISC           equ	3988	;# 
   708   000F94                     DDRC            equ	3988	;# 
   709   000F95                     TRISD           equ	3989	;# 
   710   000F95                     DDRD            equ	3989	;# 
   711   000F96                     TRISE           equ	3990	;# 
   712   000F96                     DDRE            equ	3990	;# 
   713   000F9B                     OSCTUNE         equ	3995	;# 
   714   000F9D                     PIE1            equ	3997	;# 
   715   000F9E                     PIR1            equ	3998	;# 
   716   000F9F                     IPR1            equ	3999	;# 
   717   000FA0                     PIE2            equ	4000	;# 
   718   000FA1                     PIR2            equ	4001	;# 
   719   000FA2                     IPR2            equ	4002	;# 
   720   000FA6                     EECON1          equ	4006	;# 
   721   000FA7                     EECON2          equ	4007	;# 
   722   000FA8                     EEDATA          equ	4008	;# 
   723   000FA9                     EEADR           equ	4009	;# 
   724   000FAB                     RCSTA           equ	4011	;# 
   725   000FAB                     RCSTA1          equ	4011	;# 
   726   000FAC                     TXSTA           equ	4012	;# 
   727   000FAC                     TXSTA1          equ	4012	;# 
   728   000FAD                     TXREG           equ	4013	;# 
   729   000FAD                     TXREG1          equ	4013	;# 
   730   000FAE                     RCREG           equ	4014	;# 
   731   000FAE                     RCREG1          equ	4014	;# 
   732   000FAF                     SPBRG           equ	4015	;# 
   733   000FAF                     SPBRG1          equ	4015	;# 
   734   000FB0                     SPBRGH          equ	4016	;# 
   735   000FB1                     T3CON           equ	4017	;# 
   736   000FB2                     TMR3            equ	4018	;# 
   737   000FB2                     TMR3L           equ	4018	;# 
   738   000FB3                     TMR3H           equ	4019	;# 
   739   000FB4                     CMCON           equ	4020	;# 
   740   000FB5                     CVRCON          equ	4021	;# 
   741   000FB6                     ECCP1AS         equ	4022	;# 
   742   000FB6                     ECCPAS          equ	4022	;# 
   743   000FB7                     PWM1CON         equ	4023	;# 
   744   000FB7                     ECCP1DEL        equ	4023	;# 
   745   000FB8                     BAUDCON         equ	4024	;# 
   746   000FB8                     BAUDCTL         equ	4024	;# 
   747   000FBA                     CCP2CON         equ	4026	;# 
   748   000FBB                     CCPR2           equ	4027	;# 
   749   000FBB                     CCPR2L          equ	4027	;# 
   750   000FBC                     CCPR2H          equ	4028	;# 
   751   000FBD                     CCP1CON         equ	4029	;# 
   752   000FBE                     CCPR1           equ	4030	;# 
   753   000FBE                     CCPR1L          equ	4030	;# 
   754   000FBF                     CCPR1H          equ	4031	;# 
   755   000FC0                     ADCON2          equ	4032	;# 
   756   000FC1                     ADCON1          equ	4033	;# 
   757   000FC2                     ADCON0          equ	4034	;# 
   758   000FC3                     ADRES           equ	4035	;# 
   759   000FC3                     ADRESL          equ	4035	;# 
   760   000FC4                     ADRESH          equ	4036	;# 
   761   000FC5                     SSPCON2         equ	4037	;# 
   762   000FC6                     SSPCON1         equ	4038	;# 
   763   000FC7                     SSPSTAT         equ	4039	;# 
   764   000FC8                     SSPADD          equ	4040	;# 
   765   000FC9                     SSPBUF          equ	4041	;# 
   766   000FCA                     T2CON           equ	4042	;# 
   767   000FCB                     PR2             equ	4043	;# 
   768   000FCB                     MEMCON          equ	4043	;# 
   769   000FCC                     TMR2            equ	4044	;# 
   770   000FCD                     T1CON           equ	4045	;# 
   771   000FCE                     TMR1            equ	4046	;# 
   772   000FCE                     TMR1L           equ	4046	;# 
   773   000FCF                     TMR1H           equ	4047	;# 
   774   000FD0                     RCON            equ	4048	;# 
   775   000FD1                     WDTCON          equ	4049	;# 
   776   000FD2                     HLVDCON         equ	4050	;# 
   777   000FD2                     LVDCON          equ	4050	;# 
   778   000FD3                     OSCCON          equ	4051	;# 
   779   000FD5                     T0CON           equ	4053	;# 
   780   000FD6                     TMR0            equ	4054	;# 
   781   000FD6                     TMR0L           equ	4054	;# 
   782   000FD7                     TMR0H           equ	4055	;# 
   783   000FD8                     STATUS          equ	4056	;# 
   784   000FD9                     FSR2            equ	4057	;# 
   785   000FD9                     FSR2L           equ	4057	;# 
   786   000FDA                     FSR2H           equ	4058	;# 
   787   000FDB                     PLUSW2          equ	4059	;# 
   788   000FDC                     PREINC2         equ	4060	;# 
   789   000FDD                     POSTDEC2        equ	4061	;# 
   790   000FDE                     POSTINC2        equ	4062	;# 
   791   000FDF                     INDF2           equ	4063	;# 
   792   000FE0                     BSR             equ	4064	;# 
   793   000FE1                     FSR1            equ	4065	;# 
   794   000FE1                     FSR1L           equ	4065	;# 
   795   000FE2                     FSR1H           equ	4066	;# 
   796   000FE3                     PLUSW1          equ	4067	;# 
   797   000FE4                     PREINC1         equ	4068	;# 
   798   000FE5                     POSTDEC1        equ	4069	;# 
   799   000FE6                     POSTINC1        equ	4070	;# 
   800   000FE7                     INDF1           equ	4071	;# 
   801   000FE8                     WREG            equ	4072	;# 
   802   000FE9                     FSR0            equ	4073	;# 
   803   000FE9                     FSR0L           equ	4073	;# 
   804   000FEA                     FSR0H           equ	4074	;# 
   805   000FEB                     PLUSW0          equ	4075	;# 
   806   000FEC                     PREINC0         equ	4076	;# 
   807   000FED                     POSTDEC0        equ	4077	;# 
   808   000FEE                     POSTINC0        equ	4078	;# 
   809   000FEF                     INDF0           equ	4079	;# 
   810   000FF0                     INTCON3         equ	4080	;# 
   811   000FF1                     INTCON2         equ	4081	;# 
   812   000FF2                     INTCON          equ	4082	;# 
   813   000FF3                     PROD            equ	4083	;# 
   814   000FF3                     PRODL           equ	4083	;# 
   815   000FF4                     PRODH           equ	4084	;# 
   816   000FF5                     TABLAT          equ	4085	;# 
   817   000FF6                     TBLPTR          equ	4086	;# 
   818   000FF6                     TBLPTRL         equ	4086	;# 
   819   000FF7                     TBLPTRH         equ	4087	;# 
   820   000FF8                     TBLPTRU         equ	4088	;# 
   821   000FF9                     PCLAT           equ	4089	;# 
   822   000FF9                     PC              equ	4089	;# 
   823   000FF9                     PCL             equ	4089	;# 
   824   000FFA                     PCLATH          equ	4090	;# 
   825   000FFB                     PCLATU          equ	4091	;# 
   826   000FFC                     STKPTR          equ	4092	;# 
   827   000FFD                     TOS             equ	4093	;# 
   828   000FFD                     TOSL            equ	4093	;# 
   829   000FFE                     TOSH            equ	4094	;# 
   830   000FFF                     TOSU            equ	4095	;# 
   831                           
   832                           	psect	idataBANK0
   833   0013B2                     __pidataBANK0:
   834                           	callstack 0
   835                           
   836                           ;initializer for _which_heart
   837   0013B2  0001               	dw	1
   838                           
   839                           ;initializer for _pre_state
   840   0013B4  39                 	db	57
   841                           
   842                           ;initializer for _state
   843   0013B5  30                 	db	48
   844                           
   845                           	psect	mediumconst
   846   007BBC                     __pmediumconst:
   847                           	callstack 0
   848   007BBC  00                 	db	0
   849   007BBD                     _number:
   850                           	callstack 0
   851   007BBD  F0                 	db	240
   852   007BBE  0F                 	db	15
   853   007BBF  FC                 	db	252
   854   007BC0  3F                 	db	63
   855   007BC1  0E                 	db	14
   856   007BC2  70                 	db	112
   857   007BC3  03                 	db	3
   858   007BC4  C0                 	db	192
   859   007BC5  03                 	db	3
   860   007BC6  C0                 	db	192
   861   007BC7  03                 	db	3
   862   007BC8  C0                 	db	192
   863   007BC9  03                 	db	3
   864   007BCA  C0                 	db	192
   865   007BCB  03                 	db	3
   866   007BCC  C0                 	db	192
   867   007BCD  03                 	db	3
   868   007BCE  C0                 	db	192
   869   007BCF  0E                 	db	14
   870   007BD0  70                 	db	112
   871   007BD1  FC                 	db	252
   872   007BD2  3F                 	db	63
   873   007BD3  F0                 	db	240
   874   007BD4  0F                 	db	15
   875   007BD5  00                 	db	0
   876   007BD6  C0                 	db	192
   877   007BD7  30                 	db	48
   878   007BD8  C0                 	db	192
   879   007BD9  30                 	db	48
   880   007BDA  C0                 	db	192
   881   007BDB  0C                 	db	12
   882   007BDC  C0                 	db	192
   883   007BDD  0C                 	db	12
   884   007BDE  C0                 	db	192
   885   007BDF  FF                 	db	255
   886   007BE0  FF                 	db	255
   887   007BE1  FF                 	db	255
   888   007BE2  FF                 	db	255
   889   007BE3  00                 	db	0
   890   007BE4  C0                 	db	192
   891   007BE5  00                 	db	0
   892   007BE6  C0                 	db	192
   893   007BE7  00                 	db	0
   894   007BE8  C0                 	db	192
   895   007BE9  00                 	db	0
   896   007BEA  C0                 	db	192
   897   007BEB  00                 	db	0
   898   007BEC  C0                 	db	192
   899   007BED  0C                 	db	12
   900   007BEE  F0                 	db	240
   901   007BEF  0C                 	db	12
   902   007BF0  F0                 	db	240
   903   007BF1  03                 	db	3
   904   007BF2  CC                 	db	204
   905   007BF3  03                 	db	3
   906   007BF4  CC                 	db	204
   907   007BF5  03                 	db	3
   908   007BF6  C3                 	db	195
   909   007BF7  03                 	db	3
   910   007BF8  C3                 	db	195
   911   007BF9  03                 	db	3
   912   007BFA  C3                 	db	195
   913   007BFB  03                 	db	3
   914   007BFC  C3                 	db	195
   915   007BFD  C3                 	db	195
   916   007BFE  C0                 	db	192
   917   007BFF  C3                 	db	195
   918   007C00  C0                 	db	192
   919   007C01  3C                 	db	60
   920   007C02  C0                 	db	192
   921   007C03  3C                 	db	60
   922   007C04  C0                 	db	192
   923   007C05  0C                 	db	12
   924   007C06  30                 	db	48
   925   007C07  0C                 	db	12
   926   007C08  30                 	db	48
   927   007C09  03                 	db	3
   928   007C0A  C0                 	db	192
   929   007C0B  03                 	db	3
   930   007C0C  C0                 	db	192
   931   007C0D  83                 	db	131
   932   007C0E  C1                 	db	193
   933   007C0F  83                 	db	131
   934   007C10  C1                 	db	193
   935   007C11  83                 	db	131
   936   007C12  C1                 	db	193
   937   007C13  83                 	db	131
   938   007C14  C1                 	db	193
   939   007C15  83                 	db	131
   940   007C16  C1                 	db	193
   941   007C17  83                 	db	131
   942   007C18  C1                 	db	193
   943   007C19  7C                 	db	124
   944   007C1A  3E                 	db	62
   945   007C1B  7C                 	db	124
   946   007C1C  3E                 	db	62
   947   007C1D  00                 	db	0
   948   007C1E  0F                 	db	15
   949   007C1F  C0                 	db	192
   950   007C20  0F                 	db	15
   951   007C21  F0                 	db	240
   952   007C22  0C                 	db	12
   953   007C23  3C                 	db	60
   954   007C24  0C                 	db	12
   955   007C25  0C                 	db	12
   956   007C26  0C                 	db	12
   957   007C27  0F                 	db	15
   958   007C28  0C                 	db	12
   959   007C29  03                 	db	3
   960   007C2A  0C                 	db	12
   961   007C2B  FF                 	db	255
   962   007C2C  FF                 	db	255
   963   007C2D  FF                 	db	255
   964   007C2E  FF                 	db	255
   965   007C2F  00                 	db	0
   966   007C30  0C                 	db	12
   967   007C31  00                 	db	0
   968   007C32  0C                 	db	12
   969   007C33  00                 	db	0
   970   007C34  0C                 	db	12
   971   007C35  FF                 	db	255
   972   007C36  30                 	db	48
   973   007C37  FF                 	db	255
   974   007C38  70                 	db	112
   975   007C39  83                 	db	131
   976   007C3A  60                 	db	96
   977   007C3B  83                 	db	131
   978   007C3C  C0                 	db	192
   979   007C3D  C3                 	db	195
   980   007C3E  80                 	db	128
   981   007C3F  C3                 	db	195
   982   007C40  80                 	db	128
   983   007C41  C3                 	db	195
   984   007C42  80                 	db	128
   985   007C43  C3                 	db	195
   986   007C44  80                 	db	128
   987   007C45  83                 	db	131
   988   007C46  C1                 	db	193
   989   007C47  83                 	db	131
   990   007C48  61                 	db	97
   991   007C49  03                 	db	3
   992   007C4A  77                 	db	119
   993   007C4B  00                 	db	0
   994   007C4C  1C                 	db	28
   995   007C4D  F0                 	db	240
   996   007C4E  1F                 	db	31
   997   007C4F  FC                 	db	252
   998   007C50  3F                 	db	63
   999   007C51  0C                 	db	12
  1000   007C52  63                 	db	99
  1001   007C53  83                 	db	131
  1002   007C54  63                 	db	99
  1003   007C55  C3                 	db	195
  1004   007C56  C0                 	db	192
  1005   007C57  C3                 	db	195
  1006   007C58  C0                 	db	192
  1007   007C59  C3                 	db	195
  1008   007C5A  C0                 	db	192
  1009   007C5B  C3                 	db	195
  1010   007C5C  C0                 	db	192
  1011   007C5D  83                 	db	131
  1012   007C5E  61                 	db	97
  1013   007C5F  8E                 	db	142
  1014   007C60  61                 	db	97
  1015   007C61  0C                 	db	12
  1016   007C62  3F                 	db	63
  1017   007C63  00                 	db	0
  1018   007C64  1E                 	db	30
  1019   007C65  0F                 	db	15
  1020   007C66  00                 	db	0
  1021   007C67  3F                 	db	63
  1022   007C68  00                 	db	0
  1023   007C69  33                 	db	51
  1024   007C6A  00                 	db	0
  1025   007C6B  03                 	db	3
  1026   007C6C  00                 	db	0
  1027   007C6D  03                 	db	3
  1028   007C6E  00                 	db	0
  1029   007C6F  03                 	db	3
  1030   007C70  C0                 	db	192
  1031   007C71  03                 	db	3
  1032   007C72  F0                 	db	240
  1033   007C73  03                 	db	3
  1034   007C74  3C                 	db	60
  1035   007C75  03                 	db	3
  1036   007C76  0F                 	db	15
  1037   007C77  C3                 	db	195
  1038   007C78  03                 	db	3
  1039   007C79  FF                 	db	255
  1040   007C7A  00                 	db	0
  1041   007C7B  3F                 	db	63
  1042   007C7C  00                 	db	0
  1043   007C7D  3C                 	db	60
  1044   007C7E  3C                 	db	60
  1045   007C7F  3C                 	db	60
  1046   007C80  3C                 	db	60
  1047   007C81  63                 	db	99
  1048   007C82  C3                 	db	195
  1049   007C83  63                 	db	99
  1050   007C84  C3                 	db	195
  1051   007C85  C3                 	db	195
  1052   007C86  C1                 	db	193
  1053   007C87  C3                 	db	195
  1054   007C88  C1                 	db	193
  1055   007C89  C3                 	db	195
  1056   007C8A  C1                 	db	193
  1057   007C8B  C3                 	db	195
  1058   007C8C  C1                 	db	193
  1059   007C8D  63                 	db	99
  1060   007C8E  C3                 	db	195
  1061   007C8F  63                 	db	99
  1062   007C90  C3                 	db	195
  1063   007C91  3C                 	db	60
  1064   007C92  3C                 	db	60
  1065   007C93  3C                 	db	60
  1066   007C94  3C                 	db	60
  1067   007C95  7C                 	db	124
  1068   007C96  18                 	db	24
  1069   007C97  FE                 	db	254
  1070   007C98  70                 	db	112
  1071   007C99  83                 	db	131
  1072   007C9A  C1                 	db	193
  1073   007C9B  83                 	db	131
  1074   007C9C  C1                 	db	193
  1075   007C9D  83                 	db	131
  1076   007C9E  C1                 	db	193
  1077   007C9F  83                 	db	131
  1078   007CA0  C1                 	db	193
  1079   007CA1  83                 	db	131
  1080   007CA2  C1                 	db	193
  1081   007CA3  83                 	db	131
  1082   007CA4  C1                 	db	193
  1083   007CA5  83                 	db	131
  1084   007CA6  C1                 	db	193
  1085   007CA7  83                 	db	131
  1086   007CA8  C1                 	db	193
  1087   007CA9  FE                 	db	254
  1088   007CAA  7F                 	db	127
  1089   007CAB  F8                 	db	248
  1090   007CAC  1F                 	db	31
  1091   007CAD                     __end_of_number:
  1092                           	callstack 0
  1093   007CAD                     _foots:
  1094                           	callstack 0
  1095   007CAD  40                 	db	64
  1096   007CAE  00                 	db	0
  1097   007CAF  18                 	db	24
  1098   007CB0  00                 	db	0
  1099   007CB1  D8                 	db	216
  1100   007CB2  01                 	db	1
  1101   007CB3  E6                 	db	230
  1102   007CB4  03                 	db	3
  1103   007CB5  F6                 	db	246
  1104   007CB6  0F                 	db	15
  1105   007CB7  F0                 	db	240
  1106   007CB8  1F                 	db	31
  1107   007CB9  F7                 	db	247
  1108   007CBA  1F                 	db	31
  1109   007CBB  F7                 	db	247
  1110   007CBC  39                 	db	57
  1111   007CBD  67                 	db	103
  1112   007CBE  00                 	db	0
  1113   007CBF  00                 	db	0
  1114   007CC0  00                 	db	0
  1115   007CC1  00                 	db	0
  1116   007CC2  00                 	db	0
  1117   007CC3  00                 	db	0
  1118   007CC4  40                 	db	64
  1119   007CC5  1C                 	db	28
  1120   007CC6  E0                 	db	224
  1121   007CC7  9C                 	db	156
  1122   007CC8  F1                 	db	241
  1123   007CC9  DC                 	db	220
  1124   007CCA  7B                 	db	123
  1125   007CCB  E0                 	db	224
  1126   007CCC  3F                 	db	63
  1127   007CCD  EC                 	db	236
  1128   007CCE  1F                 	db	31
  1129   007CCF  CC                 	db	204
  1130   007CD0  0F                 	db	15
  1131   007CD1  80                 	db	128
  1132   007CD2  03                 	db	3
  1133   007CD3  18                 	db	24
  1134   007CD4  00                 	db	0
  1135   007CD5  58                 	db	88
  1136   007CD6  00                 	db	0
  1137   007CD7                     __end_of_foots:
  1138                           	callstack 0
  1139   007CD7                     _temp:
  1140                           	callstack 0
  1141   007CD7  3C                 	db	60
  1142   007CD8  00                 	db	0
  1143   007CD9  3C                 	db	60
  1144   007CDA  00                 	db	0
  1145   007CDB  C3                 	db	195
  1146   007CDC  00                 	db	0
  1147   007CDD  C3                 	db	195
  1148   007CDE  00                 	db	0
  1149   007CDF  C3                 	db	195
  1150   007CE0  00                 	db	0
  1151   007CE1  C3                 	db	195
  1152   007CE2  00                 	db	0
  1153   007CE3  3C                 	db	60
  1154   007CE4  00                 	db	0
  1155   007CE5  3C                 	db	60
  1156   007CE6  1F                 	db	31
  1157   007CE7  80                 	db	128
  1158   007CE8  31                 	db	49
  1159   007CE9  C0                 	db	192
  1160   007CEA  60                 	db	96
  1161   007CEB  60                 	db	96
  1162   007CEC  C0                 	db	192
  1163   007CED  60                 	db	96
  1164   007CEE  C0                 	db	192
  1165   007CEF  60                 	db	96
  1166   007CF0  C0                 	db	192
  1167   007CF1  C0                 	db	192
  1168   007CF2  60                 	db	96
  1169   007CF3  80                 	db	128
  1170   007CF4  31                 	db	49
  1171   007CF5  00                 	db	0
  1172   007CF6  00                 	db	0
  1173   007CF7                     __end_of_temp:
  1174                           	callstack 0
  1175   007CF7                     _thermometer:
  1176                           	callstack 0
  1177   007CF7  00                 	db	0
  1178   007CF8  7F                 	db	127
  1179   007CF9  80                 	db	128
  1180   007CFA  80                 	db	128
  1181   007CFB  80                 	db	128
  1182   007CFC  80                 	db	128
  1183   007CFD  80                 	db	128
  1184   007CFE  98                 	db	152
  1185   007CFF  00                 	db	0
  1186   007D00  99                 	db	153
  1187   007D01  80                 	db	128
  1188   007D02  84                 	db	132
  1189   007D03  40                 	db	64
  1190   007D04  82                 	db	130
  1191   007D05  20                 	db	32
  1192   007D06  89                 	db	137
  1193   007D07  90                 	db	144
  1194   007D08  74                 	db	116
  1195   007D09  08                 	db	8
  1196   007D0A  02                 	db	2
  1197   007D0B  04                 	db	4
  1198   007D0C  01                 	db	1
  1199   007D0D  82                 	db	130
  1200   007D0E  00                 	db	0
  1201   007D0F  41                 	db	65
  1202   007D10  00                 	db	0
  1203   007D11  21                 	db	33
  1204   007D12  00                 	db	0
  1205   007D13  11                 	db	17
  1206   007D14  00                 	db	0
  1207   007D15  0F                 	db	15
  1208   007D16  00                 	db	0
  1209   007D17                     __end_of_thermometer:
  1210                           	callstack 0
  1211   007D17                     _clock:
  1212                           	callstack 0
  1213   007D17  00                 	db	0
  1214   007D18  00                 	db	0
  1215   007D19  80                 	db	128
  1216   007D1A  07                 	db	7
  1217   007D1B  60                 	db	96
  1218   007D1C  18                 	db	24
  1219   007D1D  10                 	db	16
  1220   007D1E  20                 	db	32
  1221   007D1F  08                 	db	8
  1222   007D20  40                 	db	64
  1223   007D21  08                 	db	8
  1224   007D22  40                 	db	64
  1225   007D23  04                 	db	4
  1226   007D24  80                 	db	128
  1227   007D25  E7                 	db	231
  1228   007D26  83                 	db	131
  1229   007D27  07                 	db	7
  1230   007D28  82                 	db	130
  1231   007D29  04                 	db	4
  1232   007D2A  82                 	db	130
  1233   007D2B  08                 	db	8
  1234   007D2C  42                 	db	66
  1235   007D2D  08                 	db	8
  1236   007D2E  40                 	db	64
  1237   007D2F  10                 	db	16
  1238   007D30  20                 	db	32
  1239   007D31  60                 	db	96
  1240   007D32  18                 	db	24
  1241   007D33  80                 	db	128
  1242   007D34  07                 	db	7
  1243   007D35  00                 	db	0
  1244   007D36  00                 	db	0
  1245   007D37                     __end_of_clock:
  1246                           	callstack 0
  1247   007D37                     _heart2:
  1248                           	callstack 0
  1249   007D37  00                 	db	0
  1250   007D38  00                 	db	0
  1251   007D39  00                 	db	0
  1252   007D3A  00                 	db	0
  1253   007D3B  E0                 	db	224
  1254   007D3C  00                 	db	0
  1255   007D3D  10                 	db	16
  1256   007D3E  03                 	db	3
  1257   007D3F  08                 	db	8
  1258   007D40  04                 	db	4
  1259   007D41  08                 	db	8
  1260   007D42  08                 	db	8
  1261   007D43  10                 	db	16
  1262   007D44  10                 	db	16
  1263   007D45  20                 	db	32
  1264   007D46  20                 	db	32
  1265   007D47  20                 	db	32
  1266   007D48  20                 	db	32
  1267   007D49  10                 	db	16
  1268   007D4A  10                 	db	16
  1269   007D4B  08                 	db	8
  1270   007D4C  08                 	db	8
  1271   007D4D  08                 	db	8
  1272   007D4E  04                 	db	4
  1273   007D4F  10                 	db	16
  1274   007D50  03                 	db	3
  1275   007D51  E0                 	db	224
  1276   007D52  00                 	db	0
  1277   007D53  00                 	db	0
  1278   007D54  00                 	db	0
  1279   007D55  00                 	db	0
  1280   007D56  00                 	db	0
  1281   007D57                     __end_of_heart2:
  1282                           	callstack 0
  1283   007D57                     _heart1:
  1284                           	callstack 0
  1285   007D57  F0                 	db	240
  1286   007D58  00                 	db	0
  1287   007D59  08                 	db	8
  1288   007D5A  01                 	db	1
  1289   007D5B  04                 	db	4
  1290   007D5C  06                 	db	6
  1291   007D5D  02                 	db	2
  1292   007D5E  18                 	db	24
  1293   007D5F  02                 	db	2
  1294   007D60  20                 	db	32
  1295   007D61  04                 	db	4
  1296   007D62  40                 	db	64
  1297   007D63  08                 	db	8
  1298   007D64  40                 	db	64
  1299   007D65  10                 	db	16
  1300   007D66  80                 	db	128
  1301   007D67  10                 	db	16
  1302   007D68  80                 	db	128
  1303   007D69  08                 	db	8
  1304   007D6A  40                 	db	64
  1305   007D6B  04                 	db	4
  1306   007D6C  40                 	db	64
  1307   007D6D  02                 	db	2
  1308   007D6E  20                 	db	32
  1309   007D6F  02                 	db	2
  1310   007D70  18                 	db	24
  1311   007D71  04                 	db	4
  1312   007D72  06                 	db	6
  1313   007D73  08                 	db	8
  1314   007D74  01                 	db	1
  1315   007D75  F0                 	db	240
  1316   007D76  00                 	db	0
  1317   007D77                     __end_of_heart1:
  1318                           	callstack 0
  1319   007D77                     _m:
  1320                           	callstack 0
  1321   007D77  00                 	db	0
  1322   007D78  FF                 	db	255
  1323   007D79  00                 	db	0
  1324   007D7A  02                 	db	2
  1325   007D7B  00                 	db	0
  1326   007D7C  0C                 	db	12
  1327   007D7D  00                 	db	0
  1328   007D7E  10                 	db	16
  1329   007D7F  00                 	db	0
  1330   007D80  10                 	db	16
  1331   007D81  00                 	db	0
  1332   007D82  0C                 	db	12
  1333   007D83  00                 	db	0
  1334   007D84  02                 	db	2
  1335   007D85  00                 	db	0
  1336   007D86  FF                 	db	255
  1337   007D87                     __end_of_m:
  1338                           	callstack 0
  1339   007D87                     _p:
  1340                           	callstack 0
  1341   007D87  00                 	db	0
  1342   007D88  FF                 	db	255
  1343   007D89  00                 	db	0
  1344   007D8A  09                 	db	9
  1345   007D8B  00                 	db	0
  1346   007D8C  09                 	db	9
  1347   007D8D  00                 	db	0
  1348   007D8E  09                 	db	9
  1349   007D8F  00                 	db	0
  1350   007D90  09                 	db	9
  1351   007D91  00                 	db	0
  1352   007D92  06                 	db	6
  1353   007D93  00                 	db	0
  1354   007D94  00                 	db	0
  1355   007D95  00                 	db	0
  1356   007D96  00                 	db	0
  1357   007D97                     __end_of_p:
  1358                           	callstack 0
  1359   007D97                     _b:
  1360                           	callstack 0
  1361   007D97  00                 	db	0
  1362   007D98  00                 	db	0
  1363   007D99  00                 	db	0
  1364   007D9A  FF                 	db	255
  1365   007D9B  00                 	db	0
  1366   007D9C  89                 	db	137
  1367   007D9D  00                 	db	0
  1368   007D9E  89                 	db	137
  1369   007D9F  00                 	db	0
  1370   007DA0  89                 	db	137
  1371   007DA1  00                 	db	0
  1372   007DA2  76                 	db	118
  1373   007DA3  00                 	db	0
  1374   007DA4  00                 	db	0
  1375   007DA5  00                 	db	0
  1376   007DA6  00                 	db	0
  1377   007DA7                     __end_of_b:
  1378                           	callstack 0
  1379   007DA7                     _dots:
  1380                           	callstack 0
  1381   007DA7  00                 	db	0
  1382   007DA8  00                 	db	0
  1383   007DA9  00                 	db	0
  1384   007DAA  00                 	db	0
  1385   007DAB  3C                 	db	60
  1386   007DAC  3C                 	db	60
  1387   007DAD  3C                 	db	60
  1388   007DAE  3C                 	db	60
  1389   007DAF  3C                 	db	60
  1390   007DB0  3C                 	db	60
  1391   007DB1  3C                 	db	60
  1392   007DB2  3C                 	db	60
  1393   007DB3  00                 	db	0
  1394   007DB4  00                 	db	0
  1395   007DB5  00                 	db	0
  1396   007DB6  00                 	db	0
  1397   007DB7                     __end_of_dots:
  1398                           	callstack 0
  1399   007DB7                     _dot:
  1400                           	callstack 0
  1401   007DB7  00                 	db	0
  1402   007DB8  C0                 	db	192
  1403   007DB9  00                 	db	0
  1404   007DBA  C0                 	db	192
  1405   007DBB                     __end_of_dot:
  1406                           	callstack 0
  1407   007E2A                     _PEN            set	32298
  1408   007E28                     _SEN            set	32296
  1409   007E9C                     _IRCF0          set	32412
  1410   007E9D                     _IRCF1          set	32413
  1411   007E9E                     _IRCF2          set	32414
  1412   007D5C                     _CREN           set	32092
  1413   007CF5                     _RCIF           set	31989
  1414   007F97                     _GIE            set	32663
  1415   000F93                     _TRISB          set	3987
  1416   000F8B                     _LATC           set	3979
  1417   000F94                     _TRISC          set	3988
  1418   000F9B                     _OSCTUNE        set	3995
  1419   000F93                     _TRISBbits      set	3987
  1420   000F94                     _TRISCbits      set	3988
  1421   000FC9                     _SSPBUF         set	4041
  1422   000FC7                     _SSPSTAT        set	4039
  1423   000FC8                     _SSPADD         set	4040
  1424   000FC5                     _SSPCON2        set	4037
  1425   000FC6                     _SSPCON1        set	4038
  1426   000FC1                     _ADCON1         set	4033
  1427   000FCB                     _PR2            set	4043
  1428   000FCA                     _T2CON          set	4042
  1429   000FD0                     _RCONbits       set	4048
  1430   000F9F                     _IPR1bits       set	3999
  1431   000F9D                     _PIE1bits       set	3997
  1432   000FAF                     _SPBRG          set	4015
  1433   000FB8                     _BAUDCONbits    set	4024
  1434   000FAB                     _RCSTAbits      set	4011
  1435   000FAE                     _RCREG          set	4014
  1436   000FAD                     _TXREG          set	4013
  1437   000FAC                     _TXSTAbits      set	4012
  1438   000F9E                     _PIR1bits       set	3998
  1439   000FF2                     _INTCONbits     set	4082
  1440   007DBB                     STR_7:
  1441                           
  1442                           ; BSR set to: 0
  1443   007DBB  30                 	db	48	;'0'
  1444   007DBC  00                 	db	0
  1445   007DBD                     STR_4:
  1446                           
  1447                           ; BSR set to: 0
  1448   007DBD  20                 	db	32
  1449   007DBE  00                 	db	0
  1450   007DBB                     STR_8           equ	STR_7
  1451   007DBD                     STR_5           equ	STR_4
  1452   007DBD                     STR_6           equ	STR_4
  1453   007DBE                     STR_1           equ	STR_4+1
  1454   007DBE                     STR_2           equ	STR_4+1
  1455   007DBE                     STR_3           equ	STR_4+1
  1456   007DBF  00                 	db	0	; dummy byte at the end
  1457   000002                     __activetblptr  equ	2
  1458                           
  1459                           ; #config settings
  1460                           
  1461                           	psect	cinit
  1462   001042                     __pcinit:
  1463                           	callstack 0
  1464   001042                     start_initialization:
  1465                           	callstack 0
  1466   001042                     __initialization:
  1467                           	callstack 0
  1468                           
  1469                           ; Initialize objects allocated to BANK0 (4 bytes)
  1470                           ; load TBLPTR registers with __pidataBANK0
  1471   001042  0EB2               	movlw	low __pidataBANK0
  1472   001044  6EF6               	movwf	tblptrl,c
  1473   001046  0E13               	movlw	high __pidataBANK0
  1474   001048  6EF7               	movwf	tblptrh,c
  1475   00104A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1476   00104C  6EF8               	movwf	tblptru,c
  1477   00104E  EE00  F0F9         	lfsr	0,__pdataBANK0
  1478   001052  EE10 F004          	lfsr	1,4
  1479   001056                     copy_data0:
  1480   001056  0009               	tblrd		*+
  1481   001058  CFF5 FFEE          	movff	tablat,postinc0
  1482   00105C  50E5               	movf	postdec1,w,c
  1483   00105E  50E1               	movf	fsr1l,w,c
  1484   001060  E1FA               	bnz	copy_data0
  1485                           
  1486                           ; Clear objects allocated to BANK4 (200 bytes)
  1487   001062  EE04  F000         	lfsr	0,__pbssBANK4
  1488   001066  0EC8               	movlw	200
  1489   001068                     clear_0:
  1490   001068  6AEE               	clrf	postinc0,c
  1491   00106A  06E8               	decf	wreg,f,c
  1492   00106C  E1FD               	bnz	clear_0
  1493                           
  1494                           ; Clear objects allocated to BANK3 (200 bytes)
  1495   00106E  EE03  F000         	lfsr	0,__pbssBANK3
  1496   001072  0EC8               	movlw	200
  1497   001074                     clear_1:
  1498   001074  6AEE               	clrf	postinc0,c
  1499   001076  06E8               	decf	wreg,f,c
  1500   001078  E1FD               	bnz	clear_1
  1501                           
  1502                           ; Clear objects allocated to BANK0 (2 bytes)
  1503   00107A  0100               	movlb	0
  1504   00107C  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
  1505   00107E  6BFD               	clrf	__pbssBANK0& (0+255),b
  1506                           
  1507                           ; Clear objects allocated to COMRAM (3 bytes)
  1508   001080  6A2F               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1509   001082  6A2E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1510   001084  6A2D               	clrf	__pbssCOMRAM& (0+255),c
  1511   001086                     end_of_initialization:
  1512                           	callstack 0
  1513   001086                     __end_of__initialization:
  1514                           	callstack 0
  1515   001086  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1516   001088  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1517   00108A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1518   00108C  6EF8               	movwf	tblptru,c
  1519   00108E  0100               	movlb	0
  1520   001090  EF38  F000         	goto	_main	;jump to C main() function
  1521                           
  1522                           	psect	bssCOMRAM
  1523   00002D                     __pbssCOMRAM:
  1524                           	callstack 0
  1525   00002D                     _buffer_size:
  1526                           	callstack 0
  1527   00002D                     	ds	2
  1528   00002F                     strtok@p:
  1529                           	callstack 0
  1530   00002F                     	ds	1
  1531                           
  1532                           	psect	bssBANK0
  1533   0000FD                     __pbssBANK0:
  1534                           	callstack 0
  1535   0000FD                     _cnt:
  1536                           	callstack 0
  1537   0000FD                     	ds	2
  1538                           
  1539                           	psect	dataBANK0
  1540   0000F9                     __pdataBANK0:
  1541                           	callstack 0
  1542   0000F9                     _which_heart:
  1543                           	callstack 0
  1544   0000F9                     	ds	2
  1545   0000FB                     _pre_state:
  1546                           	callstack 0
  1547   0000FB                     	ds	1
  1548   0000FC                     _state:
  1549                           	callstack 0
  1550   0000FC                     	ds	1
  1551                           
  1552                           	psect	bssBANK3
  1553   000300                     __pbssBANK3:
  1554                           	callstack 0
  1555   000300                     	ds	100
  1556   000364                     _buffer:
  1557                           	callstack 0
  1558   000364                     	ds	100
  1559                           
  1560                           	psect	bssBANK4
  1561   000400                     __pbssBANK4:
  1562                           	callstack 0
  1563   000400                     	ds	100
  1564   000464                     	ds	100
  1565                           
  1566                           	psect	cstackBANK2
  1567   000200                     __pcstackBANK2:
  1568                           	callstack 0
  1569   000200                     main@mm:
  1570                           	callstack 0
  1571                           
  1572                           ; 100 bytes @ 0x0
  1573   000200                     	ds	100
  1574   000264                     main@tmp:
  1575                           	callstack 0
  1576                           
  1577                           ; 100 bytes @ 0x64
  1578   000264                     	ds	100
  1579                           
  1580                           	psect	cstackBANK1
  1581   000100                     __pcstackBANK1:
  1582                           	callstack 0
  1583   000100                     main@str:
  1584                           	callstack 0
  1585                           
  1586                           ; 100 bytes @ 0x0
  1587   000100                     	ds	100
  1588   000164                     main@hh:
  1589                           	callstack 0
  1590                           
  1591                           ; 100 bytes @ 0x64
  1592   000164                     	ds	100
  1593                           
  1594                           	psect	cstackBANK0
  1595   000080                     __pcstackBANK0:
  1596                           	callstack 0
  1597   000080                     ParsingData@input:
  1598                           	callstack 0
  1599   000080                     Get_Timer_H@str2:
  1600                           	callstack 0
  1601   000080                     Get_Timer_M@str2:
  1602                           	callstack 0
  1603                           
  1604                           ; 100 bytes @ 0x0
  1605   000080                     	ds	100
  1606   0000E4                     ParsingData@num1:
  1607                           	callstack 0
  1608   0000E4                     Get_Timer_H@result:
  1609                           	callstack 0
  1610   0000E4                     Get_Timer_M@result:
  1611                           	callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x64
  1614   0000E4                     	ds	2
  1615   0000E6                     ParsingData@num2:
  1616                           	callstack 0
  1617   0000E6                     Get_Timer_H@h:
  1618                           	callstack 0
  1619   0000E6                     Get_Timer_M@m:
  1620                           	callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x66
  1623   0000E6                     	ds	2
  1624   0000E8                     ParsingData@num3:
  1625                           	callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x68
  1628   0000E8                     	ds	2
  1629   0000EA                     ParsingData@val:
  1630                           	callstack 0
  1631                           
  1632                           ; 6 bytes @ 0x6A
  1633   0000EA                     	ds	6
  1634   0000F0                     ParsingData@token:
  1635                           	callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x70
  1638   0000F0                     	ds	1
  1639   0000F1                     _main$1698:
  1640                           	callstack 0
  1641                           
  1642                           ; 2 bytes @ 0x71
  1643   0000F1                     	ds	2
  1644   0000F3                     main@val:
  1645                           	callstack 0
  1646                           
  1647                           ; 6 bytes @ 0x73
  1648   0000F3                     	ds	6
  1649                           
  1650                           	psect	cstackCOMRAM
  1651   000001                     __pcstackCOMRAM:
  1652                           	callstack 0
  1653   000001                     ??_H_ISR:
  1654                           
  1655                           ; 1 bytes @ 0x0
  1656   000001                     	ds	2
  1657   000003                     ?_isprint:
  1658                           	callstack 0
  1659   000003                     i1putch@data:
  1660                           	callstack 0
  1661   000003                     isprint@c:
  1662                           	callstack 0
  1663   000003                     
  1664                           ; 1 bytes @ 0x2
  1665   000003                     	ds	2
  1666   000005                     ??_isprint:
  1667                           
  1668                           ; 1 bytes @ 0x4
  1669   000005                     	ds	2
  1670   000007                     MyusartRead@data:
  1671                           	callstack 0
  1672   000007                     
  1673                           ; 1 bytes @ 0x6
  1674   000007                     	ds	1
  1675   000008                     ??_Lo_ISR:
  1676                           
  1677                           ; 1 bytes @ 0x7
  1678   000008                     	ds	5
  1679   00000D                     ?_strlen:
  1680                           	callstack 0
  1681   00000D                     ?_atoi:
  1682                           	callstack 0
  1683   00000D                     ?_strchr:
  1684                           	callstack 0
  1685   00000D                     ?___awdiv:
  1686                           	callstack 0
  1687   00000D                     ?___awmod:
  1688                           	callstack 0
  1689   00000D                     putch@data:
  1690                           	callstack 0
  1691   00000D                     atoi@s:
  1692                           	callstack 0
  1693   00000D                     strlen@s:
  1694                           	callstack 0
  1695   00000D                     ClearBuffer@i:
  1696                           	callstack 0
  1697   00000D                     reverse@first:
  1698                           	callstack 0
  1699   00000D                     ___awdiv@dividend:
  1700                           	callstack 0
  1701   00000D                     ___awmod@dividend:
  1702                           	callstack 0
  1703   00000D                     strcat@dest:
  1704                           	callstack 0
  1705   00000D                     strcpy@dest:
  1706                           	callstack 0
  1707   00000D                     strchr@s:
  1708                           	callstack 0
  1709   00000D                     ??_I2C_Wait:
  1710                           
  1711                           ; 1 bytes @ 0xC
  1712   00000D                     	ds	1
  1713   00000E                     I2C_Write@data:
  1714                           	callstack 0
  1715   00000E                     
  1716                           ; 1 bytes @ 0xD
  1717   00000E                     	ds	1
  1718   00000F                     OLED_SetPageAndColumnAddress@endPage:
  1719                           	callstack 0
  1720   00000F                     strcat@src:
  1721                           	callstack 0
  1722   00000F                     strlen@a:
  1723                           	callstack 0
  1724   00000F                     reverse@last:
  1725                           	callstack 0
  1726   00000F                     ___awdiv@divisor:
  1727                           	callstack 0
  1728   00000F                     ___awmod@divisor:
  1729                           	callstack 0
  1730   00000F                     strcpy@src:
  1731                           	callstack 0
  1732   00000F                     strchr@c:
  1733                           	callstack 0
  1734   00000F                     ??_atoi:
  1735   00000F                     
  1736                           ; 1 bytes @ 0xE
  1737   00000F                     	ds	1
  1738   000010                     test@s:
  1739                           	callstack 0
  1740   000010                     OLED_SetPageAndColumnAddress@startColumn:
  1741                           	callstack 0
  1742   000010                     strcat@i:
  1743                           	callstack 0
  1744   000010                     
  1745                           ; 1 bytes @ 0xF
  1746   000010                     	ds	1
  1747   000011                     ?_strspn:
  1748                           	callstack 0
  1749   000011                     ?_strcspn:
  1750                           	callstack 0
  1751   000011                     reverse@tmp:
  1752                           	callstack 0
  1753   000011                     OLED_SetPageAndColumnAddress@endColumn:
  1754                           	callstack 0
  1755   000011                     ___awdiv@counter:
  1756                           	callstack 0
  1757   000011                     ___awmod@counter:
  1758                           	callstack 0
  1759   000011                     strcspn@s:
  1760                           	callstack 0
  1761   000011                     strspn@s:
  1762                           	callstack 0
  1763   000011                     test@i:
  1764                           	callstack 0
  1765   000011                     ??_strcpy:
  1766   000011                     
  1767                           ; 1 bytes @ 0x10
  1768   000011                     	ds	1
  1769   000012                     OLED_SetPageAndColumnAddress@startPage:
  1770                           	callstack 0
  1771   000012                     ___awdiv@sign:
  1772                           	callstack 0
  1773   000012                     ___awmod@sign:
  1774                           	callstack 0
  1775   000012                     atoi@neg:
  1776                           	callstack 0
  1777   000012                     strcspn@c:
  1778                           	callstack 0
  1779   000012                     strspn@c:
  1780                           	callstack 0
  1781   000012                     
  1782                           ; 1 bytes @ 0x11
  1783   000012                     	ds	1
  1784   000013                     OLED_Print@endPage:
  1785                           	callstack 0
  1786   000013                     OLED_Clear@cnt:
  1787                           	callstack 0
  1788   000013                     ___awdiv@quotient:
  1789                           	callstack 0
  1790   000013                     atoi@n:
  1791                           	callstack 0
  1792   000013                     strcpy@d:
  1793                           	callstack 0
  1794   000013                     
  1795                           ; 1 bytes @ 0x12
  1796   000013                     	ds	1
  1797   000014                     OLED_Print@startColumn:
  1798                           	callstack 0
  1799   000014                     ??_strspn:
  1800   000014                     ??_strcspn:
  1801                           
  1802                           ; 1 bytes @ 0x13
  1803   000014                     	ds	1
  1804   000015                     ?_GetString:
  1805                           	callstack 0
  1806   000015                     OLED_Print@endColumn:
  1807                           	callstack 0
  1808   000015                     GetString@str:
  1809                           	callstack 0
  1810   000015                     itoa@n:
  1811                           	callstack 0
  1812   000015                     strcspn@i:
  1813                           	callstack 0
  1814   000015                     strspn@i:
  1815                           	callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x14
  1818   000015                     	ds	1
  1819   000016                     OLED_Print@bitmap:
  1820                           	callstack 0
  1821                           
  1822                           ; 2 bytes @ 0x15
  1823   000016                     	ds	1
  1824   000017                     strtok@s:
  1825                           	callstack 0
  1826   000017                     itoa@s:
  1827                           	callstack 0
  1828   000017                     
  1829                           ; 1 bytes @ 0x16
  1830   000017                     	ds	1
  1831   000018                     OLED_Print@bitmapSize:
  1832                           	callstack 0
  1833   000018                     strtok@sep:
  1834                           	callstack 0
  1835                           
  1836                           ; 2 bytes @ 0x17
  1837   000018                     	ds	1
  1838   000019                     ??_itoa:
  1839                           
  1840                           ; 1 bytes @ 0x18
  1841   000019                     	ds	1
  1842   00001A                     ?_ParsingData:
  1843                           	callstack 0
  1844   00001A                     OLED_Print@startPage:
  1845                           	callstack 0
  1846   00001A                     ParsingData@s:
  1847                           	callstack 0
  1848   00001A                     
  1849                           ; 1 bytes @ 0x19
  1850   00001A                     	ds	1
  1851   00001B                     itoa@sign:
  1852                           	callstack 0
  1853   00001B                     OLED_Print@cnt:
  1854                           	callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x1A
  1857   00001B                     	ds	2
  1858   00001D                     OLED_PrintChar@endPage:
  1859                           	callstack 0
  1860   00001D                     itoa@i:
  1861                           	callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x1C
  1864   00001D                     	ds	1
  1865   00001E                     OLED_PrintChar@startColumn:
  1866                           	callstack 0
  1867                           
  1868                           ; 1 bytes @ 0x1D
  1869   00001E                     	ds	1
  1870   00001F                     OLED_PrintChar@endColumn:
  1871                           	callstack 0
  1872   00001F                     Get_Timer_H@str:
  1873                           	callstack 0
  1874   00001F                     Get_Timer_M@str:
  1875                           	callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x1E
  1878   00001F                     	ds	1
  1879   000020                     OLED_PrintChar@c:
  1880                           	callstack 0
  1881   000020                     
  1882                           ; 1 bytes @ 0x1F
  1883   000020                     	ds	1
  1884   000021                     OLED_PrintChar@which_to_print:
  1885                           	callstack 0
  1886   000021                     
  1887                           ; 1 bytes @ 0x20
  1888   000021                     	ds	1
  1889   000022                     OLED_PrintChar@startPage:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x21
  1893   000022                     	ds	1
  1894   000023                     OLED_PrintNumber@endPage:
  1895                           	callstack 0
  1896                           
  1897                           ; 1 bytes @ 0x22
  1898   000023                     	ds	1
  1899   000024                     OLED_PrintNumber@startColumn:
  1900                           	callstack 0
  1901                           
  1902                           ; 1 bytes @ 0x23
  1903   000024                     	ds	1
  1904   000025                     OLED_PrintNumber@endColumn:
  1905                           	callstack 0
  1906                           
  1907                           ; 1 bytes @ 0x24
  1908   000025                     	ds	1
  1909   000026                     OLED_PrintNumber@str:
  1910                           	callstack 0
  1911                           
  1912                           ; 2 bytes @ 0x25
  1913   000026                     	ds	2
  1914   000028                     
  1915                           ; 1 bytes @ 0x27
  1916   000028                     	ds	1
  1917   000029                     OLED_PrintNumber@startPage:
  1918                           	callstack 0
  1919                           
  1920                           ; 1 bytes @ 0x28
  1921   000029                     	ds	1
  1922   00002A                     OLED_PrintNumber@column:
  1923                           	callstack 0
  1924                           
  1925                           ; 1 bytes @ 0x29
  1926   00002A                     	ds	1
  1927   00002B                     ??_main:
  1928                           
  1929                           ; 1 bytes @ 0x2A
  1930   00002B                     	ds	2
  1931                           
  1932 ;;
  1933 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1934 ;;
  1935 ;; *************** function _main *****************
  1936 ;; Defined at:
  1937 ;;		line 89 in file "main.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  tmp           100  100[BANK2 ] unsigned char [100]
  1942 ;;  mm            100    0[BANK2 ] unsigned char [100]
  1943 ;;  hh            100  100[BANK1 ] unsigned char [100]
  1944 ;;  str           100    0[BANK1 ] unsigned char [100]
  1945 ;;  val             6  115[BANK0 ] struct Data
  1946 ;;  last_heart      2    0        int 
  1947 ;;  last_step       2    0        int 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1957 ;;      Params:         0       0       0       0       0       0       0
  1958 ;;      Locals:         0       8     200     200       0       0       0
  1959 ;;      Temps:          2       0       0       0       0       0       0
  1960 ;;      Totals:         2       8     200     200       0       0       0
  1961 ;;Total ram usage:      410 bytes
  1962 ;; Hardware stack levels required when called: 11
  1963 ;; This function calls:
  1964 ;;		_ClearBuffer
  1965 ;;		_GetString
  1966 ;;		_Get_Timer_H
  1967 ;;		_Get_Timer_M
  1968 ;;		_OLED_Clear
  1969 ;;		_OLED_Print
  1970 ;;		_OLED_PrintChar
  1971 ;;		_OLED_PrintNumber
  1972 ;;		_ParsingData
  1973 ;;		_SYSTEM_Initialize
  1974 ;;		___awdiv
  1975 ;;		_init_time
  1976 ;;		_itoa
  1977 ;;		_strcpy
  1978 ;; This function is called by:
  1979 ;;		Startup code after reset
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text0
  1984   000070                     __ptext0:
  1985                           	callstack 0
  1986   000070                     _main:
  1987                           	callstack 20
  1988   000070                     
  1989                           ;main.c: 90:     ClearBuffer();
  1990   000070  EC10  F009         	call	_ClearBuffer	;wreg free
  1991   000074                     
  1992                           ;main.c: 91:     SYSTEM_Initialize();
  1993   000074  EC9D  F009         	call	_SYSTEM_Initialize	;wreg free
  1994   000078                     l2470:
  1995                           
  1996                           ;main.c: 94:         char str[100];;main.c: 95:         struct Data val;;main.c: 96:    
      +                               if( GetString(str) ) {
  1997   000078  0E00               	movlw	low main@str
  1998   00007A  6E15               	movwf	GetString@str^0,c
  1999   00007C  0E01               	movlw	high main@str
  2000   00007E  6E16               	movwf	(GetString@str+1)^0,c
  2001   000080  EC9F  F006         	call	_GetString	;wreg free
  2002   000084  5015               	movf	?_GetString^0,w,c
  2003   000086  1016               	iorwf	(?_GetString+1)^0,w,c
  2004   000088  B4D8               	btfsc	status,2,c
  2005   00008A  EF49  F000         	goto	u1601
  2006   00008E  EF4B  F000         	goto	u1600
  2007   000092                     u1601:
  2008   000092  EF58  F000         	goto	l2474
  2009   000096                     u1600:
  2010   000096                     
  2011                           ;main.c: 97:             val = ParsingData(str);
  2012   000096  0E00               	movlw	low main@str
  2013   000098  6E1A               	movwf	ParsingData@s^0,c
  2014   00009A  0E01               	movlw	high main@str
  2015   00009C  6E1B               	movwf	(ParsingData@s+1)^0,c
  2016   00009E  ECFE  F003         	call	_ParsingData	;wreg free
  2017   0000A2  EE20  F0F3         	lfsr	2,main@val
  2018   0000A6  0E05               	movlw	5
  2019   0000A8                     u1611:
  2020   0000A8  CFEB FFDB          	movff	plusw0,plusw2
  2021   0000AC  06E8               	decf	wreg,f,c
  2022   0000AE  E2FC               	bc	u1611
  2023   0000B0                     l2474:
  2024                           
  2025                           ;main.c: 102:         if(pre_state != state) OLED_Clear(), init_time();
  2026   0000B0  0100               	movlb	0	; () banked
  2027   0000B2  51FC               	movf	_state& (0+255),w,b
  2028   0000B4  19FB               	xorwf	_pre_state& (0+255),w,b
  2029   0000B6  B4D8               	btfsc	status,2,c
  2030   0000B8  EF60  F000         	goto	u1621
  2031   0000BC  EF62  F000         	goto	u1620
  2032   0000C0                     u1621:
  2033   0000C0  EF66  F000         	goto	l2480
  2034   0000C4                     u1620:
  2035   0000C4                     
  2036                           ; BSR set to: 0
  2037   0000C4  ECC5  F008         	call	_OLED_Clear	;wreg free
  2038   0000C8  ECBB  F009         	call	_init_time	;wreg free
  2039   0000CC                     l2480:
  2040                           
  2041                           ;main.c: 103:         pre_state = state;
  2042   0000CC  C0FC  F0FB         	movff	_state,_pre_state
  2043   0000D0                     
  2044                           ;main.c: 104:         char tmp[100] = {};
  2045   0000D0  EE22  F064         	lfsr	2,main@tmp
  2046   0000D4  0E63               	movlw	99
  2047   0000D6                     u1631:
  2048   0000D6  6ADE               	clrf	postinc2,c
  2049   0000D8  06E8               	decf	wreg,f,c
  2050   0000DA  E2FD               	bc	u1631
  2051   0000DC                     
  2052                           ;main.c: 105:         char hh[100] = {};
  2053   0000DC  EE21  F064         	lfsr	2,main@hh
  2054   0000E0  0E63               	movlw	99
  2055   0000E2                     u1641:
  2056   0000E2  6ADE               	clrf	postinc2,c
  2057   0000E4  06E8               	decf	wreg,f,c
  2058   0000E6  E2FD               	bc	u1641
  2059   0000E8                     
  2060                           ;main.c: 106:         char mm[100] = {};
  2061   0000E8  EE22  F000         	lfsr	2,main@mm
  2062   0000EC  0E63               	movlw	99
  2063   0000EE                     u1651:
  2064   0000EE  6ADE               	clrf	postinc2,c
  2065   0000F0  06E8               	decf	wreg,f,c
  2066   0000F2  E2FD               	bc	u1651
  2067   0000F4                     
  2068                           ;main.c: 107:         strcpy(tmp, "");
  2069   0000F4  0E64               	movlw	low main@tmp
  2070   0000F6  6E0D               	movwf	strcpy@dest^0,c
  2071   0000F8  0E02               	movlw	high main@tmp
  2072   0000FA  6E0E               	movwf	(strcpy@dest+1)^0,c
  2073   0000FC  0EBE               	movlw	low (STR_4+1)
  2074   0000FE  6E0F               	movwf	strcpy@src^0,c
  2075   000100  0E7D               	movlw	high (STR_4+1)
  2076   000102  6E10               	movwf	(strcpy@src+1)^0,c
  2077   000104  ECF7  F007         	call	_strcpy	;wreg free
  2078   000108                     
  2079                           ;main.c: 108:         strcpy(hh, "");
  2080   000108  0E64               	movlw	low main@hh
  2081   00010A  6E0D               	movwf	strcpy@dest^0,c
  2082   00010C  0E01               	movlw	high main@hh
  2083   00010E  6E0E               	movwf	(strcpy@dest+1)^0,c
  2084   000110  0EBE               	movlw	low (STR_4+1)
  2085   000112  6E0F               	movwf	strcpy@src^0,c
  2086   000114  0E7D               	movlw	high (STR_4+1)
  2087   000116  6E10               	movwf	(strcpy@src+1)^0,c
  2088   000118  ECF7  F007         	call	_strcpy	;wreg free
  2089   00011C                     
  2090                           ;main.c: 109:         strcpy(mm, "");
  2091   00011C  0E00               	movlw	low main@mm
  2092   00011E  6E0D               	movwf	strcpy@dest^0,c
  2093   000120  0E02               	movlw	high main@mm
  2094   000122  6E0E               	movwf	(strcpy@dest+1)^0,c
  2095   000124  0EBE               	movlw	low (STR_4+1)
  2096   000126  6E0F               	movwf	strcpy@src^0,c
  2097   000128  0E7D               	movlw	high (STR_4+1)
  2098   00012A  6E10               	movwf	(strcpy@src+1)^0,c
  2099   00012C  ECF7  F007         	call	_strcpy	;wreg free
  2100                           
  2101                           ;main.c: 111:         switch(state){
  2102   000130  EFEF  F001         	goto	l2546
  2103   000134                     l2494:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 113:                 OLED_Print(0x01, 0x02, 0x00, 0x7F, clock, sizeof(clock));
  2107   000134  0E02               	movlw	2
  2108   000136  6E13               	movwf	OLED_Print@endPage^0,c
  2109   000138  0E00               	movlw	0
  2110   00013A  6E14               	movwf	OLED_Print@startColumn^0,c
  2111   00013C  0E7F               	movlw	127
  2112   00013E  6E15               	movwf	OLED_Print@endColumn^0,c
  2113   000140  0E17               	movlw	low _clock
  2114   000142  6E16               	movwf	OLED_Print@bitmap^0,c
  2115   000144  0E7D               	movlw	high _clock
  2116   000146  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2117   000148  0E00               	movlw	0
  2118   00014A  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2119   00014C  0E20               	movlw	32
  2120   00014E  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2121   000150  0E01               	movlw	1
  2122   000152  ECD4  F006         	call	_OLED_Print
  2123   000156                     
  2124                           ;main.c: 114:                 Get_Timer_H(hh);
  2125   000156  0E64               	movlw	low main@hh
  2126   000158  6E1F               	movwf	Get_Timer_H@str^0,c
  2127   00015A  0E01               	movlw	high main@hh
  2128   00015C  6E20               	movwf	(Get_Timer_H@str+1)^0,c
  2129   00015E  EC18  F006         	call	_Get_Timer_H	;wreg free
  2130   000162                     
  2131                           ;main.c: 115:                 Get_Timer_M(mm);
  2132   000162  0E00               	movlw	low main@mm
  2133   000164  6E1F               	movwf	Get_Timer_M@str^0,c
  2134   000166  0E02               	movlw	high main@mm
  2135   000168  6E20               	movwf	(Get_Timer_M@str+1)^0,c
  2136   00016A  ECD1  F005         	call	_Get_Timer_M	;wreg free
  2137   00016E                     
  2138                           ;main.c: 116:                 OLED_PrintNumber(0x01, 0x02, 0x1D, 0x7F, hh);
  2139   00016E  0E02               	movlw	2
  2140   000170  6E23               	movwf	OLED_PrintNumber@endPage^0,c
  2141   000172  0E1D               	movlw	29
  2142   000174  6E24               	movwf	OLED_PrintNumber@startColumn^0,c
  2143   000176  0E7F               	movlw	127
  2144   000178  6E25               	movwf	OLED_PrintNumber@endColumn^0,c
  2145   00017A  0E64               	movlw	low main@hh
  2146   00017C  6E26               	movwf	OLED_PrintNumber@str^0,c
  2147   00017E  0E01               	movlw	high main@hh
  2148   000180  6E27               	movwf	(OLED_PrintNumber@str+1)^0,c
  2149   000182  0E01               	movlw	1
  2150   000184  EC5F  F006         	call	_OLED_PrintNumber
  2151   000188                     
  2152                           ;main.c: 117:                 OLED_Print(0x01, 0x02, 0x44, 0x7F, dots, sizeof(dots));
  2153   000188  0E02               	movlw	2
  2154   00018A  6E13               	movwf	OLED_Print@endPage^0,c
  2155   00018C  0E44               	movlw	68
  2156   00018E  6E14               	movwf	OLED_Print@startColumn^0,c
  2157   000190  0E7F               	movlw	127
  2158   000192  6E15               	movwf	OLED_Print@endColumn^0,c
  2159   000194  0EA7               	movlw	low _dots
  2160   000196  6E16               	movwf	OLED_Print@bitmap^0,c
  2161   000198  0E7D               	movlw	high _dots
  2162   00019A  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2163   00019C  0E00               	movlw	0
  2164   00019E  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2165   0001A0  0E10               	movlw	16
  2166   0001A2  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2167   0001A4  0E01               	movlw	1
  2168   0001A6  ECD4  F006         	call	_OLED_Print
  2169                           
  2170                           ;main.c: 118:                 OLED_PrintNumber(0x01, 0x02, 0x59, 0x7F, mm);
  2171   0001AA  0E02               	movlw	2
  2172   0001AC  6E23               	movwf	OLED_PrintNumber@endPage^0,c
  2173   0001AE  0E59               	movlw	89
  2174   0001B0  6E24               	movwf	OLED_PrintNumber@startColumn^0,c
  2175   0001B2  0E7F               	movlw	127
  2176   0001B4  6E25               	movwf	OLED_PrintNumber@endColumn^0,c
  2177   0001B6  0E00               	movlw	low main@mm
  2178   0001B8  6E26               	movwf	OLED_PrintNumber@str^0,c
  2179   0001BA  0E02               	movlw	high main@mm
  2180   0001BC  6E27               	movwf	(OLED_PrintNumber@str+1)^0,c
  2181   0001BE  0E01               	movlw	1
  2182   0001C0  EC5F  F006         	call	_OLED_PrintNumber
  2183                           
  2184                           ;main.c: 119:                 break;
  2185   0001C4  EF07  F002         	goto	l2548
  2186   0001C8                     l2504:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 121:                 OLED_Print(0x01, 0x02, 0x00, 0x7F, thermometer, sizeof(the
      +                          rmometer));
  2190   0001C8  0E02               	movlw	2
  2191   0001CA  6E13               	movwf	OLED_Print@endPage^0,c
  2192   0001CC  0E00               	movlw	0
  2193   0001CE  6E14               	movwf	OLED_Print@startColumn^0,c
  2194   0001D0  0E7F               	movlw	127
  2195   0001D2  6E15               	movwf	OLED_Print@endColumn^0,c
  2196   0001D4  0EF7               	movlw	low _thermometer
  2197   0001D6  6E16               	movwf	OLED_Print@bitmap^0,c
  2198   0001D8  0E7C               	movlw	high _thermometer
  2199   0001DA  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2200   0001DC  0E00               	movlw	0
  2201   0001DE  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2202   0001E0  0E20               	movlw	32
  2203   0001E2  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2204   0001E4  0E01               	movlw	1
  2205   0001E6  ECD4  F006         	call	_OLED_Print
  2206                           
  2207                           ;main.c: 122:                 OLED_Print(0x01, 0x02, 0x70, 0x7F, temp, sizeof(temp));
  2208   0001EA  0E02               	movlw	2
  2209   0001EC  6E13               	movwf	OLED_Print@endPage^0,c
  2210   0001EE  0E70               	movlw	112
  2211   0001F0  6E14               	movwf	OLED_Print@startColumn^0,c
  2212   0001F2  0E7F               	movlw	127
  2213   0001F4  6E15               	movwf	OLED_Print@endColumn^0,c
  2214   0001F6  0ED7               	movlw	low _temp
  2215   0001F8  6E16               	movwf	OLED_Print@bitmap^0,c
  2216   0001FA  0E7C               	movlw	high _temp
  2217   0001FC  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2218   0001FE  0E00               	movlw	0
  2219   000200  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2220   000202  0E20               	movlw	32
  2221   000204  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2222   000206  0E01               	movlw	1
  2223   000208  ECD4  F006         	call	_OLED_Print
  2224   00020C                     
  2225                           ;main.c: 123:                 itoa(val.temp, tmp);
  2226   00020C  C0F7  F015         	movff	main@val+4,itoa@n
  2227   000210  C0F8  F016         	movff	main@val+5,itoa@n+1
  2228   000214  0E64               	movlw	low main@tmp
  2229   000216  6E17               	movwf	itoa@s^0,c
  2230   000218  0E02               	movlw	high main@tmp
  2231   00021A  6E18               	movwf	(itoa@s+1)^0,c
  2232   00021C  EC26  F003         	call	_itoa	;wreg free
  2233   000220                     
  2234                           ;main.c: 124:                 OLED_PrintNumber(0x01, 0x02, 0x1C, 0x7F, tmp);
  2235   000220  0E02               	movlw	2
  2236   000222  6E23               	movwf	OLED_PrintNumber@endPage^0,c
  2237   000224  0E1C               	movlw	28
  2238   000226  6E24               	movwf	OLED_PrintNumber@startColumn^0,c
  2239   000228  0E7F               	movlw	127
  2240   00022A  6E25               	movwf	OLED_PrintNumber@endColumn^0,c
  2241   00022C  0E64               	movlw	low main@tmp
  2242   00022E  6E26               	movwf	OLED_PrintNumber@str^0,c
  2243   000230  0E02               	movlw	high main@tmp
  2244   000232  6E27               	movwf	(OLED_PrintNumber@str+1)^0,c
  2245   000234  0E01               	movlw	1
  2246   000236  EC5F  F006         	call	_OLED_PrintNumber
  2247                           
  2248                           ;main.c: 125:                 break;
  2249   00023A  EF07  F002         	goto	l2548
  2250   00023E                     l2510:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 127:                 OLED_Print(0x01, 0x02, 0x00, 0x7F, foots, sizeof(foots));
  2254   00023E  0E02               	movlw	2
  2255   000240  6E13               	movwf	OLED_Print@endPage^0,c
  2256   000242  0E00               	movlw	0
  2257   000244  6E14               	movwf	OLED_Print@startColumn^0,c
  2258   000246  0E7F               	movlw	127
  2259   000248  6E15               	movwf	OLED_Print@endColumn^0,c
  2260   00024A  0EAD               	movlw	low _foots
  2261   00024C  6E16               	movwf	OLED_Print@bitmap^0,c
  2262   00024E  0E7C               	movlw	high _foots
  2263   000250  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2264   000252  0E00               	movlw	0
  2265   000254  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2266   000256  0E2A               	movlw	42
  2267   000258  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2268   00025A  0E01               	movlw	1
  2269   00025C  ECD4  F006         	call	_OLED_Print
  2270   000260                     
  2271                           ;main.c: 128:                 itoa(val.step, tmp);
  2272   000260  C0F3  F015         	movff	main@val,itoa@n
  2273   000264  C0F4  F016         	movff	main@val+1,itoa@n+1
  2274   000268  0E64               	movlw	low main@tmp
  2275   00026A  6E17               	movwf	itoa@s^0,c
  2276   00026C  0E02               	movlw	high main@tmp
  2277   00026E  6E18               	movwf	(itoa@s+1)^0,c
  2278   000270  EC26  F003         	call	_itoa	;wreg free
  2279   000274                     
  2280                           ;main.c: 129:                 OLED_PrintNumber(0x01, 0x02, 0x1C, 0x7F, tmp);
  2281   000274  0E02               	movlw	2
  2282   000276  6E23               	movwf	OLED_PrintNumber@endPage^0,c
  2283   000278  0E1C               	movlw	28
  2284   00027A  6E24               	movwf	OLED_PrintNumber@startColumn^0,c
  2285   00027C  0E7F               	movlw	127
  2286   00027E  6E25               	movwf	OLED_PrintNumber@endColumn^0,c
  2287   000280  0E64               	movlw	low main@tmp
  2288   000282  6E26               	movwf	OLED_PrintNumber@str^0,c
  2289   000284  0E02               	movlw	high main@tmp
  2290   000286  6E27               	movwf	(OLED_PrintNumber@str+1)^0,c
  2291   000288  0E01               	movlw	1
  2292   00028A  EC5F  F006         	call	_OLED_PrintNumber
  2293                           
  2294                           ;main.c: 130:                 break;
  2295   00028E  EF07  F002         	goto	l2548
  2296   000292                     l2516:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 132:                 itoa(val.step + val.step / 2, tmp);
  2300   000292  C0F3  F00D         	movff	main@val,___awdiv@dividend
  2301   000296  C0F4  F00E         	movff	main@val+1,___awdiv@dividend+1
  2302   00029A  0E00               	movlw	0
  2303   00029C  6E10               	movwf	(___awdiv@divisor+1)^0,c
  2304   00029E  0E02               	movlw	2
  2305   0002A0  6E0F               	movwf	___awdiv@divisor^0,c
  2306   0002A2  ECCA  F004         	call	___awdiv	;wreg free
  2307   0002A6  0100               	movlb	0	; () banked
  2308   0002A8  51F3               	movf	main@val& (0+255),w,b
  2309   0002AA  240D               	addwf	?___awdiv^0,w,c
  2310   0002AC  6FF1               	movwf	_main$1698& (0+255),b
  2311   0002AE  51F4               	movf	(main@val+1)& (0+255),w,b
  2312   0002B0  200E               	addwfc	(?___awdiv+1)^0,w,c
  2313   0002B2  6FF2               	movwf	(_main$1698+1)& (0+255),b
  2314   0002B4                     
  2315                           ; BSR set to: 0
  2316                           ;main.c: 132:                 itoa(val.step + val.step / 2, tmp);
  2317   0002B4  C0F1  F015         	movff	_main$1698,itoa@n
  2318   0002B8  C0F2  F016         	movff	_main$1698+1,itoa@n+1
  2319   0002BC  0E64               	movlw	low main@tmp
  2320   0002BE  6E17               	movwf	itoa@s^0,c
  2321   0002C0  0E02               	movlw	high main@tmp
  2322   0002C2  6E18               	movwf	(itoa@s+1)^0,c
  2323   0002C4  EC26  F003         	call	_itoa	;wreg free
  2324   0002C8                     
  2325                           ;main.c: 133:                 OLED_PrintNumber(0x01, 0x02, 0x1C, 0x7F, tmp);
  2326   0002C8  0E02               	movlw	2
  2327   0002CA  6E23               	movwf	OLED_PrintNumber@endPage^0,c
  2328   0002CC  0E1C               	movlw	28
  2329   0002CE  6E24               	movwf	OLED_PrintNumber@startColumn^0,c
  2330   0002D0  0E7F               	movlw	127
  2331   0002D2  6E25               	movwf	OLED_PrintNumber@endColumn^0,c
  2332   0002D4  0E64               	movlw	low main@tmp
  2333   0002D6  6E26               	movwf	OLED_PrintNumber@str^0,c
  2334   0002D8  0E02               	movlw	high main@tmp
  2335   0002DA  6E27               	movwf	(OLED_PrintNumber@str+1)^0,c
  2336   0002DC  0E01               	movlw	1
  2337   0002DE  EC5F  F006         	call	_OLED_PrintNumber
  2338   0002E2                     
  2339                           ;main.c: 134:                 OLED_PrintChar(0x01, 0x02, 0x78, 0x7F, 'm');
  2340   0002E2  0E02               	movlw	2
  2341   0002E4  6E1D               	movwf	OLED_PrintChar@endPage^0,c
  2342   0002E6  0E78               	movlw	120
  2343   0002E8  6E1E               	movwf	OLED_PrintChar@startColumn^0,c
  2344   0002EA  0E7F               	movlw	127
  2345   0002EC  6E1F               	movwf	OLED_PrintChar@endColumn^0,c
  2346   0002EE  0E6D               	movlw	109
  2347   0002F0  6E20               	movwf	OLED_PrintChar@c^0,c
  2348   0002F2  0E01               	movlw	1
  2349   0002F4  EC16  F002         	call	_OLED_PrintChar
  2350                           
  2351                           ;main.c: 135:                 break;
  2352   0002F8  EF07  F002         	goto	l2548
  2353   0002FC                     l2524:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;main.c: 137:                 if(which_heart == 1){
  2357   0002FC  05F9               	decf	_which_heart& (0+255),w,b
  2358   0002FE  11FA               	iorwf	(_which_heart+1)& (0+255),w,b
  2359   000300  A4D8               	btfss	status,2,c
  2360   000302  EF85  F001         	goto	u1661
  2361   000306  EF87  F001         	goto	u1660
  2362   00030A                     u1661:
  2363   00030A  EF9F  F001         	goto	l2530
  2364   00030E                     u1660:
  2365   00030E                     
  2366                           ; BSR set to: 0
  2367                           ;main.c: 138:                     OLED_Print(0x01, 0x02, 0x00, 0x7F, heart1, sizeof(hear
      +                          t1));
  2368   00030E  0E02               	movlw	2
  2369   000310  6E13               	movwf	OLED_Print@endPage^0,c
  2370   000312  0E00               	movlw	0
  2371   000314  6E14               	movwf	OLED_Print@startColumn^0,c
  2372   000316  0E7F               	movlw	127
  2373   000318  6E15               	movwf	OLED_Print@endColumn^0,c
  2374   00031A  0E57               	movlw	low _heart1
  2375   00031C  6E16               	movwf	OLED_Print@bitmap^0,c
  2376   00031E  0E7D               	movlw	high _heart1
  2377   000320  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2378   000322  0E00               	movlw	0
  2379   000324  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2380   000326  0E20               	movlw	32
  2381   000328  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2382   00032A  0E01               	movlw	1
  2383   00032C  ECD4  F006         	call	_OLED_Print
  2384   000330                     
  2385                           ;main.c: 139:                     which_heart = 2;
  2386   000330  0E00               	movlw	0
  2387   000332  0100               	movlb	0	; () banked
  2388   000334  6FFA               	movwf	(_which_heart+1)& (0+255),b
  2389   000336  0E02               	movlw	2
  2390   000338  6FF9               	movwf	_which_heart& (0+255),b
  2391                           
  2392                           ;main.c: 140:                 }
  2393   00033A  EFB5  F001         	goto	l2534
  2394   00033E                     l2530:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;main.c: 142:                     OLED_Print(0x01, 0x02, 0x00, 0x7F, heart2, sizeof(hear
      +                          t2));
  2398   00033E  0E02               	movlw	2
  2399   000340  6E13               	movwf	OLED_Print@endPage^0,c
  2400   000342  0E00               	movlw	0
  2401   000344  6E14               	movwf	OLED_Print@startColumn^0,c
  2402   000346  0E7F               	movlw	127
  2403   000348  6E15               	movwf	OLED_Print@endColumn^0,c
  2404   00034A  0E37               	movlw	low _heart2
  2405   00034C  6E16               	movwf	OLED_Print@bitmap^0,c
  2406   00034E  0E7D               	movlw	high _heart2
  2407   000350  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  2408   000352  0E00               	movlw	0
  2409   000354  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  2410   000356  0E20               	movlw	32
  2411   000358  6E18               	movwf	OLED_Print@bitmapSize^0,c
  2412   00035A  0E01               	movlw	1
  2413   00035C  ECD4  F006         	call	_OLED_Print
  2414   000360                     
  2415                           ;main.c: 143:                     which_heart = 1;
  2416   000360  0E00               	movlw	0
  2417   000362  0100               	movlb	0	; () banked
  2418   000364  6FFA               	movwf	(_which_heart+1)& (0+255),b
  2419   000366  0E01               	movlw	1
  2420   000368  6FF9               	movwf	_which_heart& (0+255),b
  2421   00036A                     l2534:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;main.c: 147:                 itoa(val.heartRate, tmp);
  2425   00036A  C0F5  F015         	movff	main@val+2,itoa@n
  2426   00036E  C0F6  F016         	movff	main@val+3,itoa@n+1
  2427   000372  0E64               	movlw	low main@tmp
  2428   000374  6E17               	movwf	itoa@s^0,c
  2429   000376  0E02               	movlw	high main@tmp
  2430   000378  6E18               	movwf	(itoa@s+1)^0,c
  2431   00037A  EC26  F003         	call	_itoa	;wreg free
  2432   00037E                     
  2433                           ;main.c: 148:                 OLED_PrintNumber(0x01, 0x02, 0x1C, 0x7F, tmp);
  2434   00037E  0E02               	movlw	2
  2435   000380  6E23               	movwf	OLED_PrintNumber@endPage^0,c
  2436   000382  0E1C               	movlw	28
  2437   000384  6E24               	movwf	OLED_PrintNumber@startColumn^0,c
  2438   000386  0E7F               	movlw	127
  2439   000388  6E25               	movwf	OLED_PrintNumber@endColumn^0,c
  2440   00038A  0E64               	movlw	low main@tmp
  2441   00038C  6E26               	movwf	OLED_PrintNumber@str^0,c
  2442   00038E  0E02               	movlw	high main@tmp
  2443   000390  6E27               	movwf	(OLED_PrintNumber@str+1)^0,c
  2444   000392  0E01               	movlw	1
  2445   000394  EC5F  F006         	call	_OLED_PrintNumber
  2446   000398                     
  2447                           ;main.c: 150:                 OLED_PrintChar(0x01, 0x02, 0x68, 0x7F, 'b');
  2448   000398  0E02               	movlw	2
  2449   00039A  6E1D               	movwf	OLED_PrintChar@endPage^0,c
  2450   00039C  0E68               	movlw	104
  2451   00039E  6E1E               	movwf	OLED_PrintChar@startColumn^0,c
  2452   0003A0  0E7F               	movlw	127
  2453   0003A2  6E1F               	movwf	OLED_PrintChar@endColumn^0,c
  2454   0003A4  0E62               	movlw	98
  2455   0003A6  6E20               	movwf	OLED_PrintChar@c^0,c
  2456   0003A8  0E01               	movlw	1
  2457   0003AA  EC16  F002         	call	_OLED_PrintChar
  2458   0003AE                     
  2459                           ;main.c: 151:                 OLED_PrintChar(0x01, 0x02, 0x70, 0x7F, 'p');
  2460   0003AE  0E02               	movlw	2
  2461   0003B0  6E1D               	movwf	OLED_PrintChar@endPage^0,c
  2462   0003B2  0E70               	movlw	112
  2463   0003B4  6E1E               	movwf	OLED_PrintChar@startColumn^0,c
  2464   0003B6  0E7F               	movlw	127
  2465   0003B8  6E1F               	movwf	OLED_PrintChar@endColumn^0,c
  2466   0003BA  0E70               	movlw	112
  2467   0003BC  6E20               	movwf	OLED_PrintChar@c^0,c
  2468   0003BE  0E01               	movlw	1
  2469   0003C0  EC16  F002         	call	_OLED_PrintChar
  2470   0003C4                     
  2471                           ;main.c: 152:                 OLED_PrintChar(0x01, 0x02, 0x78, 0x7F, 'm');
  2472   0003C4  0E02               	movlw	2
  2473   0003C6  6E1D               	movwf	OLED_PrintChar@endPage^0,c
  2474   0003C8  0E78               	movlw	120
  2475   0003CA  6E1E               	movwf	OLED_PrintChar@startColumn^0,c
  2476   0003CC  0E7F               	movlw	127
  2477   0003CE  6E1F               	movwf	OLED_PrintChar@endColumn^0,c
  2478   0003D0  0E6D               	movlw	109
  2479   0003D2  6E20               	movwf	OLED_PrintChar@c^0,c
  2480   0003D4  0E01               	movlw	1
  2481   0003D6  EC16  F002         	call	_OLED_PrintChar
  2482                           
  2483                           ;main.c: 153:                 break;
  2484   0003DA  EF07  F002         	goto	l2548
  2485   0003DE                     l2546:
  2486   0003DE  0100               	movlb	0	; () banked
  2487   0003E0  51FC               	movf	_state& (0+255),w,b
  2488                           
  2489                           ; Switch size 1, requested type "simple"
  2490                           ; Number of cases is 5, Range of values is 48 to 52
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           16     9 (average)
  2494                           ;	Chosen strategy is simple_byte
  2495   0003E2  0A30               	xorlw	48	; case 48
  2496   0003E4  B4D8               	btfsc	status,2,c
  2497   0003E6  EF9A  F000         	goto	l2494
  2498   0003EA  0A01               	xorlw	1	; case 49
  2499   0003EC  B4D8               	btfsc	status,2,c
  2500   0003EE  EFE4  F000         	goto	l2504
  2501   0003F2  0A03               	xorlw	3	; case 50
  2502   0003F4  B4D8               	btfsc	status,2,c
  2503   0003F6  EF1F  F001         	goto	l2510
  2504   0003FA  0A01               	xorlw	1	; case 51
  2505   0003FC  B4D8               	btfsc	status,2,c
  2506   0003FE  EF49  F001         	goto	l2516
  2507   000402  0A07               	xorlw	7	; case 52
  2508   000404  B4D8               	btfsc	status,2,c
  2509   000406  EF7E  F001         	goto	l2524
  2510   00040A  EF07  F002         	goto	l2548
  2511   00040E                     l2548:
  2512                           
  2513                           ;main.c: 156:         _delay((unsigned long)((300)*(8000000/4000.0)));
  2514   00040E  0E04               	movlw	4
  2515   000410  6E2C               	movwf	(??_main+1)^0,c
  2516   000412  0E0C               	movlw	12
  2517   000414  6E2B               	movwf	??_main^0,c
  2518   000416  0E34               	movlw	52
  2519   000418                     u1697:
  2520   000418  2EE8               	decfsz	wreg,f,c
  2521   00041A  D7FE               	bra	u1697
  2522   00041C  2E2B               	decfsz	??_main^0,f,c
  2523   00041E  D7FC               	bra	u1697
  2524   000420  2E2C               	decfsz	(??_main+1)^0,f,c
  2525   000422  D7FA               	bra	u1697
  2526   000424  EF3C  F000         	goto	l2470
  2527   000428  EF36  F000         	goto	start
  2528   00042C                     __end_of_main:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _init_time *****************
  2532 ;; Defined at:
  2533 ;;		line 14 in file "timer.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2547 ;;      Params:         0       0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 5
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text1
  2562   001376                     __ptext1:
  2563                           	callstack 0
  2564   001376                     _init_time:
  2565                           	callstack 25
  2566   001376                     
  2567                           ;timer.c: 15:     cnt = 0;
  2568   001376  0E00               	movlw	0
  2569   001378  0100               	movlb	0	; () banked
  2570   00137A  6FFE               	movwf	(_cnt+1)& (0+255),b
  2571   00137C  0E00               	movlw	0
  2572   00137E  6FFD               	movwf	_cnt& (0+255),b
  2573   001380                     
  2574                           ; BSR set to: 0
  2575   001380  0012               	return		;funcret
  2576   001382                     __end_of_init_time:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _SYSTEM_Initialize *****************
  2580 ;; Defined at:
  2581 ;;		line 60 in file "setting.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2595 ;;      Params:         0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0
  2598 ;;      Totals:         0       0       0       0       0       0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 8
  2602 ;; This function calls:
  2603 ;;		_INTTERUPT_Initialize
  2604 ;;		_OLED_Initialize
  2605 ;;		_OSCILLATOR_Initialize
  2606 ;;		_TIMER_Initialize
  2607 ;;		_UART_Initialize
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text2
  2614   00133A                     __ptext2:
  2615                           	callstack 0
  2616   00133A                     _SYSTEM_Initialize:
  2617                           	callstack 22
  2618   00133A                     
  2619                           ;setting.c: 62:     OSCILLATOR_Initialize();
  2620   00133A  ECD1  F009         	call	_OSCILLATOR_Initialize	;wreg free
  2621   00133E                     
  2622                           ;setting.c: 63:     UART_Initialize();
  2623   00133E  EC8E  F009         	call	_UART_Initialize	;wreg free
  2624   001342                     
  2625                           ;setting.c: 64:     INTTERUPT_Initialize();
  2626   001342  ECA8  F009         	call	_INTTERUPT_Initialize	;wreg free
  2627   001346                     
  2628                           ;setting.c: 65:     OLED_Initialize();
  2629   001346  EC94  F003         	call	_OLED_Initialize	;wreg free
  2630   00134A                     
  2631                           ;setting.c: 66:     TIMER_Initialize();
  2632   00134A  ECB3  F009         	call	_TIMER_Initialize	;wreg free
  2633   00134E  0012               	return		;funcret
  2634   001350                     __end_of_SYSTEM_Initialize:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _UART_Initialize *****************
  2638 ;; Defined at:
  2639 ;;		line 78 in file "setting.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2653 ;;      Params:         0       0       0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 5
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_SYSTEM_Initialize
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text3
  2668   00131C                     __ptext3:
  2669                           	callstack 0
  2670   00131C                     _UART_Initialize:
  2671                           	callstack 24
  2672   00131C                     
  2673                           ;setting.c: 80:     TRISCbits.TRISC6 = 1;
  2674   00131C  8C94               	bsf	148,6,c	;volatile
  2675                           
  2676                           ;setting.c: 81:     TRISCbits.TRISC7 = 1;
  2677   00131E  8E94               	bsf	148,7,c	;volatile
  2678                           
  2679                           ;setting.c: 83:     TXSTAbits.SYNC = 0;
  2680   001320  98AC               	bcf	172,4,c	;volatile
  2681                           
  2682                           ;setting.c: 84:     BAUDCONbits.BRG16 = 0;
  2683   001322  96B8               	bcf	184,3,c	;volatile
  2684                           
  2685                           ;setting.c: 85:     TXSTAbits.BRGH = 0;
  2686   001324  94AC               	bcf	172,2,c	;volatile
  2687   001326                     
  2688                           ;setting.c: 86:     SPBRG = 51;
  2689   001326  0E33               	movlw	51
  2690   001328  6EAF               	movwf	175,c	;volatile
  2691   00132A                     
  2692                           ;setting.c: 88:     RCSTAbits.SPEN = 1;
  2693   00132A  8EAB               	bsf	171,7,c	;volatile
  2694   00132C                     
  2695                           ;setting.c: 89:     PIR1bits.TXIF = 0;
  2696   00132C  989E               	bcf	158,4,c	;volatile
  2697   00132E                     
  2698                           ;setting.c: 90:     PIR1bits.RCIF = 0;
  2699   00132E  9A9E               	bcf	158,5,c	;volatile
  2700   001330                     
  2701                           ;setting.c: 91:     TXSTAbits.TXEN = 1;
  2702   001330  8AAC               	bsf	172,5,c	;volatile
  2703   001332                     
  2704                           ;setting.c: 92:     RCSTAbits.CREN = 1;
  2705   001332  88AB               	bsf	171,4,c	;volatile
  2706   001334                     
  2707                           ;setting.c: 96:     PIE1bits.RCIE = 1;
  2708   001334  8A9D               	bsf	157,5,c	;volatile
  2709   001336                     
  2710                           ;setting.c: 97:     IPR1bits.RCIP = 0;
  2711   001336  9A9F               	bcf	159,5,c	;volatile
  2712   001338  0012               	return		;funcret
  2713   00133A                     __end_of_UART_Initialize:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _TIMER_Initialize *****************
  2717 ;; Defined at:
  2718 ;;		line 114 in file "setting.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2732 ;;      Params:         0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 5
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_SYSTEM_Initialize
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text4
  2747   001366                     __ptext4:
  2748                           	callstack 0
  2749   001366                     _TIMER_Initialize:
  2750                           	callstack 24
  2751   001366                     
  2752                           ;setting.c: 115:     T2CON = 0b01111111;
  2753   001366  0E7F               	movlw	127
  2754   001368  6ECA               	movwf	202,c	;volatile
  2755                           
  2756                           ;setting.c: 116:     PR2 = 122;
  2757   00136A  0E7A               	movlw	122
  2758   00136C  6ECB               	movwf	203,c	;volatile
  2759   00136E                     
  2760                           ;setting.c: 117:     PIR1bits.TMR2IF = 0;
  2761   00136E  929E               	bcf	158,1,c	;volatile
  2762   001370                     
  2763                           ;setting.c: 118:     PIE1bits.TMR2IE = 1;
  2764   001370  829D               	bsf	157,1,c	;volatile
  2765   001372                     
  2766                           ;setting.c: 119:     IPR1bits.TMR2IP = 1;
  2767   001372  829F               	bsf	159,1,c	;volatile
  2768   001374  0012               	return		;funcret
  2769   001376                     __end_of_TIMER_Initialize:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _OSCILLATOR_Initialize *****************
  2773 ;; Defined at:
  2774 ;;		line 69 in file "setting.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		None
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         0       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 5
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_SYSTEM_Initialize
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text5
  2803   0013A2                     __ptext5:
  2804                           	callstack 0
  2805   0013A2                     _OSCILLATOR_Initialize:
  2806                           	callstack 24
  2807   0013A2                     
  2808                           ;setting.c: 72:     IRCF2 = 1;
  2809   0013A2  8CD3               	bsf	4051,6,c	;volatile
  2810                           
  2811                           ;setting.c: 73:     IRCF1 = 1;
  2812   0013A4  8AD3               	bsf	4051,5,c	;volatile
  2813                           
  2814                           ;setting.c: 74:     IRCF0 = 0;
  2815   0013A6  98D3               	bcf	4051,4,c	;volatile
  2816   0013A8  0012               	return		;funcret
  2817   0013AA                     __end_of_OSCILLATOR_Initialize:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _OLED_Initialize *****************
  2821 ;; Defined at:
  2822 ;;		line 121 in file "setting.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2836 ;;      Params:         0       0       0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0
  2839 ;;      Totals:         0       0       0       0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 7
  2843 ;; This function calls:
  2844 ;;		_I2C_Start
  2845 ;;		_I2C_Stop
  2846 ;;		_I2C_Write
  2847 ;; This function is called by:
  2848 ;;		_SYSTEM_Initialize
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text6
  2853   000728                     __ptext6:
  2854                           	callstack 0
  2855   000728                     _OLED_Initialize:
  2856                           	callstack 22
  2857   000728                     
  2858                           ;setting.c: 122:     OSCTUNE = 0x00;
  2859   000728  6A9B               	clrf	155,c	;volatile
  2860                           
  2861                           ;setting.c: 124:     TRISC = 0b11111111;
  2862   00072A  6894               	setf	148,c	;volatile
  2863                           
  2864                           ;setting.c: 125:     LATC = 0;
  2865   00072C  6A8B               	clrf	139,c	;volatile
  2866   00072E                     
  2867                           ;setting.c: 128:     ADCON1 = 0x0F;
  2868   00072E  0E0F               	movlw	15
  2869   000730  6EC1               	movwf	193,c	;volatile
  2870                           
  2871                           ;setting.c: 129:     TRISB = 0b00000001;
  2872   000732  0E01               	movlw	1
  2873   000734  6E93               	movwf	147,c	;volatile
  2874   000736                     
  2875                           ;setting.c: 130:     RCONbits.IPEN = 1;
  2876   000736  8ED0               	bsf	208,7,c	;volatile
  2877   000738                     
  2878                           ;setting.c: 131:     INTCONbits.INT0IF = 0;
  2879   000738  92F2               	bcf	242,1,c	;volatile
  2880   00073A                     
  2881                           ;setting.c: 132:     INTCONbits.GIE = 1;
  2882   00073A  8EF2               	bsf	242,7,c	;volatile
  2883   00073C                     
  2884                           ;setting.c: 133:     INTCONbits.INT0IE = 1;
  2885   00073C  88F2               	bsf	242,4,c	;volatile
  2886                           
  2887                           ;setting.c: 136:     SSPCON1 = 0x28;
  2888   00073E  0E28               	movlw	40
  2889   000740  6EC6               	movwf	198,c	;volatile
  2890   000742                     
  2891                           ;setting.c: 137:     SSPCON2 = 0x00;
  2892   000742  6AC5               	clrf	197,c	;volatile
  2893                           
  2894                           ;setting.c: 138:     SSPADD = 19;
  2895   000744  0E13               	movlw	19
  2896   000746  6EC8               	movwf	200,c	;volatile
  2897   000748                     
  2898                           ;setting.c: 139:     SSPSTAT = 0x00;
  2899   000748  6AC7               	clrf	199,c	;volatile
  2900   00074A                     
  2901                           ;setting.c: 142:     I2C_Start();
  2902   00074A  ECCC  F009         	call	_I2C_Start	;wreg free
  2903   00074E                     
  2904                           ;setting.c: 143:     I2C_Write(0x3C << 1);
  2905   00074E  0E78               	movlw	120
  2906   000750  ECC1  F009         	call	_I2C_Write
  2907   000754                     
  2908                           ;setting.c: 144:     I2C_Write(0x00);
  2909   000754  0E00               	movlw	0
  2910   000756  ECC1  F009         	call	_I2C_Write
  2911   00075A                     
  2912                           ;setting.c: 145:     I2C_Write(0xAE);
  2913   00075A  0EAE               	movlw	174
  2914   00075C  ECC1  F009         	call	_I2C_Write
  2915   000760                     
  2916                           ;setting.c: 146:     I2C_Write(0xD5);
  2917   000760  0ED5               	movlw	213
  2918   000762  ECC1  F009         	call	_I2C_Write
  2919   000766                     
  2920                           ;setting.c: 147:     I2C_Write(0x80);
  2921   000766  0E80               	movlw	128
  2922   000768  ECC1  F009         	call	_I2C_Write
  2923   00076C                     
  2924                           ;setting.c: 148:     I2C_Write(0xA8);
  2925   00076C  0EA8               	movlw	168
  2926   00076E  ECC1  F009         	call	_I2C_Write
  2927   000772                     
  2928                           ;setting.c: 149:     I2C_Write(0x1F);
  2929   000772  0E1F               	movlw	31
  2930   000774  ECC1  F009         	call	_I2C_Write
  2931   000778                     
  2932                           ;setting.c: 150:     I2C_Write(0xD3);
  2933   000778  0ED3               	movlw	211
  2934   00077A  ECC1  F009         	call	_I2C_Write
  2935   00077E                     
  2936                           ;setting.c: 151:     I2C_Write(0x00);
  2937   00077E  0E00               	movlw	0
  2938   000780  ECC1  F009         	call	_I2C_Write
  2939   000784                     
  2940                           ;setting.c: 152:     I2C_Write(0x40);
  2941   000784  0E40               	movlw	64
  2942   000786  ECC1  F009         	call	_I2C_Write
  2943   00078A                     
  2944                           ;setting.c: 153:     I2C_Write(0x8D);
  2945   00078A  0E8D               	movlw	141
  2946   00078C  ECC1  F009         	call	_I2C_Write
  2947   000790                     
  2948                           ;setting.c: 154:     I2C_Write(0x14);
  2949   000790  0E14               	movlw	20
  2950   000792  ECC1  F009         	call	_I2C_Write
  2951   000796                     
  2952                           ;setting.c: 155:     I2C_Write(0x20);
  2953   000796  0E20               	movlw	32
  2954   000798  ECC1  F009         	call	_I2C_Write
  2955   00079C                     
  2956                           ;setting.c: 156:     I2C_Write(0x01);
  2957   00079C  0E01               	movlw	1
  2958   00079E  ECC1  F009         	call	_I2C_Write
  2959   0007A2                     
  2960                           ;setting.c: 157:     I2C_Write(0xA0);
  2961   0007A2  0EA0               	movlw	160
  2962   0007A4  ECC1  F009         	call	_I2C_Write
  2963   0007A8                     
  2964                           ;setting.c: 158:     I2C_Write(0xC0);
  2965   0007A8  0EC0               	movlw	192
  2966   0007AA  ECC1  F009         	call	_I2C_Write
  2967   0007AE                     
  2968                           ;setting.c: 159:     I2C_Write(0xDA);
  2969   0007AE  0EDA               	movlw	218
  2970   0007B0  ECC1  F009         	call	_I2C_Write
  2971   0007B4                     
  2972                           ;setting.c: 160:     I2C_Write(0x02);
  2973   0007B4  0E02               	movlw	2
  2974   0007B6  ECC1  F009         	call	_I2C_Write
  2975   0007BA                     
  2976                           ;setting.c: 161:     I2C_Write(0x81);
  2977   0007BA  0E81               	movlw	129
  2978   0007BC  ECC1  F009         	call	_I2C_Write
  2979   0007C0                     
  2980                           ;setting.c: 162:     I2C_Write(0x8F);
  2981   0007C0  0E8F               	movlw	143
  2982   0007C2  ECC1  F009         	call	_I2C_Write
  2983   0007C6                     
  2984                           ;setting.c: 163:     I2C_Write(0xD9);
  2985   0007C6  0ED9               	movlw	217
  2986   0007C8  ECC1  F009         	call	_I2C_Write
  2987   0007CC                     
  2988                           ;setting.c: 164:     I2C_Write(0xF1);
  2989   0007CC  0EF1               	movlw	241
  2990   0007CE  ECC1  F009         	call	_I2C_Write
  2991   0007D2                     
  2992                           ;setting.c: 165:     I2C_Write(0xDB);
  2993   0007D2  0EDB               	movlw	219
  2994   0007D4  ECC1  F009         	call	_I2C_Write
  2995   0007D8                     
  2996                           ;setting.c: 166:     I2C_Write(0x20);
  2997   0007D8  0E20               	movlw	32
  2998   0007DA  ECC1  F009         	call	_I2C_Write
  2999   0007DE                     
  3000                           ;setting.c: 167:     I2C_Write(0xA4);
  3001   0007DE  0EA4               	movlw	164
  3002   0007E0  ECC1  F009         	call	_I2C_Write
  3003   0007E4                     
  3004                           ;setting.c: 168:     I2C_Write(0xA6);
  3005   0007E4  0EA6               	movlw	166
  3006   0007E6  ECC1  F009         	call	_I2C_Write
  3007   0007EA                     
  3008                           ;setting.c: 169:     I2C_Write(0x2E);
  3009   0007EA  0E2E               	movlw	46
  3010   0007EC  ECC1  F009         	call	_I2C_Write
  3011   0007F0                     
  3012                           ;setting.c: 170:     I2C_Write(0xAF);
  3013   0007F0  0EAF               	movlw	175
  3014   0007F2  ECC1  F009         	call	_I2C_Write
  3015   0007F6                     
  3016                           ;setting.c: 171:     I2C_Stop();
  3017   0007F6  ECC7  F009         	call	_I2C_Stop	;wreg free
  3018   0007FA  0012               	return		;funcret
  3019   0007FC                     __end_of_OLED_Initialize:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _INTTERUPT_Initialize *****************
  3023 ;; Defined at:
  3024 ;;		line 100 in file "setting.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		None
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3038 ;;      Params:         0       0       0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 5
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_SYSTEM_Initialize
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text7
  3053   001350                     __ptext7:
  3054                           	callstack 0
  3055   001350                     _INTTERUPT_Initialize:
  3056                           	callstack 24
  3057   001350                     
  3058                           ;setting.c: 101:     TRISBbits.RB0 = 1;
  3059   001350  8093               	bsf	147,0,c	;volatile
  3060                           
  3061                           ;setting.c: 103:     INTCONbits.INT0IF = 0;
  3062   001352  92F2               	bcf	242,1,c	;volatile
  3063                           
  3064                           ;setting.c: 104:     INTCONbits.INT0IE = 1;
  3065   001354  88F2               	bsf	242,4,c	;volatile
  3066                           
  3067                           ;setting.c: 105:     PIE1bits.ADIE = 1;
  3068   001356  8C9D               	bsf	157,6,c	;volatile
  3069                           
  3070                           ;setting.c: 106:     PIR1bits.ADIF = 0;
  3071   001358  9C9E               	bcf	158,6,c	;volatile
  3072                           
  3073                           ;setting.c: 107:     INTCONbits.PEIE = 1;
  3074   00135A  8CF2               	bsf	242,6,c	;volatile
  3075                           
  3076                           ;setting.c: 108:     INTCONbits.GIE = 1;
  3077   00135C  8EF2               	bsf	242,7,c	;volatile
  3078                           
  3079                           ;setting.c: 109:     RCONbits.IPEN = 1;
  3080   00135E  8ED0               	bsf	208,7,c	;volatile
  3081                           
  3082                           ;setting.c: 110:     INTCONbits.GIEH = 1;
  3083   001360  8EF2               	bsf	242,7,c	;volatile
  3084                           
  3085                           ;setting.c: 111:     INTCONbits.GIEL = 1;
  3086   001362  8CF2               	bsf	242,6,c	;volatile
  3087   001364  0012               	return		;funcret
  3088   001366                     __end_of_INTTERUPT_Initialize:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _ParsingData *****************
  3092 ;; Defined at:
  3093 ;;		line 20 in file "uart.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  s               2   25[COMRAM] PTR unsigned char 
  3096 ;;		 -> main@str(100), 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  input         100    0[BANK0 ] unsigned char [100]
  3099 ;;  val             6  106[BANK0 ] struct Data
  3100 ;;  num3            2  104[BANK0 ] int 
  3101 ;;  num2            2  102[BANK0 ] int 
  3102 ;;  num1            2  100[BANK0 ] int 
  3103 ;;  token           1  112[BANK0 ] PTR unsigned char 
  3104 ;;		 -> NULL(0), ParsingData@input(100), 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  6   25[COMRAM] struct Data
  3107 ;; Registers used:
  3108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3114 ;;      Params:         6       0       0       0       0       0       0
  3115 ;;      Locals:         0     113       0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0
  3117 ;;      Totals:         6     113       0       0       0       0       0
  3118 ;;Total ram usage:      119 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 8
  3121 ;; This function calls:
  3122 ;;		_ClearBuffer
  3123 ;;		_atoi
  3124 ;;		_strcpy
  3125 ;;		_strtok
  3126 ;;		_test
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text8
  3133   0007FC                     __ptext8:
  3134                           	callstack 0
  3135   0007FC                     _ParsingData:
  3136                           	callstack 22
  3137   0007FC  0100               	movlb	0	; () banked
  3138   0007FE  69E6               	setf	ParsingData@num2& (0+255),b
  3139   000800  69E7               	setf	(ParsingData@num2+1)& (0+255),b
  3140   000802  69E8               	setf	ParsingData@num3& (0+255),b
  3141   000804  69E9               	setf	(ParsingData@num3+1)& (0+255),b
  3142   000806                     
  3143                           ; BSR set to: 0
  3144                           ;uart.c: 22:     char *token;;uart.c: 23:     char input[100];;uart.c: 24:     strcpy(in
      +                          put, s);
  3145   000806  0E80               	movlw	low ParsingData@input
  3146   000808  6E0D               	movwf	strcpy@dest^0,c
  3147   00080A  6A0E               	clrf	(strcpy@dest+1)^0,c
  3148   00080C  C01A  F00F         	movff	ParsingData@s,strcpy@src
  3149   000810  C01B  F010         	movff	ParsingData@s+1,strcpy@src+1
  3150   000814  ECF7  F007         	call	_strcpy	;wreg free
  3151   000818                     
  3152                           ;uart.c: 25:     ClearBuffer();
  3153   000818  EC10  F009         	call	_ClearBuffer	;wreg free
  3154   00081C                     
  3155                           ;uart.c: 26:     token = strtok(input, " ");
  3156   00081C  0E80               	movlw	low ParsingData@input
  3157   00081E  6E17               	movwf	strtok@s^0,c
  3158   000820  0EBD               	movlw	low STR_4
  3159   000822  6E18               	movwf	strtok@sep^0,c
  3160   000824  0E7D               	movlw	high STR_4
  3161   000826  6E19               	movwf	(strtok@sep+1)^0,c
  3162   000828  EC82  F005         	call	_strtok	;wreg free
  3163   00082C  0100               	movlb	0	; () banked
  3164   00082E  6FF0               	movwf	ParsingData@token& (0+255),b
  3165   000830                     
  3166                           ; BSR set to: 0
  3167                           ;uart.c: 27:     test(token);
  3168   000830  C0F0  F010         	movff	ParsingData@token,test@s
  3169   000834  ECEB  F008         	call	_test	;wreg free
  3170   000838                     
  3171                           ;uart.c: 28:     num1 = atoi(token);
  3172   000838  C0F0  F00D         	movff	ParsingData@token,atoi@s
  3173   00083C  ECA0  F002         	call	_atoi	;wreg free
  3174   000840  C00D  F0E4         	movff	?_atoi,ParsingData@num1
  3175   000844  C00E  F0E5         	movff	?_atoi+1,ParsingData@num1+1
  3176   000848                     
  3177                           ;uart.c: 30:     token = strtok(((void*)0), " ");
  3178   000848  0E00               	movlw	0
  3179   00084A  6E17               	movwf	strtok@s^0,c
  3180   00084C  0EBD               	movlw	low STR_4
  3181   00084E  6E18               	movwf	strtok@sep^0,c
  3182   000850  0E7D               	movlw	high STR_4
  3183   000852  6E19               	movwf	(strtok@sep+1)^0,c
  3184   000854  EC82  F005         	call	_strtok	;wreg free
  3185   000858  0100               	movlb	0	; () banked
  3186   00085A  6FF0               	movwf	ParsingData@token& (0+255),b
  3187   00085C                     
  3188                           ; BSR set to: 0
  3189                           ;uart.c: 31:     test(token);
  3190   00085C  C0F0  F010         	movff	ParsingData@token,test@s
  3191   000860  ECEB  F008         	call	_test	;wreg free
  3192   000864                     
  3193                           ;uart.c: 32:     num2 = atoi(token);
  3194   000864  C0F0  F00D         	movff	ParsingData@token,atoi@s
  3195   000868  ECA0  F002         	call	_atoi	;wreg free
  3196   00086C  C00D  F0E6         	movff	?_atoi,ParsingData@num2
  3197   000870  C00E  F0E7         	movff	?_atoi+1,ParsingData@num2+1
  3198   000874                     
  3199                           ;uart.c: 34:     token = strtok(((void*)0), " ");
  3200   000874  0E00               	movlw	0
  3201   000876  6E17               	movwf	strtok@s^0,c
  3202   000878  0EBD               	movlw	low STR_4
  3203   00087A  6E18               	movwf	strtok@sep^0,c
  3204   00087C  0E7D               	movlw	high STR_4
  3205   00087E  6E19               	movwf	(strtok@sep+1)^0,c
  3206   000880  EC82  F005         	call	_strtok	;wreg free
  3207   000884  0100               	movlb	0	; () banked
  3208   000886  6FF0               	movwf	ParsingData@token& (0+255),b
  3209   000888                     
  3210                           ; BSR set to: 0
  3211                           ;uart.c: 35:     test(token);
  3212   000888  C0F0  F010         	movff	ParsingData@token,test@s
  3213   00088C  ECEB  F008         	call	_test	;wreg free
  3214   000890                     
  3215                           ;uart.c: 36:     num3 = atoi(token);
  3216   000890  C0F0  F00D         	movff	ParsingData@token,atoi@s
  3217   000894  ECA0  F002         	call	_atoi	;wreg free
  3218   000898  C00D  F0E8         	movff	?_atoi,ParsingData@num3
  3219   00089C  C00E  F0E9         	movff	?_atoi+1,ParsingData@num3+1
  3220   0008A0                     
  3221                           ;uart.c: 38:     struct Data val;;uart.c: 39:     val.step = num1;
  3222   0008A0  C0E4  F0EA         	movff	ParsingData@num1,ParsingData@val
  3223   0008A4  C0E5  F0EB         	movff	ParsingData@num1+1,ParsingData@val+1
  3224   0008A8                     
  3225                           ;uart.c: 40:     val.heartRate = num2;
  3226   0008A8  C0E6  F0EC         	movff	ParsingData@num2,ParsingData@val+2
  3227   0008AC  C0E7  F0ED         	movff	ParsingData@num2+1,ParsingData@val+3
  3228   0008B0                     
  3229                           ;uart.c: 41:     val.temp = num3;
  3230   0008B0  C0E8  F0EE         	movff	ParsingData@num3,ParsingData@val+4
  3231   0008B4  C0E9  F0EF         	movff	ParsingData@num3+1,ParsingData@val+5
  3232   0008B8                     
  3233                           ;uart.c: 42:     ClearBuffer();
  3234   0008B8  EC10  F009         	call	_ClearBuffer	;wreg free
  3235   0008BC                     
  3236                           ;uart.c: 43:     return val;
  3237   0008BC  EE20  F0EA         	lfsr	2,ParsingData@val
  3238   0008C0  EE00  F01A         	lfsr	0,?_ParsingData
  3239   0008C4  0E05               	movlw	5
  3240   0008C6                     u1441:
  3241   0008C6  CFDB FFEB          	movff	plusw2,plusw0
  3242   0008CA  06E8               	decf	wreg,f,c
  3243   0008CC  E2FC               	bc	u1441
  3244   0008CE  0012               	return		;funcret
  3245   0008D0                     __end_of_ParsingData:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _test *****************
  3249 ;; Defined at:
  3250 ;;		line 13 in file "uart.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  s               1   15[COMRAM] PTR unsigned char 
  3253 ;;		 -> NULL(0), ParsingData@input(100), 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  i               2   16[COMRAM] int 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3265 ;;      Params:         1       0       0       0       0       0       0
  3266 ;;      Locals:         2       0       0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0
  3268 ;;      Totals:         3       0       0       0       0       0       0
  3269 ;;Total ram usage:        3 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 6
  3272 ;; This function calls:
  3273 ;;		_putch
  3274 ;;		_strlen
  3275 ;; This function is called by:
  3276 ;;		_ParsingData
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text9
  3281   0011D6                     __ptext9:
  3282                           	callstack 0
  3283   0011D6                     _test:
  3284                           	callstack 23
  3285   0011D6                     
  3286                           ;uart.c: 14:     for(int i=0;i<strlen(s);i++) {
  3287   0011D6  0E00               	movlw	0
  3288   0011D8  6E12               	movwf	(test@i+1)^0,c
  3289   0011DA  0E00               	movlw	0
  3290   0011DC  6E11               	movwf	test@i^0,c
  3291   0011DE  EFFA  F008         	goto	l2102
  3292   0011E2                     l2098:
  3293                           
  3294                           ;uart.c: 15:         putch(s[i]);
  3295   0011E2  5010               	movf	test@s^0,w,c
  3296   0011E4  2411               	addwf	test@i^0,w,c
  3297   0011E6  6ED9               	movwf	fsr2l,c
  3298   0011E8  6ADA               	clrf	fsr2h,c
  3299   0011EA  50DF               	movf	indf2,w,c
  3300   0011EC  EC06  F007         	call	_putch
  3301   0011F0                     
  3302                           ;uart.c: 16:     }
  3303   0011F0  4A11               	infsnz	test@i^0,f,c
  3304   0011F2  2A12               	incf	(test@i+1)^0,f,c
  3305   0011F4                     l2102:
  3306   0011F4  C010  F00D         	movff	test@s,strlen@s
  3307   0011F8  EC4E  F009         	call	_strlen	;wreg free
  3308   0011FC  500D               	movf	?_strlen^0,w,c
  3309   0011FE  5C11               	subwf	test@i^0,w,c
  3310   001200  500E               	movf	(?_strlen+1)^0,w,c
  3311   001202  5812               	subwfb	(test@i+1)^0,w,c
  3312   001204  A0D8               	btfss	status,0,c
  3313   001206  EF07  F009         	goto	u1231
  3314   00120A  EF09  F009         	goto	u1230
  3315   00120E                     u1231:
  3316   00120E  EFF1  F008         	goto	l2098
  3317   001212                     u1230:
  3318   001212                     
  3319                           ;uart.c: 17:     putch('\r');
  3320   001212  0E0D               	movlw	13
  3321   001214  EC06  F007         	call	_putch
  3322                           
  3323                           ;uart.c: 18:     putch('\n');
  3324   001218  0E0A               	movlw	10
  3325   00121A  EC06  F007         	call	_putch
  3326   00121E  0012               	return		;funcret
  3327   001220                     __end_of_test:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _strlen *****************
  3331 ;; Defined at:
  3332 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  s               1   12[COMRAM] PTR const unsigned char 
  3335 ;;		 -> NULL(0), ParsingData@input(100), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  a               1   14[COMRAM] PTR const unsigned char 
  3338 ;;		 -> NULL(0), ParsingData@input(100), 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2   12[COMRAM] unsigned int 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         2       0       0       0       0       0       0
  3349 ;;      Locals:         1       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0
  3351 ;;      Totals:         3       0       0       0       0       0       0
  3352 ;;Total ram usage:        3 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 5
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_test
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text10
  3363   00129C                     __ptext10:
  3364                           	callstack 0
  3365   00129C                     _strlen:
  3366                           	callstack 23
  3367   00129C  C00D  F00F         	movff	strlen@s,strlen@a
  3368   0012A0  EF53  F009         	goto	l1914
  3369   0012A4                     l1912:
  3370   0012A4  2A0D               	incf	strlen@s^0,f,c
  3371   0012A6                     l1914:
  3372   0012A6  500D               	movf	strlen@s^0,w,c
  3373   0012A8  6ED9               	movwf	fsr2l,c
  3374   0012AA  6ADA               	clrf	fsr2h,c
  3375   0012AC  50DF               	movf	indf2,w,c
  3376   0012AE  A4D8               	btfss	status,2,c
  3377   0012B0  EF5C  F009         	goto	u951
  3378   0012B4  EF5E  F009         	goto	u950
  3379   0012B8                     u951:
  3380   0012B8  EF52  F009         	goto	l1912
  3381   0012BC                     u950:
  3382   0012BC  500F               	movf	strlen@a^0,w,c
  3383   0012BE  5C0D               	subwf	strlen@s^0,w,c
  3384   0012C0  6E0D               	movwf	?_strlen^0,c
  3385   0012C2  6A0E               	clrf	(?_strlen+1)^0,c
  3386   0012C4  BE0D               	btfsc	?_strlen^0,7,c
  3387   0012C6  060E               	decf	(?_strlen+1)^0,f,c
  3388   0012C8  0012               	return		;funcret
  3389   0012CA                     __end_of_strlen:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _putch *****************
  3393 ;; Defined at:
  3394 ;;		line 46 in file "uart.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  data            1    wreg     unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  data            1   12[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3408 ;;      Params:         0       0       0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0
  3411 ;;      Totals:         1       0       0       0       0       0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 5
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_test
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text11
  3423   000E0C                     __ptext11:
  3424                           	callstack 0
  3425   000E0C                     _putch:
  3426                           	callstack 23
  3427                           
  3428                           ;incstack = 0
  3429                           ;putch@data stored from wreg
  3430   000E0C  6E0D               	movwf	putch@data^0,c
  3431   000E0E                     
  3432                           ;uart.c: 47:     if (data == '\n' || data == '\r') {
  3433   000E0E  0E0A               	movlw	10
  3434   000E10  180D               	xorwf	putch@data^0,w,c
  3435   000E12  B4D8               	btfsc	status,2,c
  3436   000E14  EF0E  F007         	goto	u901
  3437   000E18  EF10  F007         	goto	u900
  3438   000E1C                     u901:
  3439   000E1C  EF19  F007         	goto	l152
  3440   000E20                     u900:
  3441   000E20  0E0D               	movlw	13
  3442   000E22  180D               	xorwf	putch@data^0,w,c
  3443   000E24  A4D8               	btfss	status,2,c
  3444   000E26  EF17  F007         	goto	u911
  3445   000E2A  EF19  F007         	goto	u910
  3446   000E2E                     u911:
  3447   000E2E  EF2D  F007         	goto	l159
  3448   000E32                     u910:
  3449   000E32                     l152:
  3450   000E32  A2AC               	btfss	172,1,c	;volatile
  3451   000E34  EF1E  F007         	goto	u921
  3452   000E38  EF20  F007         	goto	u920
  3453   000E3C                     u921:
  3454   000E3C  EF19  F007         	goto	l152
  3455   000E40                     u920:
  3456   000E40                     
  3457                           ;uart.c: 49:         TXREG = '\r';
  3458   000E40  0E0D               	movlw	13
  3459   000E42  6EAD               	movwf	173,c	;volatile
  3460   000E44                     l155:
  3461   000E44  A2AC               	btfss	172,1,c	;volatile
  3462   000E46  EF27  F007         	goto	u931
  3463   000E4A  EF29  F007         	goto	u930
  3464   000E4E                     u931:
  3465   000E4E  EF22  F007         	goto	l155
  3466   000E52                     u930:
  3467   000E52                     
  3468                           ;uart.c: 51:         TXREG = '\n';
  3469   000E52  0E0A               	movlw	10
  3470   000E54  6EAD               	movwf	173,c	;volatile
  3471                           
  3472                           ;uart.c: 52:     } else {
  3473   000E56  EF36  F007         	goto	l162
  3474   000E5A                     l159:
  3475   000E5A  A2AC               	btfss	172,1,c	;volatile
  3476   000E5C  EF32  F007         	goto	u941
  3477   000E60  EF34  F007         	goto	u940
  3478   000E64                     u941:
  3479   000E64  EF2D  F007         	goto	l159
  3480   000E68                     u940:
  3481   000E68                     
  3482                           ;uart.c: 54:         TXREG = data;
  3483   000E68  C00D  FFAD         	movff	putch@data,4013	;volatile
  3484   000E6C                     l162:
  3485   000E6C  0012               	return		;funcret
  3486   000E6E                     __end_of_putch:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _strtok *****************
  3490 ;; Defined at:
  3491 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strtok.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  s               1   22[COMRAM] PTR unsigned char 
  3494 ;;		 -> NULL(0), ParsingData@input(100), 
  3495 ;;  sep             2   23[COMRAM] PTR const unsigned char 
  3496 ;;		 -> STR_6(2), STR_5(2), STR_4(2), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1   22[COMRAM] PTR unsigned char 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3508 ;;      Params:         3       0       0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0
  3511 ;;      Totals:         3       0       0       0       0       0       0
  3512 ;;Total ram usage:        3 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 7
  3515 ;; This function calls:
  3516 ;;		_strcspn
  3517 ;;		_strspn
  3518 ;; This function is called by:
  3519 ;;		_ParsingData
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text12
  3524   000B04                     __ptext12:
  3525                           	callstack 0
  3526   000B04                     _strtok:
  3527                           	callstack 22
  3528   000B04  5017               	movf	strtok@s^0,w,c
  3529   000B06  A4D8               	btfss	status,2,c
  3530   000B08  EF88  F005         	goto	u1241
  3531   000B0C  EF8A  F005         	goto	u1240
  3532   000B10                     u1241:
  3533   000B10  EF97  F005         	goto	l2114
  3534   000B14                     u1240:
  3535   000B14  C02F  F017         	movff	strtok@p,strtok@s
  3536   000B18  5017               	movf	strtok@s^0,w,c
  3537   000B1A  A4D8               	btfss	status,2,c
  3538   000B1C  EF92  F005         	goto	u1251
  3539   000B20  EF94  F005         	goto	u1250
  3540   000B24                     u1251:
  3541   000B24  EF97  F005         	goto	l2114
  3542   000B28                     u1250:
  3543   000B28  0E00               	movlw	0
  3544   000B2A  EFD0  F005         	goto	l1117
  3545   000B2E                     l2114:
  3546   000B2E  C017  F011         	movff	strtok@s,strspn@s
  3547   000B32  C018  F012         	movff	strtok@sep,strspn@c
  3548   000B36  C019  F013         	movff	strtok@sep+1,strspn@c+1
  3549   000B3A  EC68  F007         	call	_strspn	;wreg free
  3550   000B3E  5011               	movf	?_strspn^0,w,c
  3551   000B40  2617               	addwf	strtok@s^0,f,c
  3552   000B42  5017               	movf	strtok@s^0,w,c
  3553   000B44  6ED9               	movwf	fsr2l,c
  3554   000B46  6ADA               	clrf	fsr2h,c
  3555   000B48  50DF               	movf	indf2,w,c
  3556   000B4A  A4D8               	btfss	status,2,c
  3557   000B4C  EFAA  F005         	goto	u1261
  3558   000B50  EFAC  F005         	goto	u1260
  3559   000B54                     u1261:
  3560   000B54  EFB1  F005         	goto	l2122
  3561   000B58                     u1260:
  3562   000B58  0E00               	movlw	0
  3563   000B5A  6E2F               	movwf	strtok@p^0,c
  3564   000B5C  502F               	movf	strtok@p^0,w,c
  3565   000B5E  EFD0  F005         	goto	l1117
  3566   000B62                     l2122:
  3567   000B62  C017  F011         	movff	strtok@s,strcspn@s
  3568   000B66  C018  F012         	movff	strtok@sep,strcspn@c
  3569   000B6A  C019  F013         	movff	strtok@sep+1,strcspn@c+1
  3570   000B6E  EC98  F007         	call	_strcspn	;wreg free
  3571   000B72  5017               	movf	strtok@s^0,w,c
  3572   000B74  2411               	addwf	?_strcspn^0,w,c
  3573   000B76  6E2F               	movwf	strtok@p^0,c
  3574   000B78  502F               	movf	strtok@p^0,w,c
  3575   000B7A  6ED9               	movwf	fsr2l,c
  3576   000B7C  6ADA               	clrf	fsr2h,c
  3577   000B7E  50DF               	movf	indf2,w,c
  3578   000B80  B4D8               	btfsc	status,2,c
  3579   000B82  EFC5  F005         	goto	u1271
  3580   000B86  EFC7  F005         	goto	u1270
  3581   000B8A                     u1271:
  3582   000B8A  EFCE  F005         	goto	l1119
  3583   000B8E                     u1270:
  3584   000B8E  502F               	movf	strtok@p^0,w,c
  3585   000B90  6ED9               	movwf	fsr2l,c
  3586   000B92  6ADA               	clrf	fsr2h,c
  3587   000B94  6ADF               	clrf	indf2,c
  3588   000B96  2A2F               	incf	strtok@p^0,f,c
  3589   000B98  EFCF  F005         	goto	l2130
  3590   000B9C                     l1119:
  3591   000B9C  6A2F               	clrf	strtok@p^0,c
  3592   000B9E                     l2130:
  3593   000B9E  5017               	movf	strtok@s^0,w,c
  3594   000BA0                     l1117:
  3595   000BA0  0012               	return		;funcret
  3596   000BA2                     __end_of_strtok:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _strspn *****************
  3600 ;; Defined at:
  3601 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strspn.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  s               1   16[COMRAM] PTR const unsigned char 
  3604 ;;		 -> NULL(0), ParsingData@input(100), 
  3605 ;;  c               2   17[COMRAM] PTR const unsigned char 
  3606 ;;		 -> STR_6(2), STR_5(2), STR_4(2), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  i               2   20[COMRAM] unsigned int 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2   16[COMRAM] unsigned int 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3618 ;;      Params:         3       0       0       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0       0       0
  3620 ;;      Temps:          1       0       0       0       0       0       0
  3621 ;;      Totals:         6       0       0       0       0       0       0
  3622 ;;Total ram usage:        6 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 6
  3625 ;; This function calls:
  3626 ;;		_strchr
  3627 ;; This function is called by:
  3628 ;;		_strtok
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text13
  3633   000ED0                     __ptext13:
  3634                           	callstack 0
  3635   000ED0                     _strspn:
  3636                           	callstack 22
  3637   000ED0  0E00               	movlw	0
  3638   000ED2  6E16               	movwf	(strspn@i+1)^0,c
  3639   000ED4  0E00               	movlw	0
  3640   000ED6  6E15               	movwf	strspn@i^0,c
  3641   000ED8  EF71  F007         	goto	l2018
  3642   000EDC                     l2016:
  3643   000EDC  2A11               	incf	strspn@s^0,f,c
  3644   000EDE  4A15               	infsnz	strspn@i^0,f,c
  3645   000EE0  2A16               	incf	(strspn@i+1)^0,f,c
  3646   000EE2                     l2018:
  3647   000EE2  5011               	movf	strspn@s^0,w,c
  3648   000EE4  6ED9               	movwf	fsr2l,c
  3649   000EE6  6ADA               	clrf	fsr2h,c
  3650   000EE8  50DF               	movf	indf2,w,c
  3651   000EEA  B4D8               	btfsc	status,2,c
  3652   000EEC  EF7A  F007         	goto	u1091
  3653   000EF0  EF7C  F007         	goto	u1090
  3654   000EF4                     u1091:
  3655   000EF4  EF93  F007         	goto	l1145
  3656   000EF8                     u1090:
  3657   000EF8  C012  F00D         	movff	strspn@c,strchr@s
  3658   000EFC  C013  F00E         	movff	strspn@c+1,strchr@s+1
  3659   000F00  5011               	movf	strspn@s^0,w,c
  3660   000F02  6ED9               	movwf	fsr2l,c
  3661   000F04  6ADA               	clrf	fsr2h,c
  3662   000F06  50DF               	movf	indf2,w,c
  3663   000F08  6E14               	movwf	??_strspn^0,c
  3664   000F0A  5014               	movf	??_strspn^0,w,c
  3665   000F0C  6E0F               	movwf	strchr@c^0,c
  3666   000F0E  6A10               	clrf	(strchr@c+1)^0,c
  3667   000F10  EC4A  F008         	call	_strchr	;wreg free
  3668   000F14  500D               	movf	?_strchr^0,w,c
  3669   000F16  100E               	iorwf	(?_strchr+1)^0,w,c
  3670   000F18  A4D8               	btfss	status,2,c
  3671   000F1A  EF91  F007         	goto	u1101
  3672   000F1E  EF93  F007         	goto	u1100
  3673   000F22                     u1101:
  3674   000F22  EF6E  F007         	goto	l2016
  3675   000F26                     u1100:
  3676   000F26                     l1145:
  3677   000F26  C015  F011         	movff	strspn@i,?_strspn
  3678   000F2A  C016  F012         	movff	strspn@i+1,?_strspn+1
  3679   000F2E  0012               	return		;funcret
  3680   000F30                     __end_of_strspn:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _strcspn *****************
  3684 ;; Defined at:
  3685 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcspn.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  s               1   16[COMRAM] PTR const unsigned char 
  3688 ;;		 -> NULL(0), ParsingData@input(100), 
  3689 ;;  c               2   17[COMRAM] PTR const unsigned char 
  3690 ;;		 -> STR_6(2), STR_5(2), STR_4(2), 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  i               2   20[COMRAM] unsigned int 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2   16[COMRAM] unsigned int 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3702 ;;      Params:         3       0       0       0       0       0       0
  3703 ;;      Locals:         2       0       0       0       0       0       0
  3704 ;;      Temps:          1       0       0       0       0       0       0
  3705 ;;      Totals:         6       0       0       0       0       0       0
  3706 ;;Total ram usage:        6 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 6
  3709 ;; This function calls:
  3710 ;;		_strchr
  3711 ;; This function is called by:
  3712 ;;		_strtok
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text14
  3717   000F30                     __ptext14:
  3718                           	callstack 0
  3719   000F30                     _strcspn:
  3720                           	callstack 22
  3721   000F30  0E00               	movlw	0
  3722   000F32  6E16               	movwf	(strcspn@i+1)^0,c
  3723   000F34  0E00               	movlw	0
  3724   000F36  6E15               	movwf	strcspn@i^0,c
  3725   000F38  EFA1  F007         	goto	l2026
  3726   000F3C                     l2024:
  3727   000F3C  2A11               	incf	strcspn@s^0,f,c
  3728   000F3E  4A15               	infsnz	strcspn@i^0,f,c
  3729   000F40  2A16               	incf	(strcspn@i+1)^0,f,c
  3730   000F42                     l2026:
  3731   000F42  5011               	movf	strcspn@s^0,w,c
  3732   000F44  6ED9               	movwf	fsr2l,c
  3733   000F46  6ADA               	clrf	fsr2h,c
  3734   000F48  50DF               	movf	indf2,w,c
  3735   000F4A  B4D8               	btfsc	status,2,c
  3736   000F4C  EFAA  F007         	goto	u1111
  3737   000F50  EFAC  F007         	goto	u1110
  3738   000F54                     u1111:
  3739   000F54  EFC3  F007         	goto	l1129
  3740   000F58                     u1110:
  3741   000F58  C012  F00D         	movff	strcspn@c,strchr@s
  3742   000F5C  C013  F00E         	movff	strcspn@c+1,strchr@s+1
  3743   000F60  5011               	movf	strcspn@s^0,w,c
  3744   000F62  6ED9               	movwf	fsr2l,c
  3745   000F64  6ADA               	clrf	fsr2h,c
  3746   000F66  50DF               	movf	indf2,w,c
  3747   000F68  6E14               	movwf	??_strcspn^0,c
  3748   000F6A  5014               	movf	??_strcspn^0,w,c
  3749   000F6C  6E0F               	movwf	strchr@c^0,c
  3750   000F6E  6A10               	clrf	(strchr@c+1)^0,c
  3751   000F70  EC4A  F008         	call	_strchr	;wreg free
  3752   000F74  500D               	movf	?_strchr^0,w,c
  3753   000F76  100E               	iorwf	(?_strchr+1)^0,w,c
  3754   000F78  B4D8               	btfsc	status,2,c
  3755   000F7A  EFC1  F007         	goto	u1121
  3756   000F7E  EFC3  F007         	goto	u1120
  3757   000F82                     u1121:
  3758   000F82  EF9E  F007         	goto	l2024
  3759   000F86                     u1120:
  3760   000F86                     l1129:
  3761   000F86  C015  F011         	movff	strcspn@i,?_strcspn
  3762   000F8A  C016  F012         	movff	strcspn@i+1,?_strcspn+1
  3763   000F8E  0012               	return		;funcret
  3764   000F90                     __end_of_strcspn:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _strchr *****************
  3768 ;; Defined at:
  3769 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strchr.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3772 ;;		 -> STR_6(2), STR_5(2), STR_4(2), 
  3773 ;;  c               2   14[COMRAM] int 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2   12[COMRAM] PTR unsigned char 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3785 ;;      Params:         4       0       0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0
  3788 ;;      Totals:         4       0       0       0       0       0       0
  3789 ;;Total ram usage:        4 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 5
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_strcspn
  3796 ;;		_strspn
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text15
  3801   001094                     __ptext15:
  3802                           	callstack 0
  3803   001094                     _strchr:
  3804                           	callstack 22
  3805   001094                     l1133:
  3806   001094  C00D  FFF6         	movff	strchr@s,tblptrl
  3807   001098  C00E  FFF7         	movff	strchr@s+1,tblptrh
  3808   00109C                     	if	0	;tblptru may be non-zero
  3809   00109C                     	endif
  3810   00109C                     	if	0	;tblptru may be non-zero
  3811   00109C                     	endif
  3812   00109C  0008               	tblrd		*
  3813   00109E  50F5               	movf	tablat,w,c
  3814   0010A0  180F               	xorwf	strchr@c^0,w,c
  3815   0010A2  A4D8               	btfss	status,2,c
  3816   0010A4  EF56  F008         	goto	u871
  3817   0010A8  EF58  F008         	goto	u870
  3818   0010AC                     u871:
  3819   0010AC  EF5E  F008         	goto	l1882
  3820   0010B0                     u870:
  3821   0010B0  C00D  F00D         	movff	strchr@s,?_strchr
  3822   0010B4  C00E  F00E         	movff	strchr@s+1,?_strchr+1
  3823   0010B8  EF72  F008         	goto	l1135
  3824   0010BC                     l1882:
  3825   0010BC  C00D  FFF6         	movff	strchr@s,tblptrl
  3826   0010C0  C00E  FFF7         	movff	strchr@s+1,tblptrh
  3827   0010C4  4A0D               	infsnz	strchr@s^0,f,c
  3828   0010C6  2A0E               	incf	(strchr@s+1)^0,f,c
  3829   0010C8                     	if	0	;tblptru may be non-zero
  3830   0010C8                     	endif
  3831   0010C8                     	if	0	;tblptru may be non-zero
  3832   0010C8                     	endif
  3833   0010C8  0008               	tblrd		*
  3834   0010CA  50F5               	movf	tablat,w,c
  3835   0010CC  0900               	iorlw	0
  3836   0010CE  A4D8               	btfss	status,2,c
  3837   0010D0  EF6C  F008         	goto	u881
  3838   0010D4  EF6E  F008         	goto	u880
  3839   0010D8                     u881:
  3840   0010D8  EF4A  F008         	goto	l1133
  3841   0010DC                     u880:
  3842   0010DC  0E00               	movlw	0
  3843   0010DE  6E0D               	movwf	?_strchr^0,c
  3844   0010E0  0E00               	movlw	0
  3845   0010E2  6E0E               	movwf	(?_strchr+1)^0,c
  3846   0010E4                     l1135:
  3847   0010E4  0012               	return		;funcret
  3848   0010E6                     __end_of_strchr:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _atoi *****************
  3852 ;; Defined at:
  3853 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atoi.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  s               1   12[COMRAM] PTR const unsigned char 
  3856 ;;		 -> NULL(0), ParsingData@input(100), 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  n               2   18[COMRAM] int 
  3859 ;;  neg             1   17[COMRAM] _Bool 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2   12[COMRAM] int 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3869 ;;      Params:         2       0       0       0       0       0       0
  3870 ;;      Locals:         3       0       0       0       0       0       0
  3871 ;;      Temps:          3       0       0       0       0       0       0
  3872 ;;      Totals:         8       0       0       0       0       0       0
  3873 ;;Total ram usage:        8 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 5
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_ParsingData
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text16
  3884   000540                     __ptext16:
  3885                           	callstack 0
  3886   000540                     _atoi:
  3887                           	callstack 24
  3888   000540  0E00               	movlw	0
  3889   000542  6E14               	movwf	(atoi@n+1)^0,c
  3890   000544  0E00               	movlw	0
  3891   000546  6E13               	movwf	atoi@n^0,c
  3892   000548  6A12               	clrf	atoi@neg^0,c
  3893   00054A  EFA8  F002         	goto	l2140
  3894   00054E                     l2138:
  3895   00054E  2A0D               	incf	atoi@s^0,f,c
  3896   000550                     l2140:
  3897   000550  500D               	movf	atoi@s^0,w,c
  3898   000552  6ED9               	movwf	fsr2l,c
  3899   000554  6ADA               	clrf	fsr2h,c
  3900   000556  0E20               	movlw	32
  3901   000558  18DE               	xorwf	postinc2,w,c
  3902   00055A  B4D8               	btfsc	status,2,c
  3903   00055C  EFB2  F002         	goto	u1281
  3904   000560  EFB4  F002         	goto	u1280
  3905   000564                     u1281:
  3906   000564  EFA7  F002         	goto	l2138
  3907   000568                     u1280:
  3908   000568  500D               	movf	atoi@s^0,w,c
  3909   00056A  6ED9               	movwf	fsr2l,c
  3910   00056C  6ADA               	clrf	fsr2h,c
  3911   00056E  50DF               	movf	indf2,w,c
  3912   000570  6E0F               	movwf	??_atoi^0,c
  3913   000572  0EF7               	movlw	247
  3914   000574  260F               	addwf	??_atoi^0,f,c
  3915   000576  0E04               	movlw	4
  3916   000578  640F               	cpfsgt	??_atoi^0,c
  3917   00057A  EFC1  F002         	goto	u1291
  3918   00057E  EFC3  F002         	goto	u1290
  3919   000582                     u1291:
  3920   000582  EFA7  F002         	goto	l2138
  3921   000586                     u1290:
  3922   000586  500D               	movf	atoi@s^0,w,c
  3923   000588  6ED9               	movwf	fsr2l,c
  3924   00058A  6ADA               	clrf	fsr2h,c
  3925   00058C  0E2D               	movlw	45
  3926   00058E  18DE               	xorwf	postinc2,w,c
  3927   000590  A4D8               	btfss	status,2,c
  3928   000592  EFCD  F002         	goto	u1301
  3929   000596  EFCF  F002         	goto	u1300
  3930   00059A                     u1301:
  3931   00059A  EFD4  F002         	goto	l2150
  3932   00059E                     u1300:
  3933   00059E  0E01               	movlw	1
  3934   0005A0  6E12               	movwf	atoi@neg^0,c
  3935   0005A2                     l2148:
  3936   0005A2  2A0D               	incf	atoi@s^0,f,c
  3937   0005A4  EFFC  F002         	goto	l2158
  3938   0005A8                     l2150:
  3939   0005A8  500D               	movf	atoi@s^0,w,c
  3940   0005AA  6ED9               	movwf	fsr2l,c
  3941   0005AC  6ADA               	clrf	fsr2h,c
  3942   0005AE  0E2B               	movlw	43
  3943   0005B0  18DE               	xorwf	postinc2,w,c
  3944   0005B2  A4D8               	btfss	status,2,c
  3945   0005B4  EFDE  F002         	goto	u1311
  3946   0005B8  EFE0  F002         	goto	u1310
  3947   0005BC                     u1311:
  3948   0005BC  EFFC  F002         	goto	l2158
  3949   0005C0                     u1310:
  3950   0005C0  EFD1  F002         	goto	l2148
  3951   0005C4                     l2154:
  3952   0005C4  0E0A               	movlw	10
  3953   0005C6  0213               	mulwf	atoi@n^0,c
  3954   0005C8  CFF3 F00F          	movff	prodl,??_atoi
  3955   0005CC  CFF4 F010          	movff	prodh,??_atoi+1
  3956   0005D0  0214               	mulwf	(atoi@n+1)^0,c
  3957   0005D2  50F3               	movf	prodl,w,c
  3958   0005D4  2610               	addwf	(??_atoi+1)^0,f,c
  3959   0005D6  500D               	movf	atoi@s^0,w,c
  3960   0005D8  6ED9               	movwf	fsr2l,c
  3961   0005DA  6ADA               	clrf	fsr2h,c
  3962   0005DC  50DF               	movf	indf2,w,c
  3963   0005DE  6E11               	movwf	(??_atoi+2)^0,c
  3964   0005E0  5011               	movf	(??_atoi+2)^0,w,c
  3965   0005E2  5E0F               	subwf	??_atoi^0,f,c
  3966   0005E4  0E00               	movlw	0
  3967   0005E6  5A10               	subwfb	(??_atoi+1)^0,f,c
  3968   0005E8  0E30               	movlw	48
  3969   0005EA  240F               	addwf	??_atoi^0,w,c
  3970   0005EC  6E13               	movwf	atoi@n^0,c
  3971   0005EE  0E00               	movlw	0
  3972   0005F0  2010               	addwfc	(??_atoi+1)^0,w,c
  3973   0005F2  6E14               	movwf	(atoi@n+1)^0,c
  3974   0005F4  EFD1  F002         	goto	l2148
  3975   0005F8                     l2158:
  3976   0005F8  500D               	movf	atoi@s^0,w,c
  3977   0005FA  6ED9               	movwf	fsr2l,c
  3978   0005FC  6ADA               	clrf	fsr2h,c
  3979   0005FE  50DF               	movf	indf2,w,c
  3980   000600  6E0F               	movwf	??_atoi^0,c
  3981   000602  0ED0               	movlw	208
  3982   000604  260F               	addwf	??_atoi^0,f,c
  3983   000606  0E09               	movlw	9
  3984   000608  640F               	cpfsgt	??_atoi^0,c
  3985   00060A  EF09  F003         	goto	u1321
  3986   00060E  EF0B  F003         	goto	u1320
  3987   000612                     u1321:
  3988   000612  EFE2  F002         	goto	l2154
  3989   000616                     u1320:
  3990   000616  5012               	movf	atoi@neg^0,w,c
  3991   000618  A4D8               	btfss	status,2,c
  3992   00061A  EF11  F003         	goto	u1331
  3993   00061E  EF13  F003         	goto	u1330
  3994   000622                     u1331:
  3995   000622  EF21  F003         	goto	l1077
  3996   000626                     u1330:
  3997   000626  C013  F00F         	movff	atoi@n,??_atoi
  3998   00062A  C014  F010         	movff	atoi@n+1,??_atoi+1
  3999   00062E  1E0F               	comf	??_atoi^0,f,c
  4000   000630  1E10               	comf	(??_atoi+1)^0,f,c
  4001   000632  4A0F               	infsnz	??_atoi^0,f,c
  4002   000634  2A10               	incf	(??_atoi+1)^0,f,c
  4003   000636  C00F  F00D         	movff	??_atoi,?_atoi
  4004   00063A  C010  F00E         	movff	??_atoi+1,?_atoi+1
  4005   00063E  EF25  F003         	goto	l1080
  4006   000642                     l1077:
  4007   000642  C013  F00D         	movff	atoi@n,?_atoi
  4008   000646  C014  F00E         	movff	atoi@n+1,?_atoi+1
  4009   00064A                     l1080:
  4010   00064A  0012               	return		;funcret
  4011   00064C                     __end_of_atoi:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _OLED_PrintNumber *****************
  4015 ;; Defined at:
  4016 ;;		line 139 in file "oled.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  startPage       1    wreg     const unsigned char 
  4019 ;;  endPage         1   34[COMRAM] const unsigned char 
  4020 ;;  startColumn     1   35[COMRAM] const unsigned char 
  4021 ;;  endColumn       1   36[COMRAM] const unsigned char 
  4022 ;;  str             2   37[COMRAM] PTR const unsigned char 
  4023 ;;		 -> main@mm(100), main@hh(100), main@tmp(100), 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  startPage       1   40[COMRAM] const unsigned char 
  4026 ;;  column          1   41[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4036 ;;      Params:         5       0       0       0       0       0       0
  4037 ;;      Locals:         2       0       0       0       0       0       0
  4038 ;;      Temps:          1       0       0       0       0       0       0
  4039 ;;      Totals:         8       0       0       0       0       0       0
  4040 ;;Total ram usage:        8 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 10
  4043 ;; This function calls:
  4044 ;;		_OLED_PrintChar
  4045 ;; This function is called by:
  4046 ;;		_main
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text17
  4051   000CBE                     __ptext17:
  4052                           	callstack 0
  4053   000CBE                     _OLED_PrintNumber:
  4054                           	callstack 20
  4055                           
  4056                           ;incstack = 0
  4057                           ;OLED_PrintNumber@startPage stored from wreg
  4058   000CBE  6E29               	movwf	OLED_PrintNumber@startPage^0,c
  4059   000CC0                     
  4060                           ;oled.c: 140:     uint8_t column = startColumn;
  4061   000CC0  C024  F02A         	movff	OLED_PrintNumber@startColumn,OLED_PrintNumber@column
  4062                           
  4063                           ;oled.c: 141:     while (*str) {
  4064   000CC4  EF92  F006         	goto	l2414
  4065   000CC8                     l2400:
  4066                           
  4067                           ;oled.c: 142:         OLED_PrintChar(startPage, endPage, column, endColumn, *str);
  4068   000CC8  C023  F01D         	movff	OLED_PrintNumber@endPage,OLED_PrintChar@endPage
  4069   000CCC  C02A  F01E         	movff	OLED_PrintNumber@column,OLED_PrintChar@startColumn
  4070   000CD0  C025  F01F         	movff	OLED_PrintNumber@endColumn,OLED_PrintChar@endColumn
  4071   000CD4  C026  FFD9         	movff	OLED_PrintNumber@str,fsr2l
  4072   000CD8  C027  FFDA         	movff	OLED_PrintNumber@str+1,fsr2h
  4073   000CDC  50DF               	movf	indf2,w,c
  4074   000CDE  6E20               	movwf	OLED_PrintChar@c^0,c
  4075   000CE0  5029               	movf	OLED_PrintNumber@startPage^0,w,c
  4076   000CE2  EC16  F002         	call	_OLED_PrintChar
  4077   000CE6                     
  4078                           ;oled.c: 143:         if(*str == '.'){
  4079   000CE6  C026  FFD9         	movff	OLED_PrintNumber@str,fsr2l
  4080   000CEA  C027  FFDA         	movff	OLED_PrintNumber@str+1,fsr2h
  4081   000CEE  0E2E               	movlw	46
  4082   000CF0  18DE               	xorwf	postinc2,w,c
  4083   000CF2  A4D8               	btfss	status,2,c
  4084   000CF4  EF7E  F006         	goto	u1481
  4085   000CF8  EF80  F006         	goto	u1480
  4086   000CFC                     u1481:
  4087   000CFC  EF84  F006         	goto	l2406
  4088   000D00                     u1480:
  4089   000D00                     
  4090                           ;oled.c: 144:             column += 4;
  4091   000D00  0E04               	movlw	4
  4092   000D02  262A               	addwf	OLED_PrintNumber@column^0,f,c
  4093                           
  4094                           ;oled.c: 145:         }
  4095   000D04  EF86  F006         	goto	l2408
  4096   000D08                     l2406:
  4097                           
  4098                           ;oled.c: 147:             column += 14;
  4099   000D08  0E0E               	movlw	14
  4100   000D0A  262A               	addwf	OLED_PrintNumber@column^0,f,c
  4101   000D0C                     l2408:
  4102                           
  4103                           ;oled.c: 149:         str++;
  4104   000D0C  4A26               	infsnz	OLED_PrintNumber@str^0,f,c
  4105   000D0E  2A27               	incf	(OLED_PrintNumber@str+1)^0,f,c
  4106   000D10                     
  4107                           ;oled.c: 150:         if (column > 127) break;
  4108   000D10  0E7F               	movlw	127
  4109   000D12  642A               	cpfsgt	OLED_PrintNumber@column^0,c
  4110   000D14  EF8E  F006         	goto	u1491
  4111   000D18  EF90  F006         	goto	u1490
  4112   000D1C                     u1491:
  4113   000D1C  EF92  F006         	goto	l2414
  4114   000D20                     u1490:
  4115   000D20  EF9E  F006         	goto	l390
  4116   000D24                     l2414:
  4117                           
  4118                           ;oled.c: 141:     while (*str) {
  4119   000D24  C026  FFD9         	movff	OLED_PrintNumber@str,fsr2l
  4120   000D28  C027  FFDA         	movff	OLED_PrintNumber@str+1,fsr2h
  4121   000D2C  50DF               	movf	indf2,w,c
  4122   000D2E  A4D8               	btfss	status,2,c
  4123   000D30  EF9C  F006         	goto	u1501
  4124   000D34  EF9E  F006         	goto	u1500
  4125   000D38                     u1501:
  4126   000D38  EF64  F006         	goto	l2400
  4127   000D3C                     u1500:
  4128   000D3C                     l390:
  4129   000D3C  0012               	return		;funcret
  4130   000D3E                     __end_of_OLED_PrintNumber:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _OLED_PrintChar *****************
  4134 ;; Defined at:
  4135 ;;		line 119 in file "oled.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  startPage       1    wreg     const unsigned char 
  4138 ;;  endPage         1   28[COMRAM] const unsigned char 
  4139 ;;  startColumn     1   29[COMRAM] const unsigned char 
  4140 ;;  endColumn       1   30[COMRAM] const unsigned char 
  4141 ;;  c               1   31[COMRAM] unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  startPage       1   33[COMRAM] const unsigned char 
  4144 ;;  which_to_pri    1   32[COMRAM] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4154 ;;      Params:         4       0       0       0       0       0       0
  4155 ;;      Locals:         2       0       0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0
  4157 ;;      Totals:         6       0       0       0       0       0       0
  4158 ;;Total ram usage:        6 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 9
  4161 ;; This function calls:
  4162 ;;		_OLED_Print
  4163 ;; This function is called by:
  4164 ;;		_main
  4165 ;;		_OLED_PrintNumber
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text18
  4170   00042C                     __ptext18:
  4171                           	callstack 0
  4172   00042C                     _OLED_PrintChar:
  4173                           	callstack 20
  4174                           
  4175                           ;incstack = 0
  4176                           ;OLED_PrintChar@startPage stored from wreg
  4177   00042C  6E22               	movwf	OLED_PrintChar@startPage^0,c
  4178   00042E                     
  4179                           ;oled.c: 120:     if(c == '.'){
  4180   00042E  0E2E               	movlw	46
  4181   000430  1820               	xorwf	OLED_PrintChar@c^0,w,c
  4182   000432  A4D8               	btfss	status,2,c
  4183   000434  EF1E  F002         	goto	u1191
  4184   000438  EF20  F002         	goto	u1190
  4185   00043C                     u1191:
  4186   00043C  EF33  F002         	goto	l2080
  4187   000440                     u1190:
  4188   000440                     
  4189                           ;oled.c: 121:         OLED_Print(startPage, endPage, startColumn, endColumn, dot, sizeof
      +                          (dot));
  4190   000440  C01D  F013         	movff	OLED_PrintChar@endPage,OLED_Print@endPage
  4191   000444  C01E  F014         	movff	OLED_PrintChar@startColumn,OLED_Print@startColumn
  4192   000448  C01F  F015         	movff	OLED_PrintChar@endColumn,OLED_Print@endColumn
  4193   00044C  0EB7               	movlw	low _dot
  4194   00044E  6E16               	movwf	OLED_Print@bitmap^0,c
  4195   000450  0E7D               	movlw	high _dot
  4196   000452  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  4197   000454  0E00               	movlw	0
  4198   000456  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  4199   000458  0E04               	movlw	4
  4200   00045A  6E18               	movwf	OLED_Print@bitmapSize^0,c
  4201   00045C  5022               	movf	OLED_PrintChar@startPage^0,w,c
  4202   00045E  ECD4  F006         	call	_OLED_Print
  4203                           
  4204                           ;oled.c: 122:     }
  4205   000462  EF9F  F002         	goto	l381
  4206   000466                     l2080:
  4207   000466  0E62               	movlw	98
  4208   000468  1820               	xorwf	OLED_PrintChar@c^0,w,c
  4209   00046A  A4D8               	btfss	status,2,c
  4210   00046C  EF3A  F002         	goto	u1201
  4211   000470  EF3C  F002         	goto	u1200
  4212   000474                     u1201:
  4213   000474  EF4F  F002         	goto	l2084
  4214   000478                     u1200:
  4215   000478                     
  4216                           ;oled.c: 124:         OLED_Print(startPage, endPage, startColumn, endColumn, b, sizeof(b
      +                          ));
  4217   000478  C01D  F013         	movff	OLED_PrintChar@endPage,OLED_Print@endPage
  4218   00047C  C01E  F014         	movff	OLED_PrintChar@startColumn,OLED_Print@startColumn
  4219   000480  C01F  F015         	movff	OLED_PrintChar@endColumn,OLED_Print@endColumn
  4220   000484  0E97               	movlw	low _b
  4221   000486  6E16               	movwf	OLED_Print@bitmap^0,c
  4222   000488  0E7D               	movlw	high _b
  4223   00048A  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  4224   00048C  0E00               	movlw	0
  4225   00048E  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  4226   000490  0E10               	movlw	16
  4227   000492  6E18               	movwf	OLED_Print@bitmapSize^0,c
  4228   000494  5022               	movf	OLED_PrintChar@startPage^0,w,c
  4229   000496  ECD4  F006         	call	_OLED_Print
  4230                           
  4231                           ;oled.c: 125:     }
  4232   00049A  EF9F  F002         	goto	l381
  4233   00049E                     l2084:
  4234   00049E  0E70               	movlw	112
  4235   0004A0  1820               	xorwf	OLED_PrintChar@c^0,w,c
  4236   0004A2  A4D8               	btfss	status,2,c
  4237   0004A4  EF56  F002         	goto	u1211
  4238   0004A8  EF58  F002         	goto	u1210
  4239   0004AC                     u1211:
  4240   0004AC  EF6B  F002         	goto	l2088
  4241   0004B0                     u1210:
  4242   0004B0                     
  4243                           ;oled.c: 127:         OLED_Print(startPage, endPage, startColumn, endColumn, p, sizeof(p
      +                          ));
  4244   0004B0  C01D  F013         	movff	OLED_PrintChar@endPage,OLED_Print@endPage
  4245   0004B4  C01E  F014         	movff	OLED_PrintChar@startColumn,OLED_Print@startColumn
  4246   0004B8  C01F  F015         	movff	OLED_PrintChar@endColumn,OLED_Print@endColumn
  4247   0004BC  0E87               	movlw	low _p
  4248   0004BE  6E16               	movwf	OLED_Print@bitmap^0,c
  4249   0004C0  0E7D               	movlw	high _p
  4250   0004C2  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  4251   0004C4  0E00               	movlw	0
  4252   0004C6  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  4253   0004C8  0E10               	movlw	16
  4254   0004CA  6E18               	movwf	OLED_Print@bitmapSize^0,c
  4255   0004CC  5022               	movf	OLED_PrintChar@startPage^0,w,c
  4256   0004CE  ECD4  F006         	call	_OLED_Print
  4257                           
  4258                           ;oled.c: 128:     }
  4259   0004D2  EF9F  F002         	goto	l381
  4260   0004D6                     l2088:
  4261   0004D6  0E6D               	movlw	109
  4262   0004D8  1820               	xorwf	OLED_PrintChar@c^0,w,c
  4263   0004DA  A4D8               	btfss	status,2,c
  4264   0004DC  EF72  F002         	goto	u1221
  4265   0004E0  EF74  F002         	goto	u1220
  4266   0004E4                     u1221:
  4267   0004E4  EF87  F002         	goto	l2092
  4268   0004E8                     u1220:
  4269   0004E8                     
  4270                           ;oled.c: 130:         OLED_Print(startPage, endPage, startColumn, endColumn, m, sizeof(m
      +                          ));
  4271   0004E8  C01D  F013         	movff	OLED_PrintChar@endPage,OLED_Print@endPage
  4272   0004EC  C01E  F014         	movff	OLED_PrintChar@startColumn,OLED_Print@startColumn
  4273   0004F0  C01F  F015         	movff	OLED_PrintChar@endColumn,OLED_Print@endColumn
  4274   0004F4  0E77               	movlw	low _m
  4275   0004F6  6E16               	movwf	OLED_Print@bitmap^0,c
  4276   0004F8  0E7D               	movlw	high _m
  4277   0004FA  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  4278   0004FC  0E00               	movlw	0
  4279   0004FE  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  4280   000500  0E10               	movlw	16
  4281   000502  6E18               	movwf	OLED_Print@bitmapSize^0,c
  4282   000504  5022               	movf	OLED_PrintChar@startPage^0,w,c
  4283   000506  ECD4  F006         	call	_OLED_Print
  4284                           
  4285                           ;oled.c: 131:     }
  4286   00050A  EF9F  F002         	goto	l381
  4287   00050E                     l2092:
  4288                           
  4289                           ;oled.c: 133:         uint8_t which_to_print = c - '0';
  4290   00050E  5020               	movf	OLED_PrintChar@c^0,w,c
  4291   000510  0FD0               	addlw	208
  4292   000512  6E21               	movwf	OLED_PrintChar@which_to_print^0,c
  4293   000514                     
  4294                           ;oled.c: 134:         OLED_Print(startPage, endPage, startColumn, endColumn, number[whic
      +                          h_to_print], sizeof(number[which_to_print]));
  4295   000514  C01D  F013         	movff	OLED_PrintChar@endPage,OLED_Print@endPage
  4296   000518  C01E  F014         	movff	OLED_PrintChar@startColumn,OLED_Print@startColumn
  4297   00051C  C01F  F015         	movff	OLED_PrintChar@endColumn,OLED_Print@endColumn
  4298   000520  5021               	movf	OLED_PrintChar@which_to_print^0,w,c
  4299   000522  0D18               	mullw	24
  4300   000524  0EBD               	movlw	low _number
  4301   000526  24F3               	addwf	243,w,c
  4302   000528  6E16               	movwf	OLED_Print@bitmap^0,c
  4303   00052A  0E7B               	movlw	high _number
  4304   00052C  20F4               	addwfc	prodh,w,c
  4305   00052E  6E17               	movwf	(OLED_Print@bitmap+1)^0,c
  4306   000530  0E00               	movlw	0
  4307   000532  6E19               	movwf	(OLED_Print@bitmapSize+1)^0,c
  4308   000534  0E18               	movlw	24
  4309   000536  6E18               	movwf	OLED_Print@bitmapSize^0,c
  4310   000538  5022               	movf	OLED_PrintChar@startPage^0,w,c
  4311   00053A  ECD4  F006         	call	_OLED_Print
  4312   00053E                     l381:
  4313   00053E  0012               	return		;funcret
  4314   000540                     __end_of_OLED_PrintChar:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function _OLED_Print *****************
  4318 ;; Defined at:
  4319 ;;		line 105 in file "oled.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  startPage       1    wreg     const unsigned char 
  4322 ;;  endPage         1   18[COMRAM] const unsigned char 
  4323 ;;  startColumn     1   19[COMRAM] const unsigned char 
  4324 ;;  endColumn       1   20[COMRAM] const unsigned char 
  4325 ;;  bitmap          2   21[COMRAM] PTR const unsigned char 
  4326 ;;		 -> number(240), m(16), p(16), b(16), 
  4327 ;;		 -> dot(4), heart2(32), heart1(32), foots(42), 
  4328 ;;		 -> temp(32), thermometer(32), dots(16), clock(32), 
  4329 ;;  bitmapSize      2   23[COMRAM] unsigned short 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  startPage       1   25[COMRAM] const unsigned char 
  4332 ;;  cnt             2   26[COMRAM] unsigned short 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4342 ;;      Params:         7       0       0       0       0       0       0
  4343 ;;      Locals:         3       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0
  4345 ;;      Totals:        10       0       0       0       0       0       0
  4346 ;;Total ram usage:       10 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 8
  4349 ;; This function calls:
  4350 ;;		_I2C_Start
  4351 ;;		_I2C_Stop
  4352 ;;		_I2C_Write
  4353 ;;		_OLED_SetPageAndColumnAddress
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;;		_OLED_PrintChar
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text19
  4361   000DA8                     __ptext19:
  4362                           	callstack 0
  4363   000DA8                     _OLED_Print:
  4364                           	callstack 20
  4365                           
  4366                           ;incstack = 0
  4367                           ;OLED_Print@startPage stored from wreg
  4368   000DA8  6E1A               	movwf	OLED_Print@startPage^0,c
  4369   000DAA                     
  4370                           ;oled.c: 106:     OLED_SetPageAndColumnAddress(startPage, endPage, startColumn, endColum
      +                          n);
  4371   000DAA  C013  F00F         	movff	OLED_Print@endPage,OLED_SetPageAndColumnAddress@endPage
  4372   000DAE  C014  F010         	movff	OLED_Print@startColumn,OLED_SetPageAndColumnAddress@startColumn
  4373   000DB2  C015  F011         	movff	OLED_Print@endColumn,OLED_SetPageAndColumnAddress@endColumn
  4374   000DB6  501A               	movf	OLED_Print@startPage^0,w,c
  4375   000DB8  EC30  F009         	call	_OLED_SetPageAndColumnAddress
  4376                           
  4377                           ;oled.c: 108:     I2C_Start();
  4378   000DBC  ECCC  F009         	call	_I2C_Start	;wreg free
  4379                           
  4380                           ;oled.c: 109:     I2C_Write(0x3C << 1);
  4381   000DC0  0E78               	movlw	120
  4382   000DC2  ECC1  F009         	call	_I2C_Write
  4383                           
  4384                           ;oled.c: 110:     I2C_Write((uint8_t)0x40);
  4385   000DC6  0E40               	movlw	64
  4386   000DC8  ECC1  F009         	call	_I2C_Write
  4387   000DCC                     
  4388                           ;oled.c: 111:     for(uint16_t cnt=0; cnt<bitmapSize; cnt++) {
  4389   000DCC  0E00               	movlw	0
  4390   000DCE  6E1C               	movwf	(OLED_Print@cnt+1)^0,c
  4391   000DD0  0E00               	movlw	0
  4392   000DD2  6E1B               	movwf	OLED_Print@cnt^0,c
  4393   000DD4  EFF8  F006         	goto	l1898
  4394   000DD8                     l1892:
  4395                           
  4396                           ;oled.c: 112:         I2C_Write(*bitmap);
  4397   000DD8  C016  FFF6         	movff	OLED_Print@bitmap,tblptrl
  4398   000DDC  C017  FFF7         	movff	OLED_Print@bitmap+1,tblptrh
  4399   000DE0                     	if	0	;tblptru may be non-zero
  4400   000DE0                     	endif
  4401   000DE0                     	if	0	;tblptru may be non-zero
  4402   000DE0                     	endif
  4403   000DE0  0008               	tblrd		*
  4404   000DE2  50F5               	movf	tablat,w,c
  4405   000DE4  ECC1  F009         	call	_I2C_Write
  4406   000DE8                     
  4407                           ;oled.c: 113:         bitmap++;
  4408   000DE8  4A16               	infsnz	OLED_Print@bitmap^0,f,c
  4409   000DEA  2A17               	incf	(OLED_Print@bitmap+1)^0,f,c
  4410   000DEC                     
  4411                           ;oled.c: 114:     }
  4412   000DEC  4A1B               	infsnz	OLED_Print@cnt^0,f,c
  4413   000DEE  2A1C               	incf	(OLED_Print@cnt+1)^0,f,c
  4414   000DF0                     l1898:
  4415   000DF0  5018               	movf	OLED_Print@bitmapSize^0,w,c
  4416   000DF2  5C1B               	subwf	OLED_Print@cnt^0,w,c
  4417   000DF4  5019               	movf	(OLED_Print@bitmapSize+1)^0,w,c
  4418   000DF6  581C               	subwfb	(OLED_Print@cnt+1)^0,w,c
  4419   000DF8  A0D8               	btfss	status,0,c
  4420   000DFA  EF01  F007         	goto	u891
  4421   000DFE  EF03  F007         	goto	u890
  4422   000E02                     u891:
  4423   000E02  EFEC  F006         	goto	l1892
  4424   000E06                     u890:
  4425   000E06                     
  4426                           ;oled.c: 115:     I2C_Stop();
  4427   000E06  ECC7  F009         	call	_I2C_Stop	;wreg free
  4428   000E0A  0012               	return		;funcret
  4429   000E0C                     __end_of_OLED_Print:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _OLED_Clear *****************
  4433 ;; Defined at:
  4434 ;;		line 92 in file "oled.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  cnt             2   18[COMRAM] unsigned short 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0, cstack
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4448 ;;      Params:         0       0       0       0       0       0       0
  4449 ;;      Locals:         2       0       0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0
  4451 ;;      Totals:         2       0       0       0       0       0       0
  4452 ;;Total ram usage:        2 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; Hardware stack levels required when called: 8
  4455 ;; This function calls:
  4456 ;;		_I2C_Start
  4457 ;;		_I2C_Stop
  4458 ;;		_I2C_Write
  4459 ;;		_OLED_SetPageAndColumnAddress
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text20
  4466   00118A                     __ptext20:
  4467                           	callstack 0
  4468   00118A                     _OLED_Clear:
  4469                           	callstack 22
  4470   00118A                     
  4471                           ;oled.c: 93:     OLED_SetPageAndColumnAddress(0x00, 0x03, 0x00, 0x7F);
  4472   00118A  0E03               	movlw	3
  4473   00118C  6E0F               	movwf	OLED_SetPageAndColumnAddress@endPage^0,c
  4474   00118E  0E00               	movlw	0
  4475   001190  6E10               	movwf	OLED_SetPageAndColumnAddress@startColumn^0,c
  4476   001192  0E7F               	movlw	127
  4477   001194  6E11               	movwf	OLED_SetPageAndColumnAddress@endColumn^0,c
  4478   001196  0E00               	movlw	0
  4479   001198  EC30  F009         	call	_OLED_SetPageAndColumnAddress
  4480                           
  4481                           ;oled.c: 95:     I2C_Start();
  4482   00119C  ECCC  F009         	call	_I2C_Start	;wreg free
  4483                           
  4484                           ;oled.c: 96:     I2C_Write(0x3C << 1);
  4485   0011A0  0E78               	movlw	120
  4486   0011A2  ECC1  F009         	call	_I2C_Write
  4487                           
  4488                           ;oled.c: 97:     I2C_Write(0x40);
  4489   0011A6  0E40               	movlw	64
  4490   0011A8  ECC1  F009         	call	_I2C_Write
  4491   0011AC                     
  4492                           ;oled.c: 98:     for(uint16_t cnt=0; cnt<512; cnt++){
  4493   0011AC  0E00               	movlw	0
  4494   0011AE  6E14               	movwf	(OLED_Clear@cnt+1)^0,c
  4495   0011B0  0E00               	movlw	0
  4496   0011B2  6E13               	movwf	OLED_Clear@cnt^0,c
  4497   0011B4                     l2368:
  4498                           
  4499                           ;oled.c: 99:         I2C_Write(0x00);
  4500   0011B4  0E00               	movlw	0
  4501   0011B6  ECC1  F009         	call	_I2C_Write
  4502   0011BA                     
  4503                           ;oled.c: 100:     }
  4504   0011BA  4A13               	infsnz	OLED_Clear@cnt^0,f,c
  4505   0011BC  2A14               	incf	(OLED_Clear@cnt+1)^0,f,c
  4506   0011BE  0E02               	movlw	2
  4507   0011C0  5C14               	subwf	(OLED_Clear@cnt+1)^0,w,c
  4508   0011C2  A0D8               	btfss	status,0,c
  4509   0011C4  EFE6  F008         	goto	u1451
  4510   0011C8  EFE8  F008         	goto	u1450
  4511   0011CC                     u1451:
  4512   0011CC  EFDA  F008         	goto	l2368
  4513   0011D0                     u1450:
  4514   0011D0                     
  4515                           ;oled.c: 101:     I2C_Stop();
  4516   0011D0  ECC7  F009         	call	_I2C_Stop	;wreg free
  4517   0011D4  0012               	return		;funcret
  4518   0011D6                     __end_of_OLED_Clear:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _OLED_SetPageAndColumnAddress *****************
  4522 ;; Defined at:
  4523 ;;		line 78 in file "oled.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  startPage       1    wreg     const unsigned char 
  4526 ;;  endPage         1   14[COMRAM] const unsigned char 
  4527 ;;  startColumn     1   15[COMRAM] const unsigned char 
  4528 ;;  endColumn       1   16[COMRAM] const unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  startPage       1   17[COMRAM] const unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4540 ;;      Params:         3       0       0       0       0       0       0
  4541 ;;      Locals:         1       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0
  4543 ;;      Totals:         4       0       0       0       0       0       0
  4544 ;;Total ram usage:        4 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 7
  4547 ;; This function calls:
  4548 ;;		_I2C_Start
  4549 ;;		_I2C_Stop
  4550 ;;		_I2C_Write
  4551 ;; This function is called by:
  4552 ;;		_OLED_Clear
  4553 ;;		_OLED_Print
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text21
  4558   001260                     __ptext21:
  4559                           	callstack 0
  4560   001260                     _OLED_SetPageAndColumnAddress:
  4561                           	callstack 20
  4562                           
  4563                           ;incstack = 0
  4564                           ;OLED_SetPageAndColumnAddress@startPage stored from wreg
  4565   001260  6E12               	movwf	OLED_SetPageAndColumnAddress@startPage^0,c
  4566   001262                     
  4567                           ;oled.c: 79:     I2C_Start();
  4568   001262  ECCC  F009         	call	_I2C_Start	;wreg free
  4569                           
  4570                           ;oled.c: 80:     I2C_Write(0x3C << 1);
  4571   001266  0E78               	movlw	120
  4572   001268  ECC1  F009         	call	_I2C_Write
  4573                           
  4574                           ;oled.c: 81:     I2C_Write(0x00);
  4575   00126C  0E00               	movlw	0
  4576   00126E  ECC1  F009         	call	_I2C_Write
  4577                           
  4578                           ;oled.c: 82:     I2C_Write(0x22);
  4579   001272  0E22               	movlw	34
  4580   001274  ECC1  F009         	call	_I2C_Write
  4581                           
  4582                           ;oled.c: 83:     I2C_Write(startPage);
  4583   001278  5012               	movf	OLED_SetPageAndColumnAddress@startPage^0,w,c
  4584   00127A  ECC1  F009         	call	_I2C_Write
  4585                           
  4586                           ;oled.c: 84:     I2C_Write(endPage);
  4587   00127E  500F               	movf	OLED_SetPageAndColumnAddress@endPage^0,w,c
  4588   001280  ECC1  F009         	call	_I2C_Write
  4589                           
  4590                           ;oled.c: 85:     I2C_Write(0x21);
  4591   001284  0E21               	movlw	33
  4592   001286  ECC1  F009         	call	_I2C_Write
  4593                           
  4594                           ;oled.c: 86:     I2C_Write(startColumn);
  4595   00128A  5010               	movf	OLED_SetPageAndColumnAddress@startColumn^0,w,c
  4596   00128C  ECC1  F009         	call	_I2C_Write
  4597                           
  4598                           ;oled.c: 87:     I2C_Write(endColumn);
  4599   001290  5011               	movf	OLED_SetPageAndColumnAddress@endColumn^0,w,c
  4600   001292  ECC1  F009         	call	_I2C_Write
  4601                           
  4602                           ;oled.c: 88:     I2C_Stop();
  4603   001296  ECC7  F009         	call	_I2C_Stop	;wreg free
  4604   00129A  0012               	return		;funcret
  4605   00129C                     __end_of_OLED_SetPageAndColumnAddress:
  4606                           	callstack 0
  4607                           
  4608 ;; *************** function _I2C_Write *****************
  4609 ;; Defined at:
  4610 ;;		line 72 in file "oled.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  data            1    wreg     unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  data            1   13[COMRAM] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4624 ;;      Params:         0       0       0       0       0       0       0
  4625 ;;      Locals:         1       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0
  4627 ;;      Totals:         1       0       0       0       0       0       0
  4628 ;;Total ram usage:        1 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 6
  4631 ;; This function calls:
  4632 ;;		_I2C_Wait
  4633 ;; This function is called by:
  4634 ;;		_OLED_Initialize
  4635 ;;		_OLED_SetPageAndColumnAddress
  4636 ;;		_OLED_Clear
  4637 ;;		_OLED_Print
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text22
  4642   001382                     __ptext22:
  4643                           	callstack 0
  4644   001382                     _I2C_Write:
  4645                           	callstack 22
  4646                           
  4647                           ;incstack = 0
  4648                           ;I2C_Write@data stored from wreg
  4649   001382  6E0E               	movwf	I2C_Write@data^0,c
  4650   001384                     
  4651                           ;oled.c: 73:     I2C_Wait();
  4652   001384  EC7B  F009         	call	_I2C_Wait	;wreg free
  4653   001388                     
  4654                           ;oled.c: 74:     SSPBUF = data;
  4655   001388  C00E  FFC9         	movff	I2C_Write@data,4041	;volatile
  4656   00138C  0012               	return		;funcret
  4657   00138E                     __end_of_I2C_Write:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _I2C_Stop *****************
  4661 ;; Defined at:
  4662 ;;		line 66 in file "oled.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4676 ;;      Params:         0       0       0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0
  4679 ;;      Totals:         0       0       0       0       0       0       0
  4680 ;;Total ram usage:        0 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 6
  4683 ;; This function calls:
  4684 ;;		_I2C_Wait
  4685 ;; This function is called by:
  4686 ;;		_OLED_Initialize
  4687 ;;		_OLED_SetPageAndColumnAddress
  4688 ;;		_OLED_Clear
  4689 ;;		_OLED_Print
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text23
  4694   00138E                     __ptext23:
  4695                           	callstack 0
  4696   00138E                     _I2C_Stop:
  4697                           	callstack 22
  4698   00138E                     
  4699                           ;oled.c: 67:     I2C_Wait();
  4700   00138E  EC7B  F009         	call	_I2C_Wait	;wreg free
  4701   001392                     
  4702                           ;oled.c: 68:     PEN = 1;
  4703   001392  84C5               	bsf	4037,2,c	;volatile
  4704   001394                     
  4705                           ;oled.c: 69:     GIE = 1;
  4706   001394  8EF2               	bsf	4082,7,c	;volatile
  4707   001396  0012               	return		;funcret
  4708   001398                     __end_of_I2C_Stop:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _I2C_Start *****************
  4712 ;; Defined at:
  4713 ;;		line 56 in file "oled.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4727 ;;      Params:         0       0       0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 6
  4734 ;; This function calls:
  4735 ;;		_I2C_Wait
  4736 ;; This function is called by:
  4737 ;;		_OLED_Initialize
  4738 ;;		_OLED_SetPageAndColumnAddress
  4739 ;;		_OLED_Clear
  4740 ;;		_OLED_Print
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text24
  4745   001398                     __ptext24:
  4746                           	callstack 0
  4747   001398                     _I2C_Start:
  4748                           	callstack 22
  4749   001398                     
  4750                           ;oled.c: 57:     GIE = 0;
  4751   001398  9EF2               	bcf	4082,7,c	;volatile
  4752   00139A                     
  4753                           ;oled.c: 58:     I2C_Wait();
  4754   00139A  EC7B  F009         	call	_I2C_Wait	;wreg free
  4755   00139E                     
  4756                           ;oled.c: 59:     SEN = 1;
  4757   00139E  80C5               	bsf	4037,0,c	;volatile
  4758   0013A0  0012               	return		;funcret
  4759   0013A2                     __end_of_I2C_Start:
  4760                           	callstack 0
  4761                           
  4762 ;; *************** function _I2C_Wait *****************
  4763 ;; Defined at:
  4764 ;;		line 62 in file "oled.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4778 ;;      Params:         0       0       0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0
  4780 ;;      Temps:          1       0       0       0       0       0       0
  4781 ;;      Totals:         1       0       0       0       0       0       0
  4782 ;;Total ram usage:        1 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 5
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_I2C_Start
  4789 ;;		_I2C_Stop
  4790 ;;		_I2C_Write
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text25
  4795   0012F6                     __ptext25:
  4796                           	callstack 0
  4797   0012F6                     _I2C_Wait:
  4798                           	callstack 22
  4799   0012F6                     l347:
  4800   0012F6  B4C7               	btfsc	199,2,c	;volatile
  4801   0012F8  EF80  F009         	goto	u851
  4802   0012FC  EF82  F009         	goto	u850
  4803   001300                     u851:
  4804   001300  EF7B  F009         	goto	l347
  4805   001304                     u850:
  4806   001304  CFC5 F00D          	movff	4037,??_I2C_Wait	;volatile
  4807   001308  0E1F               	movlw	31
  4808   00130A  160D               	andwf	??_I2C_Wait^0,f,c
  4809   00130C  A4D8               	btfss	status,2,c
  4810   00130E  EF8B  F009         	goto	u861
  4811   001312  EF8D  F009         	goto	u860
  4812   001316                     u861:
  4813   001316  EF7B  F009         	goto	l347
  4814   00131A                     u860:
  4815   00131A  0012               	return		;funcret
  4816   00131C                     __end_of_I2C_Wait:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _Get_Timer_M *****************
  4820 ;; Defined at:
  4821 ;;		line 46 in file "timer.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  str             2   30[COMRAM] PTR unsigned char 
  4824 ;;		 -> main@mm(100), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  str2          100    0[BANK0 ] unsigned char [100]
  4827 ;;  m               2  102[BANK0 ] int 
  4828 ;;  result          2  100[BANK0 ] int 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4838 ;;      Params:         2       0       0       0       0       0       0
  4839 ;;      Locals:         0     104       0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0
  4841 ;;      Totals:         2     104       0       0       0       0       0
  4842 ;;Total ram usage:      106 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 7
  4845 ;; This function calls:
  4846 ;;		___awdiv
  4847 ;;		___awmod
  4848 ;;		_itoa
  4849 ;;		_strcat
  4850 ;;		_strcpy
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text26
  4857   000BA2                     __ptext26:
  4858                           	callstack 0
  4859   000BA2                     _Get_Timer_M:
  4860                           	callstack 23
  4861   000BA2                     
  4862                           ;timer.c: 47:     int result = cnt / 42;
  4863   000BA2  C0FD  F00D         	movff	_cnt,___awdiv@dividend
  4864   000BA6  C0FE  F00E         	movff	_cnt+1,___awdiv@dividend+1
  4865   000BAA  0E00               	movlw	0
  4866   000BAC  6E10               	movwf	(___awdiv@divisor+1)^0,c
  4867   000BAE  0E2A               	movlw	42
  4868   000BB0  6E0F               	movwf	___awdiv@divisor^0,c
  4869   000BB2  ECCA  F004         	call	___awdiv	;wreg free
  4870   000BB6  C00D  F0E4         	movff	?___awdiv,Get_Timer_M@result
  4871   000BBA  C00E  F0E5         	movff	?___awdiv+1,Get_Timer_M@result+1
  4872                           
  4873                           ;timer.c: 48:     int m = result % 60;
  4874   000BBE  C0E4  F00D         	movff	Get_Timer_M@result,___awmod@dividend
  4875   000BC2  C0E5  F00E         	movff	Get_Timer_M@result+1,___awmod@dividend+1
  4876   000BC6  0E00               	movlw	0
  4877   000BC8  6E10               	movwf	(___awmod@divisor+1)^0,c
  4878   000BCA  0E3C               	movlw	60
  4879   000BCC  6E0F               	movwf	___awmod@divisor^0,c
  4880   000BCE  EC2B  F005         	call	___awmod	;wreg free
  4881   000BD2  C00D  F0E6         	movff	?___awmod,Get_Timer_M@m
  4882   000BD6  C00E  F0E7         	movff	?___awmod+1,Get_Timer_M@m+1
  4883   000BDA                     
  4884                           ;timer.c: 49:     char str2[100];;timer.c: 50:     itoa(m, str2);
  4885   000BDA  C0E6  F015         	movff	Get_Timer_M@m,itoa@n
  4886   000BDE  C0E7  F016         	movff	Get_Timer_M@m+1,itoa@n+1
  4887   000BE2  0E80               	movlw	low Get_Timer_M@str2
  4888   000BE4  6E17               	movwf	itoa@s^0,c
  4889   000BE6  6A18               	clrf	(itoa@s+1)^0,c
  4890   000BE8  EC26  F003         	call	_itoa	;wreg free
  4891   000BEC                     
  4892                           ;timer.c: 51:     if( m < 10 ) strcpy(str, "0");
  4893   000BEC  0100               	movlb	0	; () banked
  4894   000BEE  BFE7               	btfsc	(Get_Timer_M@m+1)& (0+255),7,b
  4895   000BF0  EF05  F006         	goto	u1470
  4896   000BF4  51E7               	movf	(Get_Timer_M@m+1)& (0+255),w,b
  4897   000BF6  E107               	bnz	u1471
  4898   000BF8  0E0A               	movlw	10
  4899   000BFA  5DE6               	subwf	Get_Timer_M@m& (0+255),w,b
  4900   000BFC  B0D8               	btfsc	status,0,c
  4901   000BFE  EF03  F006         	goto	u1471
  4902   000C02  EF05  F006         	goto	u1470
  4903   000C06                     u1471:
  4904   000C06  EF0F  F006         	goto	l2396
  4905   000C0A                     u1470:
  4906   000C0A                     
  4907                           ; BSR set to: 0
  4908   000C0A  C01F  F00D         	movff	Get_Timer_M@str,strcpy@dest
  4909   000C0E  C020  F00E         	movff	Get_Timer_M@str+1,strcpy@dest+1
  4910   000C12  0EBB               	movlw	low STR_7
  4911   000C14  6E0F               	movwf	strcpy@src^0,c
  4912   000C16  0E7D               	movlw	high STR_7
  4913   000C18  6E10               	movwf	(strcpy@src+1)^0,c
  4914   000C1A  ECF7  F007         	call	_strcpy	;wreg free
  4915   000C1E                     l2396:
  4916                           
  4917                           ;timer.c: 52:     strcat(str, str2);
  4918   000C1E  C01F  F00D         	movff	Get_Timer_M@str,strcat@dest
  4919   000C22  C020  F00E         	movff	Get_Timer_M@str+1,strcat@dest+1
  4920   000C26  0E80               	movlw	low Get_Timer_M@str2
  4921   000C28  6E0F               	movwf	strcat@src^0,c
  4922   000C2A  ECC8  F007         	call	_strcat	;wreg free
  4923   000C2E  0012               	return		;funcret
  4924   000C30                     __end_of_Get_Timer_M:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _Get_Timer_H *****************
  4928 ;; Defined at:
  4929 ;;		line 38 in file "timer.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  str             2   30[COMRAM] PTR unsigned char 
  4932 ;;		 -> main@hh(100), 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  str2          100    0[BANK0 ] unsigned char [100]
  4935 ;;  h               2  102[BANK0 ] int 
  4936 ;;  result          2  100[BANK0 ] int 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4946 ;;      Params:         2       0       0       0       0       0       0
  4947 ;;      Locals:         0     104       0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0
  4949 ;;      Totals:         2     104       0       0       0       0       0
  4950 ;;Total ram usage:      106 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 7
  4953 ;; This function calls:
  4954 ;;		___awdiv
  4955 ;;		_itoa
  4956 ;;		_strcat
  4957 ;;		_strcpy
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text27
  4964   000C30                     __ptext27:
  4965                           	callstack 0
  4966   000C30                     _Get_Timer_H:
  4967                           	callstack 23
  4968   000C30                     
  4969                           ;timer.c: 39:     int result = cnt / 42;
  4970   000C30  C0FD  F00D         	movff	_cnt,___awdiv@dividend
  4971   000C34  C0FE  F00E         	movff	_cnt+1,___awdiv@dividend+1
  4972   000C38  0E00               	movlw	0
  4973   000C3A  6E10               	movwf	(___awdiv@divisor+1)^0,c
  4974   000C3C  0E2A               	movlw	42
  4975   000C3E  6E0F               	movwf	___awdiv@divisor^0,c
  4976   000C40  ECCA  F004         	call	___awdiv	;wreg free
  4977   000C44  C00D  F0E4         	movff	?___awdiv,Get_Timer_H@result
  4978   000C48  C00E  F0E5         	movff	?___awdiv+1,Get_Timer_H@result+1
  4979                           
  4980                           ;timer.c: 40:     int h = result / 60;
  4981   000C4C  C0E4  F00D         	movff	Get_Timer_H@result,___awdiv@dividend
  4982   000C50  C0E5  F00E         	movff	Get_Timer_H@result+1,___awdiv@dividend+1
  4983   000C54  0E00               	movlw	0
  4984   000C56  6E10               	movwf	(___awdiv@divisor+1)^0,c
  4985   000C58  0E3C               	movlw	60
  4986   000C5A  6E0F               	movwf	___awdiv@divisor^0,c
  4987   000C5C  ECCA  F004         	call	___awdiv	;wreg free
  4988   000C60  C00D  F0E6         	movff	?___awdiv,Get_Timer_H@h
  4989   000C64  C00E  F0E7         	movff	?___awdiv+1,Get_Timer_H@h+1
  4990   000C68                     
  4991                           ;timer.c: 41:     char str2[100];;timer.c: 42:     itoa(h, str2);
  4992   000C68  C0E6  F015         	movff	Get_Timer_H@h,itoa@n
  4993   000C6C  C0E7  F016         	movff	Get_Timer_H@h+1,itoa@n+1
  4994   000C70  0E80               	movlw	low Get_Timer_H@str2
  4995   000C72  6E17               	movwf	itoa@s^0,c
  4996   000C74  6A18               	clrf	(itoa@s+1)^0,c
  4997   000C76  EC26  F003         	call	_itoa	;wreg free
  4998   000C7A                     
  4999                           ;timer.c: 43:     if( h < 10 ) strcpy(str, "0");
  5000   000C7A  0100               	movlb	0	; () banked
  5001   000C7C  BFE7               	btfsc	(Get_Timer_H@h+1)& (0+255),7,b
  5002   000C7E  EF4C  F006         	goto	u1460
  5003   000C82  51E7               	movf	(Get_Timer_H@h+1)& (0+255),w,b
  5004   000C84  E107               	bnz	u1461
  5005   000C86  0E0A               	movlw	10
  5006   000C88  5DE6               	subwf	Get_Timer_H@h& (0+255),w,b
  5007   000C8A  B0D8               	btfsc	status,0,c
  5008   000C8C  EF4A  F006         	goto	u1461
  5009   000C90  EF4C  F006         	goto	u1460
  5010   000C94                     u1461:
  5011   000C94  EF56  F006         	goto	l2386
  5012   000C98                     u1460:
  5013   000C98                     
  5014                           ; BSR set to: 0
  5015   000C98  C01F  F00D         	movff	Get_Timer_H@str,strcpy@dest
  5016   000C9C  C020  F00E         	movff	Get_Timer_H@str+1,strcpy@dest+1
  5017   000CA0  0EBB               	movlw	low STR_7
  5018   000CA2  6E0F               	movwf	strcpy@src^0,c
  5019   000CA4  0E7D               	movlw	high STR_7
  5020   000CA6  6E10               	movwf	(strcpy@src+1)^0,c
  5021   000CA8  ECF7  F007         	call	_strcpy	;wreg free
  5022   000CAC                     l2386:
  5023                           
  5024                           ;timer.c: 44:     strcat(str, str2);
  5025   000CAC  C01F  F00D         	movff	Get_Timer_H@str,strcat@dest
  5026   000CB0  C020  F00E         	movff	Get_Timer_H@str+1,strcat@dest+1
  5027   000CB4  0E80               	movlw	low Get_Timer_H@str2
  5028   000CB6  6E0F               	movwf	strcat@src^0,c
  5029   000CB8  ECC8  F007         	call	_strcat	;wreg free
  5030   000CBC  0012               	return		;funcret
  5031   000CBE                     __end_of_Get_Timer_H:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _strcat *****************
  5035 ;; Defined at:
  5036 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcat.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  dest            2   12[COMRAM] PTR unsigned char 
  5039 ;;		 -> main@mm(100), main@hh(100), 
  5040 ;;  src             1   14[COMRAM] PTR const unsigned char 
  5041 ;;		 -> Get_Timer_M@str2(100), Get_Timer_H@str2(100), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  i               2   15[COMRAM] unsigned int 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2   12[COMRAM] PTR unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5053 ;;      Params:         3       0       0       0       0       0       0
  5054 ;;      Locals:         2       0       0       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0
  5056 ;;      Totals:         5       0       0       0       0       0       0
  5057 ;;Total ram usage:        5 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 5
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_Get_Timer_H
  5064 ;;		_Get_Timer_M
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text28
  5069   000F90                     __ptext28:
  5070                           	callstack 0
  5071   000F90                     _strcat:
  5072                           	callstack 24
  5073   000F90  0E00               	movlw	0
  5074   000F92  6E11               	movwf	(strcat@i+1)^0,c
  5075   000F94  0E00               	movlw	0
  5076   000F96  6E10               	movwf	strcat@i^0,c
  5077   000F98  EFD0  F007         	goto	l2278
  5078   000F9C                     l2276:
  5079   000F9C  4A10               	infsnz	strcat@i^0,f,c
  5080   000F9E  2A11               	incf	(strcat@i+1)^0,f,c
  5081   000FA0                     l2278:
  5082   000FA0  5010               	movf	strcat@i^0,w,c
  5083   000FA2  240D               	addwf	strcat@dest^0,w,c
  5084   000FA4  6ED9               	movwf	fsr2l,c
  5085   000FA6  5011               	movf	(strcat@i+1)^0,w,c
  5086   000FA8  200E               	addwfc	(strcat@dest+1)^0,w,c
  5087   000FAA  6EDA               	movwf	fsr2h,c
  5088   000FAC  50DF               	movf	indf2,w,c
  5089   000FAE  A4D8               	btfss	status,2,c
  5090   000FB0  EFDC  F007         	goto	u1361
  5091   000FB4  EFDE  F007         	goto	u1360
  5092   000FB8                     u1361:
  5093   000FB8  EFCE  F007         	goto	l2276
  5094   000FBC                     u1360:
  5095   000FBC  EFE3  F007         	goto	l2282
  5096   000FC0                     l2280:
  5097   000FC0  4A10               	infsnz	strcat@i^0,f,c
  5098   000FC2  2A11               	incf	(strcat@i+1)^0,f,c
  5099   000FC4  2A0F               	incf	strcat@src^0,f,c
  5100   000FC6                     l2282:
  5101   000FC6  500F               	movf	strcat@src^0,w,c
  5102   000FC8  6ED9               	movwf	fsr2l,c
  5103   000FCA  6ADA               	clrf	fsr2h,c
  5104   000FCC  5010               	movf	strcat@i^0,w,c
  5105   000FCE  240D               	addwf	strcat@dest^0,w,c
  5106   000FD0  6EE1               	movwf	fsr1l,c
  5107   000FD2  5011               	movf	(strcat@i+1)^0,w,c
  5108   000FD4  200E               	addwfc	(strcat@dest+1)^0,w,c
  5109   000FD6  6EE2               	movwf	fsr1h,c
  5110   000FD8  CFDF FFE7          	movff	indf2,indf1
  5111   000FDC  50E7               	movf	indf1,w,c
  5112   000FDE  A4D8               	btfss	status,2,c
  5113   000FE0  EFF4  F007         	goto	u1371
  5114   000FE4  EFF6  F007         	goto	u1370
  5115   000FE8                     u1371:
  5116   000FE8  EFE0  F007         	goto	l2280
  5117   000FEC                     u1370:
  5118   000FEC  0012               	return		;funcret
  5119   000FEE                     __end_of_strcat:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _itoa *****************
  5123 ;; Defined at:
  5124 ;;		line 17 in file "timer.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  n               2   20[COMRAM] int 
  5127 ;;  s               2   22[COMRAM] PTR unsigned char 
  5128 ;;		 -> Get_Timer_M@str2(100), Get_Timer_H@str2(100), main@tmp(100), 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  i               2   28[COMRAM] int 
  5131 ;;  sign            2   26[COMRAM] int 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5141 ;;      Params:         4       0       0       0       0       0       0
  5142 ;;      Locals:         4       0       0       0       0       0       0
  5143 ;;      Temps:          2       0       0       0       0       0       0
  5144 ;;      Totals:        10       0       0       0       0       0       0
  5145 ;;Total ram usage:       10 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; Hardware stack levels required when called: 6
  5148 ;; This function calls:
  5149 ;;		___awdiv
  5150 ;;		___awmod
  5151 ;;		_reverse
  5152 ;; This function is called by:
  5153 ;;		_main
  5154 ;;		_Get_Timer_H
  5155 ;;		_Get_Timer_M
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text29
  5160   00064C                     __ptext29:
  5161                           	callstack 0
  5162   00064C                     _itoa:
  5163                           	callstack 24
  5164   00064C                     
  5165                           ;timer.c: 18:     int sign = 1;
  5166   00064C  0E00               	movlw	0
  5167   00064E  6E1C               	movwf	(itoa@sign+1)^0,c
  5168   000650  0E01               	movlw	1
  5169   000652  6E1B               	movwf	itoa@sign^0,c
  5170   000654                     
  5171                           ;timer.c: 19:     if (n < 0) {
  5172   000654  BE16               	btfsc	(itoa@n+1)^0,7,c
  5173   000656  EF31  F003         	goto	u1160
  5174   00065A  EF2F  F003         	goto	u1161
  5175   00065E                     u1161:
  5176   00065E  EF37  F003         	goto	l2056
  5177   000662                     u1160:
  5178   000662                     
  5179                           ;timer.c: 20:         sign = -1;
  5180   000662  681B               	setf	itoa@sign^0,c
  5181   000664  681C               	setf	(itoa@sign+1)^0,c
  5182   000666                     
  5183                           ;timer.c: 21:         n = -n;
  5184   000666  6C15               	negf	itoa@n^0,c
  5185   000668  1E16               	comf	(itoa@n+1)^0,f,c
  5186   00066A  B0D8               	btfsc	status,0,c
  5187   00066C  2A16               	incf	(itoa@n+1)^0,f,c
  5188   00066E                     l2056:
  5189                           
  5190                           ;timer.c: 23:     int i = 0;
  5191   00066E  0E00               	movlw	0
  5192   000670  6E1E               	movwf	(itoa@i+1)^0,c
  5193   000672  0E00               	movlw	0
  5194   000674  6E1D               	movwf	itoa@i^0,c
  5195                           
  5196                           ;timer.c: 24:     while (n != 0) {
  5197   000676  EF60  F003         	goto	l2064
  5198   00067A                     l2058:
  5199                           
  5200                           ;timer.c: 25:         s[i++] = n%10 + '0';
  5201   00067A  501D               	movf	itoa@i^0,w,c
  5202   00067C  2417               	addwf	itoa@s^0,w,c
  5203   00067E  6ED9               	movwf	fsr2l,c
  5204   000680  501E               	movf	(itoa@i+1)^0,w,c
  5205   000682  2018               	addwfc	(itoa@s+1)^0,w,c
  5206   000684  6EDA               	movwf	fsr2h,c
  5207   000686  C015  F00D         	movff	itoa@n,___awmod@dividend
  5208   00068A  C016  F00E         	movff	itoa@n+1,___awmod@dividend+1
  5209   00068E  0E00               	movlw	0
  5210   000690  6E10               	movwf	(___awmod@divisor+1)^0,c
  5211   000692  0E0A               	movlw	10
  5212   000694  6E0F               	movwf	___awmod@divisor^0,c
  5213   000696  EC2B  F005         	call	___awmod	;wreg free
  5214   00069A  500D               	movf	?___awmod^0,w,c
  5215   00069C  0F30               	addlw	48
  5216   00069E  6EDF               	movwf	indf2,c
  5217   0006A0  4A1D               	infsnz	itoa@i^0,f,c
  5218   0006A2  2A1E               	incf	(itoa@i+1)^0,f,c
  5219   0006A4                     
  5220                           ;timer.c: 26:         n = n/10;
  5221   0006A4  C015  F00D         	movff	itoa@n,___awdiv@dividend
  5222   0006A8  C016  F00E         	movff	itoa@n+1,___awdiv@dividend+1
  5223   0006AC  0E00               	movlw	0
  5224   0006AE  6E10               	movwf	(___awdiv@divisor+1)^0,c
  5225   0006B0  0E0A               	movlw	10
  5226   0006B2  6E0F               	movwf	___awdiv@divisor^0,c
  5227   0006B4  ECCA  F004         	call	___awdiv	;wreg free
  5228   0006B8  C00D  F015         	movff	?___awdiv,itoa@n
  5229   0006BC  C00E  F016         	movff	?___awdiv+1,itoa@n+1
  5230   0006C0                     l2064:
  5231                           
  5232                           ;timer.c: 24:     while (n != 0) {
  5233   0006C0  5015               	movf	itoa@n^0,w,c
  5234   0006C2  1016               	iorwf	(itoa@n+1)^0,w,c
  5235   0006C4  A4D8               	btfss	status,2,c
  5236   0006C6  EF67  F003         	goto	u1171
  5237   0006CA  EF69  F003         	goto	u1170
  5238   0006CE                     u1171:
  5239   0006CE  EF3D  F003         	goto	l2058
  5240   0006D2                     u1170:
  5241   0006D2                     
  5242                           ;timer.c: 29:     if (sign < 0)
  5243   0006D2  BE1C               	btfsc	(itoa@sign+1)^0,7,c
  5244   0006D4  EF70  F003         	goto	u1180
  5245   0006D8  EF6E  F003         	goto	u1181
  5246   0006DC                     u1181:
  5247   0006DC  EF7A  F003         	goto	l2072
  5248   0006E0                     u1180:
  5249   0006E0                     
  5250                           ;timer.c: 30:         s[i++] = '-';
  5251   0006E0  501D               	movf	itoa@i^0,w,c
  5252   0006E2  2417               	addwf	itoa@s^0,w,c
  5253   0006E4  6ED9               	movwf	fsr2l,c
  5254   0006E6  501E               	movf	(itoa@i+1)^0,w,c
  5255   0006E8  2018               	addwfc	(itoa@s+1)^0,w,c
  5256   0006EA  6EDA               	movwf	fsr2h,c
  5257   0006EC  0E2D               	movlw	45
  5258   0006EE  6EDF               	movwf	indf2,c
  5259   0006F0  4A1D               	infsnz	itoa@i^0,f,c
  5260   0006F2  2A1E               	incf	(itoa@i+1)^0,f,c
  5261   0006F4                     l2072:
  5262                           
  5263                           ;timer.c: 31:     s[i] = '\0';
  5264   0006F4  501D               	movf	itoa@i^0,w,c
  5265   0006F6  2417               	addwf	itoa@s^0,w,c
  5266   0006F8  6ED9               	movwf	fsr2l,c
  5267   0006FA  501E               	movf	(itoa@i+1)^0,w,c
  5268   0006FC  2018               	addwfc	(itoa@s+1)^0,w,c
  5269   0006FE  6EDA               	movwf	fsr2h,c
  5270   000700  6ADF               	clrf	indf2,c
  5271   000702                     
  5272                           ;timer.c: 33:     reverse(s, s+i-1);
  5273   000702  C017  F00D         	movff	itoa@s,reverse@first
  5274   000706  C018  F00E         	movff	itoa@s+1,reverse@first+1
  5275   00070A  501D               	movf	itoa@i^0,w,c
  5276   00070C  2417               	addwf	itoa@s^0,w,c
  5277   00070E  6E19               	movwf	??_itoa^0,c
  5278   000710  501E               	movf	(itoa@i+1)^0,w,c
  5279   000712  2018               	addwfc	(itoa@s+1)^0,w,c
  5280   000714  6E1A               	movwf	(??_itoa+1)^0,c
  5281   000716  0EFF               	movlw	255
  5282   000718  2419               	addwf	??_itoa^0,w,c
  5283   00071A  6E0F               	movwf	reverse@last^0,c
  5284   00071C  0EFF               	movlw	255
  5285   00071E  201A               	addwfc	(??_itoa+1)^0,w,c
  5286   000720  6E10               	movwf	(reverse@last+1)^0,c
  5287   000722  EC73  F008         	call	_reverse	;wreg free
  5288   000726  0012               	return		;funcret
  5289   000728                     __end_of_itoa:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _reverse *****************
  5293 ;; Defined at:
  5294 ;;		line 6 in file "timer.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  first           2   12[COMRAM] PTR unsigned char 
  5297 ;;		 -> Get_Timer_M@str2(100), Get_Timer_H@str2(100), main@tmp(100), 
  5298 ;;  last            2   14[COMRAM] PTR unsigned char 
  5299 ;;		 -> Get_Timer_M@str2(100), Get_Timer_H@str2(100), main@tmp(100), 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  tmp             1   16[COMRAM] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5311 ;;      Params:         4       0       0       0       0       0       0
  5312 ;;      Locals:         1       0       0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0
  5314 ;;      Totals:         5       0       0       0       0       0       0
  5315 ;;Total ram usage:        5 bytes
  5316 ;; Hardware stack levels used: 1
  5317 ;; Hardware stack levels required when called: 5
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_itoa
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text30
  5326   0010E6                     __ptext30:
  5327                           	callstack 0
  5328   0010E6                     _reverse:
  5329                           	callstack 24
  5330   0010E6                     
  5331                           ;timer.c: 7:     for (;first < last; first++,last--) {
  5332   0010E6  EF90  F008         	goto	l1932
  5333   0010EA                     l1922:
  5334                           
  5335                           ;timer.c: 9:         char tmp = *first;
  5336   0010EA  C00D  FFD9         	movff	reverse@first,fsr2l
  5337   0010EE  C00E  FFDA         	movff	reverse@first+1,fsr2h
  5338   0010F2  50DF               	movf	indf2,w,c
  5339   0010F4  6E11               	movwf	reverse@tmp^0,c
  5340   0010F6                     
  5341                           ;timer.c: 10:         *first = *last;
  5342   0010F6  C00F  FFD9         	movff	reverse@last,fsr2l
  5343   0010FA  C010  FFDA         	movff	reverse@last+1,fsr2h
  5344   0010FE  C00D  FFE1         	movff	reverse@first,fsr1l
  5345   001102  C00E  FFE2         	movff	reverse@first+1,fsr1h
  5346   001106  CFDF FFE7          	movff	indf2,indf1
  5347   00110A                     
  5348                           ;timer.c: 11:         *last = tmp;
  5349   00110A  C00F  FFD9         	movff	reverse@last,fsr2l
  5350   00110E  C010  FFDA         	movff	reverse@last+1,fsr2h
  5351   001112  C011  FFDF         	movff	reverse@tmp,indf2
  5352   001116                     
  5353                           ;timer.c: 12:     }
  5354   001116  4A0D               	infsnz	reverse@first^0,f,c
  5355   001118  2A0E               	incf	(reverse@first+1)^0,f,c
  5356   00111A  060F               	decf	reverse@last^0,f,c
  5357   00111C  A0D8               	btfss	status,0,c
  5358   00111E  0610               	decf	(reverse@last+1)^0,f,c
  5359   001120                     l1932:
  5360   001120  500F               	movf	reverse@last^0,w,c
  5361   001122  5C0D               	subwf	reverse@first^0,w,c
  5362   001124  5010               	movf	(reverse@last+1)^0,w,c
  5363   001126  580E               	subwfb	(reverse@first+1)^0,w,c
  5364   001128  A0D8               	btfss	status,0,c
  5365   00112A  EF99  F008         	goto	u961
  5366   00112E  EF9B  F008         	goto	u960
  5367   001132                     u961:
  5368   001132  EF75  F008         	goto	l1922
  5369   001136                     u960:
  5370   001136  0012               	return		;funcret
  5371   001138                     __end_of_reverse:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function ___awmod *****************
  5375 ;; Defined at:
  5376 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  dividend        2   12[COMRAM] int 
  5379 ;;  divisor         2   14[COMRAM] int 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  sign            1   17[COMRAM] unsigned char 
  5382 ;;  counter         1   16[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  2   12[COMRAM] int 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5392 ;;      Params:         4       0       0       0       0       0       0
  5393 ;;      Locals:         2       0       0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0
  5395 ;;      Totals:         6       0       0       0       0       0       0
  5396 ;;Total ram usage:        6 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 5
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_itoa
  5403 ;;		_Get_Timer_M
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text31
  5408   000A56                     __ptext31:
  5409                           	callstack 0
  5410   000A56                     ___awmod:
  5411                           	callstack 24
  5412   000A56  6A12               	clrf	___awmod@sign^0,c
  5413   000A58  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  5414   000A5A  EF33  F005         	goto	u1030
  5415   000A5E  EF31  F005         	goto	u1031
  5416   000A62                     u1031:
  5417   000A62  EF39  F005         	goto	l1986
  5418   000A66                     u1030:
  5419   000A66  6C0D               	negf	___awmod@dividend^0,c
  5420   000A68  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  5421   000A6A  B0D8               	btfsc	status,0,c
  5422   000A6C  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  5423   000A6E  0E01               	movlw	1
  5424   000A70  6E12               	movwf	___awmod@sign^0,c
  5425   000A72                     l1986:
  5426   000A72  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  5427   000A74  EF40  F005         	goto	u1040
  5428   000A78  EF3E  F005         	goto	u1041
  5429   000A7C                     u1041:
  5430   000A7C  EF44  F005         	goto	l1990
  5431   000A80                     u1040:
  5432   000A80  6C0F               	negf	___awmod@divisor^0,c
  5433   000A82  1E10               	comf	(___awmod@divisor+1)^0,f,c
  5434   000A84  B0D8               	btfsc	status,0,c
  5435   000A86  2A10               	incf	(___awmod@divisor+1)^0,f,c
  5436   000A88                     l1990:
  5437   000A88  500F               	movf	___awmod@divisor^0,w,c
  5438   000A8A  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  5439   000A8C  B4D8               	btfsc	status,2,c
  5440   000A8E  EF4B  F005         	goto	u1051
  5441   000A92  EF4D  F005         	goto	u1050
  5442   000A96                     u1051:
  5443   000A96  EF71  F005         	goto	l2006
  5444   000A9A                     u1050:
  5445   000A9A  0E01               	movlw	1
  5446   000A9C  6E11               	movwf	___awmod@counter^0,c
  5447   000A9E  EF55  F005         	goto	l1996
  5448   000AA2                     l1994:
  5449   000AA2  90D8               	bcf	status,0,c
  5450   000AA4  360F               	rlcf	___awmod@divisor^0,f,c
  5451   000AA6  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  5452   000AA8  2A11               	incf	___awmod@counter^0,f,c
  5453   000AAA                     l1996:
  5454   000AAA  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  5455   000AAC  EF5A  F005         	goto	u1061
  5456   000AB0  EF5C  F005         	goto	u1060
  5457   000AB4                     u1061:
  5458   000AB4  EF51  F005         	goto	l1994
  5459   000AB8                     u1060:
  5460   000AB8                     l1998:
  5461   000AB8  500F               	movf	___awmod@divisor^0,w,c
  5462   000ABA  5C0D               	subwf	___awmod@dividend^0,w,c
  5463   000ABC  5010               	movf	(___awmod@divisor+1)^0,w,c
  5464   000ABE  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  5465   000AC0  A0D8               	btfss	status,0,c
  5466   000AC2  EF65  F005         	goto	u1071
  5467   000AC6  EF67  F005         	goto	u1070
  5468   000ACA                     u1071:
  5469   000ACA  EF6B  F005         	goto	l2002
  5470   000ACE                     u1070:
  5471   000ACE  500F               	movf	___awmod@divisor^0,w,c
  5472   000AD0  5E0D               	subwf	___awmod@dividend^0,f,c
  5473   000AD2  5010               	movf	(___awmod@divisor+1)^0,w,c
  5474   000AD4  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  5475   000AD6                     l2002:
  5476   000AD6  90D8               	bcf	status,0,c
  5477   000AD8  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  5478   000ADA  320F               	rrcf	___awmod@divisor^0,f,c
  5479   000ADC  2E11               	decfsz	___awmod@counter^0,f,c
  5480   000ADE  EF5C  F005         	goto	l1998
  5481   000AE2                     l2006:
  5482   000AE2  5012               	movf	___awmod@sign^0,w,c
  5483   000AE4  B4D8               	btfsc	status,2,c
  5484   000AE6  EF77  F005         	goto	u1081
  5485   000AEA  EF79  F005         	goto	u1080
  5486   000AEE                     u1081:
  5487   000AEE  EF7D  F005         	goto	l2010
  5488   000AF2                     u1080:
  5489   000AF2  6C0D               	negf	___awmod@dividend^0,c
  5490   000AF4  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  5491   000AF6  B0D8               	btfsc	status,0,c
  5492   000AF8  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  5493   000AFA                     l2010:
  5494   000AFA  C00D  F00D         	movff	___awmod@dividend,?___awmod
  5495   000AFE  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  5496   000B02  0012               	return		;funcret
  5497   000B04                     __end_of___awmod:
  5498                           	callstack 0
  5499                           
  5500 ;; *************** function ___awdiv *****************
  5501 ;; Defined at:
  5502 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  dividend        2   12[COMRAM] int 
  5505 ;;  divisor         2   14[COMRAM] int 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  quotient        2   18[COMRAM] int 
  5508 ;;  sign            1   17[COMRAM] unsigned char 
  5509 ;;  counter         1   16[COMRAM] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  2   12[COMRAM] int 
  5512 ;; Registers used:
  5513 ;;		wreg, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5519 ;;      Params:         4       0       0       0       0       0       0
  5520 ;;      Locals:         4       0       0       0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0       0       0
  5522 ;;      Totals:         8       0       0       0       0       0       0
  5523 ;;Total ram usage:        8 bytes
  5524 ;; Hardware stack levels used: 1
  5525 ;; Hardware stack levels required when called: 5
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_main
  5530 ;;		_itoa
  5531 ;;		_Get_Timer_H
  5532 ;;		_Get_Timer_M
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text32
  5537   000994                     __ptext32:
  5538                           	callstack 0
  5539   000994                     ___awdiv:
  5540                           	callstack 24
  5541   000994  6A12               	clrf	___awdiv@sign^0,c
  5542   000996  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  5543   000998  EFD2  F004         	goto	u970
  5544   00099C  EFD0  F004         	goto	u971
  5545   0009A0                     u971:
  5546   0009A0  EFD8  F004         	goto	l1942
  5547   0009A4                     u970:
  5548   0009A4  6C0F               	negf	___awdiv@divisor^0,c
  5549   0009A6  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  5550   0009A8  B0D8               	btfsc	status,0,c
  5551   0009AA  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  5552   0009AC  0E01               	movlw	1
  5553   0009AE  6E12               	movwf	___awdiv@sign^0,c
  5554   0009B0                     l1942:
  5555   0009B0  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  5556   0009B2  EFDF  F004         	goto	u980
  5557   0009B6  EFDD  F004         	goto	u981
  5558   0009BA                     u981:
  5559   0009BA  EFE5  F004         	goto	l1948
  5560   0009BE                     u980:
  5561   0009BE  6C0D               	negf	___awdiv@dividend^0,c
  5562   0009C0  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  5563   0009C2  B0D8               	btfsc	status,0,c
  5564   0009C4  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  5565   0009C6  0E01               	movlw	1
  5566   0009C8  1A12               	xorwf	___awdiv@sign^0,f,c
  5567   0009CA                     l1948:
  5568   0009CA  0E00               	movlw	0
  5569   0009CC  6E14               	movwf	(___awdiv@quotient+1)^0,c
  5570   0009CE  0E00               	movlw	0
  5571   0009D0  6E13               	movwf	___awdiv@quotient^0,c
  5572   0009D2  500F               	movf	___awdiv@divisor^0,w,c
  5573   0009D4  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  5574   0009D6  B4D8               	btfsc	status,2,c
  5575   0009D8  EFF0  F004         	goto	u991
  5576   0009DC  EFF2  F004         	goto	u990
  5577   0009E0                     u991:
  5578   0009E0  EF1A  F005         	goto	l1970
  5579   0009E4                     u990:
  5580   0009E4  0E01               	movlw	1
  5581   0009E6  6E11               	movwf	___awdiv@counter^0,c
  5582   0009E8  EFFA  F004         	goto	l1956
  5583   0009EC                     l1954:
  5584   0009EC  90D8               	bcf	status,0,c
  5585   0009EE  360F               	rlcf	___awdiv@divisor^0,f,c
  5586   0009F0  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  5587   0009F2  2A11               	incf	___awdiv@counter^0,f,c
  5588   0009F4                     l1956:
  5589   0009F4  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  5590   0009F6  EFFF  F004         	goto	u1001
  5591   0009FA  EF01  F005         	goto	u1000
  5592   0009FE                     u1001:
  5593   0009FE  EFF6  F004         	goto	l1954
  5594   000A02                     u1000:
  5595   000A02                     l1958:
  5596   000A02  90D8               	bcf	status,0,c
  5597   000A04  3613               	rlcf	___awdiv@quotient^0,f,c
  5598   000A06  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  5599   000A08  500F               	movf	___awdiv@divisor^0,w,c
  5600   000A0A  5C0D               	subwf	___awdiv@dividend^0,w,c
  5601   000A0C  5010               	movf	(___awdiv@divisor+1)^0,w,c
  5602   000A0E  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  5603   000A10  A0D8               	btfss	status,0,c
  5604   000A12  EF0D  F005         	goto	u1011
  5605   000A16  EF0F  F005         	goto	u1010
  5606   000A1A                     u1011:
  5607   000A1A  EF14  F005         	goto	l1966
  5608   000A1E                     u1010:
  5609   000A1E  500F               	movf	___awdiv@divisor^0,w,c
  5610   000A20  5E0D               	subwf	___awdiv@dividend^0,f,c
  5611   000A22  5010               	movf	(___awdiv@divisor+1)^0,w,c
  5612   000A24  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  5613   000A26  8013               	bsf	___awdiv@quotient^0,0,c
  5614   000A28                     l1966:
  5615   000A28  90D8               	bcf	status,0,c
  5616   000A2A  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  5617   000A2C  320F               	rrcf	___awdiv@divisor^0,f,c
  5618   000A2E  2E11               	decfsz	___awdiv@counter^0,f,c
  5619   000A30  EF01  F005         	goto	l1958
  5620   000A34                     l1970:
  5621   000A34  5012               	movf	___awdiv@sign^0,w,c
  5622   000A36  B4D8               	btfsc	status,2,c
  5623   000A38  EF20  F005         	goto	u1021
  5624   000A3C  EF22  F005         	goto	u1020
  5625   000A40                     u1021:
  5626   000A40  EF26  F005         	goto	l1974
  5627   000A44                     u1020:
  5628   000A44  6C13               	negf	___awdiv@quotient^0,c
  5629   000A46  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  5630   000A48  B0D8               	btfsc	status,0,c
  5631   000A4A  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  5632   000A4C                     l1974:
  5633   000A4C  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  5634   000A50  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  5635   000A54  0012               	return		;funcret
  5636   000A56                     __end_of___awdiv:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function _GetString *****************
  5640 ;; Defined at:
  5641 ;;		line 71 in file "uart.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  str             2   20[COMRAM] PTR unsigned char 
  5644 ;;		 -> main@str(100), 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  2   20[COMRAM] int 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5656 ;;      Params:         2       0       0       0       0       0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0
  5658 ;;      Temps:          1       0       0       0       0       0       0
  5659 ;;      Totals:         3       0       0       0       0       0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 6
  5663 ;; This function calls:
  5664 ;;		_ClearBuffer
  5665 ;;		_strcpy
  5666 ;; This function is called by:
  5667 ;;		_main
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text33
  5672   000D3E                     __ptext33:
  5673                           	callstack 0
  5674   000D3E                     _GetString:
  5675                           	callstack 24
  5676   000D3E                     
  5677                           ;uart.c: 72:     if (buffer[buffer_size - 1] == '\r') {
  5678   000D3E  0E63               	movlw	low (_buffer+65535)
  5679   000D40  242D               	addwf	_buffer_size^0,w,c
  5680   000D42  6ED9               	movwf	fsr2l,c
  5681   000D44  0E03               	movlw	high (_buffer+65535)
  5682   000D46  202E               	addwfc	(_buffer_size+1)^0,w,c
  5683   000D48  6EDA               	movwf	fsr2h,c
  5684   000D4A  0E0D               	movlw	13
  5685   000D4C  18DE               	xorwf	postinc2,w,c
  5686   000D4E  A4D8               	btfss	status,2,c
  5687   000D50  EFAC  F006         	goto	u1431
  5688   000D54  EFAE  F006         	goto	u1430
  5689   000D58                     u1431:
  5690   000D58  EFCA  F006         	goto	l2318
  5691   000D5C                     u1430:
  5692   000D5C                     
  5693                           ;uart.c: 73:         buffer[--buffer_size] = '\0';
  5694   000D5C  062D               	decf	_buffer_size^0,f,c
  5695   000D5E  A0D8               	btfss	status,0,c
  5696   000D60  062E               	decf	(_buffer_size+1)^0,f,c
  5697   000D62  0E64               	movlw	low _buffer
  5698   000D64  242D               	addwf	_buffer_size^0,w,c
  5699   000D66  6ED9               	movwf	fsr2l,c
  5700   000D68  0E03               	movlw	high _buffer
  5701   000D6A  202E               	addwfc	(_buffer_size+1)^0,w,c
  5702   000D6C  6EDA               	movwf	fsr2h,c
  5703   000D6E  6ADF               	clrf	indf2,c
  5704   000D70                     
  5705                           ;uart.c: 74:         strcpy(str, buffer);
  5706   000D70  C015  F00D         	movff	GetString@str,strcpy@dest
  5707   000D74  C016  F00E         	movff	GetString@str+1,strcpy@dest+1
  5708   000D78  0E64               	movlw	low _buffer
  5709   000D7A  6E0F               	movwf	strcpy@src^0,c
  5710   000D7C  0E03               	movlw	high _buffer
  5711   000D7E  6E10               	movwf	(strcpy@src+1)^0,c
  5712   000D80  ECF7  F007         	call	_strcpy	;wreg free
  5713   000D84                     
  5714                           ;uart.c: 75:         ClearBuffer();
  5715   000D84  EC10  F009         	call	_ClearBuffer	;wreg free
  5716   000D88                     
  5717                           ;uart.c: 76:         return 1;
  5718   000D88  0E00               	movlw	0
  5719   000D8A  6E16               	movwf	(?_GetString+1)^0,c
  5720   000D8C  0E01               	movlw	1
  5721   000D8E  6E15               	movwf	?_GetString^0,c
  5722   000D90  EFD3  F006         	goto	l175
  5723   000D94                     l2318:
  5724                           
  5725                           ;uart.c: 78:         str[0] = '\0';
  5726   000D94  C015  FFD9         	movff	GetString@str,fsr2l
  5727   000D98  C016  FFDA         	movff	GetString@str+1,fsr2h
  5728   000D9C  6ADF               	clrf	indf2,c
  5729   000D9E                     
  5730                           ;uart.c: 79:         return 0;
  5731   000D9E  0E00               	movlw	0
  5732   000DA0  6E16               	movwf	(?_GetString+1)^0,c
  5733   000DA2  0E00               	movlw	0
  5734   000DA4  6E15               	movwf	?_GetString^0,c
  5735   000DA6                     l175:
  5736   000DA6  0012               	return		;funcret
  5737   000DA8                     __end_of_GetString:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _strcpy *****************
  5741 ;; Defined at:
  5742 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  dest            2   12[COMRAM] PTR unsigned char 
  5745 ;;		 -> ParsingData@input(100), main@mm(100), main@hh(100), main@tmp(100), 
  5746 ;;		 -> main@str(100), 
  5747 ;;  src             2   14[COMRAM] PTR const unsigned char 
  5748 ;;		 -> STR_8(2), STR_7(2), buffer(100), STR_3(1), 
  5749 ;;		 -> STR_2(1), STR_1(1), main@str(100), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  d               2   18[COMRAM] PTR unsigned char 
  5752 ;;		 -> ParsingData@input(100), main@mm(100), main@hh(100), main@tmp(100), 
  5753 ;;		 -> main@str(100), 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  2   12[COMRAM] PTR unsigned char 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5763 ;;      Params:         4       0       0       0       0       0       0
  5764 ;;      Locals:         2       0       0       0       0       0       0
  5765 ;;      Temps:          2       0       0       0       0       0       0
  5766 ;;      Totals:         8       0       0       0       0       0       0
  5767 ;;Total ram usage:        8 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 5
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;;		_ParsingData
  5775 ;;		_GetString
  5776 ;;		_Get_Timer_H
  5777 ;;		_Get_Timer_M
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text34
  5782   000FEE                     __ptext34:
  5783                           	callstack 0
  5784   000FEE                     _strcpy:
  5785                           	callstack 25
  5786   000FEE  C00D  F013         	movff	strcpy@dest,strcpy@d
  5787   000FF2  C00E  F014         	movff	strcpy@dest+1,strcpy@d+1
  5788   000FF6                     l2046:
  5789   000FF6  500F               	movf	strcpy@src^0,w,c
  5790   000FF8  6E11               	movwf	??_strcpy^0,c
  5791   000FFA  5010               	movf	(strcpy@src+1)^0,w,c
  5792   000FFC  6E12               	movwf	(??_strcpy+1)^0,c
  5793   000FFE  4A0F               	infsnz	strcpy@src^0,f,c
  5794   001000  2A10               	incf	(strcpy@src+1)^0,f,c
  5795   001002  C011  FFF6         	movff	??_strcpy,tblptrl
  5796   001006  C012  FFF7         	movff	??_strcpy+1,tblptrh
  5797   00100A  6AF8               	clrf	tblptru,c
  5798   00100C  C013  FFD9         	movff	strcpy@d,fsr2l
  5799   001010  C014  FFDA         	movff	strcpy@d+1,fsr2h
  5800   001014  4A13               	infsnz	strcpy@d^0,f,c
  5801   001016  2A14               	incf	(strcpy@d+1)^0,f,c
  5802   001018  0E05               	movlw	(high __ramtop+-1)
  5803   00101A  64F7               	cpfsgt	tblptrh,c
  5804   00101C  D003               	bra	u1147
  5805   00101E  0008               	tblrd		*
  5806   001020  50F5               	movf	tablat,w,c
  5807   001022  D005               	bra	u1140
  5808   001024                     u1147:
  5809   001024  CFF6 FFE9          	movff	tblptrl,fsr0l
  5810   001028  CFF7 FFEA          	movff	tblptrh,fsr0h
  5811   00102C  50EF               	movf	indf0,w,c
  5812   00102E                     u1140:
  5813   00102E  6EDF               	movwf	indf2,c
  5814   001030  50DF               	movf	indf2,w,c
  5815   001032  A4D8               	btfss	status,2,c
  5816   001034  EF1E  F008         	goto	u1151
  5817   001038  EF20  F008         	goto	u1150
  5818   00103C                     u1151:
  5819   00103C  EFFB  F007         	goto	l2046
  5820   001040                     u1150:
  5821   001040  0012               	return		;funcret
  5822   001042                     __end_of_strcpy:
  5823                           	callstack 0
  5824                           
  5825 ;; *************** function _ClearBuffer *****************
  5826 ;; Defined at:
  5827 ;;		line 58 in file "uart.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  i               2   12[COMRAM] int 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5841 ;;      Params:         0       0       0       0       0       0       0
  5842 ;;      Locals:         2       0       0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0
  5844 ;;      Totals:         2       0       0       0       0       0       0
  5845 ;;Total ram usage:        2 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 5
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_main
  5852 ;;		_ParsingData
  5853 ;;		_GetString
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text35
  5858   001220                     __ptext35:
  5859                           	callstack 0
  5860   001220                     _ClearBuffer:
  5861                           	callstack 24
  5862   001220                     
  5863                           ;uart.c: 59:     for (int i = 0; i < 100; i++)
  5864   001220  0E00               	movlw	0
  5865   001222  6E0E               	movwf	(ClearBuffer@i+1)^0,c
  5866   001224  0E00               	movlw	0
  5867   001226  6E0D               	movwf	ClearBuffer@i^0,c
  5868   001228                     l2036:
  5869                           
  5870                           ;uart.c: 60:         buffer[i] = '\0';
  5871   001228  0E64               	movlw	low _buffer
  5872   00122A  240D               	addwf	ClearBuffer@i^0,w,c
  5873   00122C  6ED9               	movwf	fsr2l,c
  5874   00122E  0E03               	movlw	high _buffer
  5875   001230  200E               	addwfc	(ClearBuffer@i+1)^0,w,c
  5876   001232  6EDA               	movwf	fsr2h,c
  5877   001234  6ADF               	clrf	indf2,c
  5878   001236  4A0D               	infsnz	ClearBuffer@i^0,f,c
  5879   001238  2A0E               	incf	(ClearBuffer@i+1)^0,f,c
  5880   00123A  BE0E               	btfsc	(ClearBuffer@i+1)^0,7,c
  5881   00123C  EF29  F009         	goto	u1131
  5882   001240  500E               	movf	(ClearBuffer@i+1)^0,w,c
  5883   001242  E109               	bnz	u1130
  5884   001244  0E64               	movlw	100
  5885   001246  5C0D               	subwf	ClearBuffer@i^0,w,c
  5886   001248  A0D8               	btfss	status,0,c
  5887   00124A  EF29  F009         	goto	u1131
  5888   00124E  EF2B  F009         	goto	u1130
  5889   001252                     u1131:
  5890   001252  EF14  F009         	goto	l2036
  5891   001256                     u1130:
  5892   001256                     
  5893                           ;uart.c: 61:     buffer_size = 0;
  5894   001256  0E00               	movlw	0
  5895   001258  6E2E               	movwf	(_buffer_size+1)^0,c
  5896   00125A  0E00               	movlw	0
  5897   00125C  6E2D               	movwf	_buffer_size^0,c
  5898   00125E  0012               	return		;funcret
  5899   001260                     __end_of_ClearBuffer:
  5900                           	callstack 0
  5901                           
  5902 ;; *************** function _Lo_ISR *****************
  5903 ;; Defined at:
  5904 ;;		line 83 in file "uart.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      void 
  5911 ;; Registers used:
  5912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5918 ;;      Params:         0       0       0       0       0       0       0
  5919 ;;      Locals:         0       0       0       0       0       0       0
  5920 ;;      Temps:          5       0       0       0       0       0       0
  5921 ;;      Totals:         5       0       0       0       0       0       0
  5922 ;;Total ram usage:        5 bytes
  5923 ;; Hardware stack levels used: 1
  5924 ;; Hardware stack levels required when called: 4
  5925 ;; This function calls:
  5926 ;;		_MyusartRead
  5927 ;; This function is called by:
  5928 ;;		Interrupt level 1
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	intcodelo
  5933   000018                     __pintcodelo:
  5934                           	callstack 0
  5935   000018                     _Lo_ISR:
  5936                           	callstack 20
  5937                           
  5938                           ;incstack = 0
  5939   000018  8030               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5940   00001A  CFD8 F008          	movff	status,??_Lo_ISR
  5941   00001E  CFE8 F009          	movff	wreg,??_Lo_ISR+1
  5942   000022  CFE0 F00A          	movff	bsr,??_Lo_ISR+2
  5943   000026  CFD9 F00B          	movff	fsr2l,??_Lo_ISR+3
  5944   00002A  CFDA F00C          	movff	fsr2h,??_Lo_ISR+4
  5945   00002E                     
  5946                           ;uart.c: 85:     if(RCIF) {
  5947   00002E  AA9E               	btfss	3998,5,c	;volatile
  5948   000030  EF1C  F000         	goto	i1u167_21
  5949   000034  EF1E  F000         	goto	i1u167_20
  5950   000038                     i1u167_21:
  5951   000038  EF2A  F000         	goto	i1l183
  5952   00003C                     i1u167_20:
  5953   00003C                     
  5954                           ;uart.c: 86:         if(RCSTAbits.OERR)
  5955   00003C  A2AB               	btfss	171,1,c	;volatile
  5956   00003E  EF23  F000         	goto	i1u168_21
  5957   000042  EF25  F000         	goto	i1u168_20
  5958   000046                     i1u168_21:
  5959   000046  EF28  F000         	goto	i1l2556
  5960   00004A                     i1u168_20:
  5961   00004A                     
  5962                           ;uart.c: 87:         {;uart.c: 88:             CREN = 0;
  5963   00004A  98AB               	bcf	4011,4,c	;volatile
  5964                           
  5965                           ;uart.c: 89:             __nop();
  5966   00004C  0000               	nop	
  5967                           
  5968                           ;uart.c: 90:             CREN = 1;
  5969   00004E  88AB               	bsf	4011,4,c	;volatile
  5970   000050                     i1l2556:
  5971                           
  5972                           ;uart.c: 93:         MyusartRead();
  5973   000050  EC9C  F008         	call	_MyusartRead	;wreg free
  5974   000054                     i1l183:
  5975   000054  C00C  FFDA         	movff	??_Lo_ISR+4,fsr2h
  5976   000058  C00B  FFD9         	movff	??_Lo_ISR+3,fsr2l
  5977   00005C  C00A  FFE0         	movff	??_Lo_ISR+2,bsr
  5978   000060  C009  FFE8         	movff	??_Lo_ISR+1,wreg
  5979   000064  C008  FFD8         	movff	??_Lo_ISR,status
  5980   000068  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5981   00006A  0010               	retfie	
  5982   00006C                     __end_of_Lo_ISR:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _MyusartRead *****************
  5986 ;; Defined at:
  5987 ;;		line 64 in file "uart.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  data            1    6[COMRAM] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6001 ;;      Params:         0       0       0       0       0       0       0
  6002 ;;      Locals:         1       0       0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0
  6004 ;;      Totals:         1       0       0       0       0       0       0
  6005 ;;Total ram usage:        1 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 3
  6008 ;; This function calls:
  6009 ;;		_isprint
  6010 ;;		i1_putch
  6011 ;; This function is called by:
  6012 ;;		_Lo_ISR
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text37
  6017   001138                     __ptext37:
  6018                           	callstack 0
  6019   001138                     _MyusartRead:
  6020                           	callstack 20
  6021   001138                     
  6022                           ;uart.c: 65:     char data = RCREG;
  6023   001138  CFAE F007          	movff	4014,MyusartRead@data	;volatile
  6024   00113C                     
  6025                           ;uart.c: 66:     if (!isprint(data) && data != '\r') return;
  6026   00113C  C007  F003         	movff	MyusartRead@data,isprint@c
  6027   001140  6A04               	clrf	(isprint@c+1)^0,c
  6028   001142  EC65  F009         	call	_isprint	;wreg free
  6029   001146  5003               	movf	?_isprint^0,w,c
  6030   001148  1004               	iorwf	(?_isprint+1)^0,w,c
  6031   00114A  A4D8               	btfss	status,2,c
  6032   00114C  EFAA  F008         	goto	i1u151_21
  6033   001150  EFAC  F008         	goto	i1u151_20
  6034   001154                     i1u151_21:
  6035   001154  EFB7  F008         	goto	i1l2424
  6036   001158                     i1u151_20:
  6037   001158  0E0D               	movlw	13
  6038   00115A  1807               	xorwf	MyusartRead@data^0,w,c
  6039   00115C  B4D8               	btfsc	status,2,c
  6040   00115E  EFB3  F008         	goto	i1u152_21
  6041   001162  EFB5  F008         	goto	i1u152_20
  6042   001166                     i1u152_21:
  6043   001166  EFB7  F008         	goto	i1l2424
  6044   00116A                     i1u152_20:
  6045   00116A  EFC4  F008         	goto	i1l171
  6046   00116E                     i1l2424:
  6047                           
  6048                           ;uart.c: 67:     buffer[buffer_size++] = data;
  6049   00116E  0E64               	movlw	low _buffer
  6050   001170  242D               	addwf	_buffer_size^0,w,c
  6051   001172  6ED9               	movwf	fsr2l,c
  6052   001174  0E03               	movlw	high _buffer
  6053   001176  202E               	addwfc	(_buffer_size+1)^0,w,c
  6054   001178  6EDA               	movwf	fsr2h,c
  6055   00117A  C007  FFDF         	movff	MyusartRead@data,indf2
  6056   00117E  4A2D               	infsnz	_buffer_size^0,f,c
  6057   001180  2A2E               	incf	(_buffer_size+1)^0,f,c
  6058   001182                     
  6059                           ;uart.c: 68:     putch(data);
  6060   001182  5007               	movf	MyusartRead@data^0,w,c
  6061   001184  EC37  F007         	call	i1_putch
  6062   001188                     i1l171:
  6063   001188  0012               	return		;funcret
  6064   00118A                     __end_of_MyusartRead:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function i1_putch *****************
  6068 ;; Defined at:
  6069 ;;		line 46 in file "uart.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  data            1    wreg     unsigned char 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  data            1    2[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         0       0       0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0
  6086 ;;      Totals:         1       0       0       0       0       0       0
  6087 ;;Total ram usage:        1 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 2
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_MyusartRead
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text38
  6098   000E6E                     __ptext38:
  6099                           	callstack 0
  6100   000E6E                     i1_putch:
  6101                           	callstack 20
  6102                           
  6103                           ;incstack = 0
  6104                           ;i1putch@data stored from wreg
  6105   000E6E  6E03               	movwf	i1putch@data^0,c
  6106   000E70                     
  6107                           ;uart.c: 47:     if (data == '\n' || data == '\r') {
  6108   000E70  0E0A               	movlw	10
  6109   000E72  1803               	xorwf	i1putch@data^0,w,c
  6110   000E74  B4D8               	btfsc	status,2,c
  6111   000E76  EF3F  F007         	goto	i1u138_21
  6112   000E7A  EF41  F007         	goto	i1u138_20
  6113   000E7E                     i1u138_21:
  6114   000E7E  EF4A  F007         	goto	i1l152
  6115   000E82                     i1u138_20:
  6116   000E82  0E0D               	movlw	13
  6117   000E84  1803               	xorwf	i1putch@data^0,w,c
  6118   000E86  A4D8               	btfss	status,2,c
  6119   000E88  EF48  F007         	goto	i1u139_21
  6120   000E8C  EF4A  F007         	goto	i1u139_20
  6121   000E90                     i1u139_21:
  6122   000E90  EF5E  F007         	goto	i1l159
  6123   000E94                     i1u139_20:
  6124   000E94                     i1l152:
  6125   000E94  A2AC               	btfss	172,1,c	;volatile
  6126   000E96  EF4F  F007         	goto	i1u140_21
  6127   000E9A  EF51  F007         	goto	i1u140_20
  6128   000E9E                     i1u140_21:
  6129   000E9E  EF4A  F007         	goto	i1l152
  6130   000EA2                     i1u140_20:
  6131   000EA2                     
  6132                           ;uart.c: 49:         TXREG = '\r';
  6133   000EA2  0E0D               	movlw	13
  6134   000EA4  6EAD               	movwf	173,c	;volatile
  6135   000EA6                     i1l155:
  6136   000EA6  A2AC               	btfss	172,1,c	;volatile
  6137   000EA8  EF58  F007         	goto	i1u141_21
  6138   000EAC  EF5A  F007         	goto	i1u141_20
  6139   000EB0                     i1u141_21:
  6140   000EB0  EF53  F007         	goto	i1l155
  6141   000EB4                     i1u141_20:
  6142   000EB4                     
  6143                           ;uart.c: 51:         TXREG = '\n';
  6144   000EB4  0E0A               	movlw	10
  6145   000EB6  6EAD               	movwf	173,c	;volatile
  6146                           
  6147                           ;uart.c: 52:     } else {
  6148   000EB8  EF67  F007         	goto	i1l162
  6149   000EBC                     i1l159:
  6150   000EBC  A2AC               	btfss	172,1,c	;volatile
  6151   000EBE  EF63  F007         	goto	i1u142_21
  6152   000EC2  EF65  F007         	goto	i1u142_20
  6153   000EC6                     i1u142_21:
  6154   000EC6  EF5E  F007         	goto	i1l159
  6155   000ECA                     i1u142_20:
  6156   000ECA                     
  6157                           ;uart.c: 54:         TXREG = data;
  6158   000ECA  C003  FFAD         	movff	i1putch@data,4013	;volatile
  6159   000ECE                     i1l162:
  6160   000ECE  0012               	return		;funcret
  6161   000ED0                     __end_ofi1_putch:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _isprint *****************
  6165 ;; Defined at:
  6166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\isprint.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  c               2    2[COMRAM] int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2    2[COMRAM] int 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6180 ;;      Params:         2       0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0
  6182 ;;      Temps:          2       0       0       0       0       0       0
  6183 ;;      Totals:         4       0       0       0       0       0       0
  6184 ;;Total ram usage:        4 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 2
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_MyusartRead
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text39
  6195   0012CA                     __ptext39:
  6196                           	callstack 0
  6197   0012CA                     _isprint:
  6198                           	callstack 20
  6199   0012CA  0EE0               	movlw	224
  6200   0012CC  2403               	addwf	isprint@c^0,w,c
  6201   0012CE  6E05               	movwf	??_isprint^0,c
  6202   0012D0  0EFF               	movlw	255
  6203   0012D2  2004               	addwfc	(isprint@c+1)^0,w,c
  6204   0012D4  6E06               	movwf	(??_isprint+1)^0,c
  6205   0012D6  5006               	movf	(??_isprint+1)^0,w,c
  6206   0012D8  E10A               	bnz	i1u134_20
  6207   0012DA  0E5F               	movlw	95
  6208   0012DC  5C05               	subwf	??_isprint^0,w,c
  6209   0012DE  A0D8               	btfss	status,0,c
  6210   0012E0  EF74  F009         	goto	i1u134_21
  6211   0012E4  EF77  F009         	goto	i1u134_20
  6212   0012E8                     i1u134_21:
  6213   0012E8  0E01               	movlw	1
  6214   0012EA  EF78  F009         	goto	i1u135_20
  6215   0012EE                     i1u134_20:
  6216   0012EE  0E00               	movlw	0
  6217   0012F0                     i1u135_20:
  6218   0012F0  6E03               	movwf	?_isprint^0,c
  6219   0012F2  6A04               	clrf	(?_isprint+1)^0,c
  6220   0012F4  0012               	return		;funcret
  6221   0012F6                     __end_of_isprint:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _H_ISR *****************
  6225 ;; Defined at:
  6226 ;;		line 72 in file "main.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6240 ;;      Params:         0       0       0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0
  6242 ;;      Temps:          2       0       0       0       0       0       0
  6243 ;;      Totals:         2       0       0       0       0       0       0
  6244 ;;Total ram usage:        2 bytes
  6245 ;; Hardware stack levels used: 1
  6246 ;; Hardware stack levels required when called: 1
  6247 ;; This function calls:
  6248 ;;		_update_time
  6249 ;; This function is called by:
  6250 ;;		Interrupt level 2
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	intcode
  6255   000008                     __pintcode:
  6256                           	callstack 0
  6257   000008                     _H_ISR:
  6258                           	callstack 20
  6259                           
  6260                           ;incstack = 0
  6261   000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6262   00000A  ED68  F004         	call	int_func,f	;refresh shadow registers
  6263                           
  6264                           	psect	intcode_body
  6265   0008D0                     __pintcode_body:
  6266                           	callstack 20
  6267   0008D0                     int_func:
  6268                           	callstack 20
  6269   0008D0  0006               	pop		; remove dummy address from shadow register refresh
  6270   0008D2                     
  6271                           ;main.c: 73:     if (PIR1bits.TMR2IF) {
  6272   0008D2  A29E               	btfss	158,1,c	;volatile
  6273   0008D4  EF6E  F004         	goto	i2u153_41
  6274   0008D8  EF70  F004         	goto	i2u153_40
  6275   0008DC                     i2u153_41:
  6276   0008DC  EF73  F004         	goto	i2l2436
  6277   0008E0                     i2u153_40:
  6278   0008E0                     
  6279                           ;main.c: 74:         update_time();
  6280   0008E0  ECD5  F009         	call	_update_time	;wreg free
  6281   0008E4                     
  6282                           ;main.c: 75:         PIR1bits.TMR2IF = 0;
  6283   0008E4  929E               	bcf	158,1,c	;volatile
  6284   0008E6                     i2l2436:
  6285                           
  6286                           ;main.c: 78:     if(INTCONbits.INT0IF) {
  6287   0008E6  A2F2               	btfss	242,1,c	;volatile
  6288   0008E8  EF78  F004         	goto	i2u154_41
  6289   0008EC  EF7A  F004         	goto	i2u154_40
  6290   0008F0                     i2u154_41:
  6291   0008F0  EFC8  F004         	goto	i2l80
  6292   0008F4                     i2u154_40:
  6293   0008F4                     
  6294                           ;main.c: 79:         if(state == '0')state = '1';
  6295   0008F4  0E30               	movlw	48
  6296   0008F6  0100               	movlb	0	; () banked
  6297   0008F8  19FC               	xorwf	_state& (0+255),w,b
  6298   0008FA  A4D8               	btfss	status,2,c
  6299   0008FC  EF82  F004         	goto	i2u155_41
  6300   000900  EF84  F004         	goto	i2u155_40
  6301   000904                     i2u155_41:
  6302   000904  EF88  F004         	goto	i2l2442
  6303   000908                     i2u155_40:
  6304   000908                     
  6305                           ; BSR set to: 0
  6306   000908  0E31               	movlw	49
  6307   00090A  6FFC               	movwf	_state& (0+255),b
  6308   00090C  EFBC  F004         	goto	i2l2458
  6309   000910                     i2l2442:
  6310                           
  6311                           ; BSR set to: 0
  6312   000910  0E31               	movlw	49
  6313   000912  19FC               	xorwf	_state& (0+255),w,b
  6314   000914  A4D8               	btfss	status,2,c
  6315   000916  EF8F  F004         	goto	i2u156_41
  6316   00091A  EF91  F004         	goto	i2u156_40
  6317   00091E                     i2u156_41:
  6318   00091E  EF95  F004         	goto	i2l2446
  6319   000922                     i2u156_40:
  6320   000922                     
  6321                           ; BSR set to: 0
  6322   000922  0E32               	movlw	50
  6323   000924  6FFC               	movwf	_state& (0+255),b
  6324   000926  EFBC  F004         	goto	i2l2458
  6325   00092A                     i2l2446:
  6326                           
  6327                           ; BSR set to: 0
  6328   00092A  0E32               	movlw	50
  6329   00092C  19FC               	xorwf	_state& (0+255),w,b
  6330   00092E  A4D8               	btfss	status,2,c
  6331   000930  EF9C  F004         	goto	i2u157_41
  6332   000934  EF9E  F004         	goto	i2u157_40
  6333   000938                     i2u157_41:
  6334   000938  EFA2  F004         	goto	i2l2450
  6335   00093C                     i2u157_40:
  6336   00093C                     
  6337                           ; BSR set to: 0
  6338   00093C  0E33               	movlw	51
  6339   00093E  6FFC               	movwf	_state& (0+255),b
  6340   000940  EFBC  F004         	goto	i2l2458
  6341   000944                     i2l2450:
  6342                           
  6343                           ; BSR set to: 0
  6344   000944  0E33               	movlw	51
  6345   000946  19FC               	xorwf	_state& (0+255),w,b
  6346   000948  A4D8               	btfss	status,2,c
  6347   00094A  EFA9  F004         	goto	i2u158_41
  6348   00094E  EFAB  F004         	goto	i2u158_40
  6349   000952                     i2u158_41:
  6350   000952  EFAF  F004         	goto	i2l2454
  6351   000956                     i2u158_40:
  6352   000956                     
  6353                           ; BSR set to: 0
  6354   000956  0E34               	movlw	52
  6355   000958  6FFC               	movwf	_state& (0+255),b
  6356   00095A  EFBC  F004         	goto	i2l2458
  6357   00095E                     i2l2454:
  6358                           
  6359                           ; BSR set to: 0
  6360   00095E  0E34               	movlw	52
  6361   000960  19FC               	xorwf	_state& (0+255),w,b
  6362   000962  A4D8               	btfss	status,2,c
  6363   000964  EFB6  F004         	goto	i2u159_41
  6364   000968  EFB8  F004         	goto	i2u159_40
  6365   00096C                     i2u159_41:
  6366   00096C  EFBC  F004         	goto	i2l74
  6367   000970                     i2u159_40:
  6368   000970                     
  6369                           ; BSR set to: 0
  6370   000970  0E30               	movlw	48
  6371   000972  6FFC               	movwf	_state& (0+255),b
  6372   000974  EFBC  F004         	goto	i2l2458
  6373   000978                     i2l74:
  6374   000978                     i2l2458:
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;main.c: 85:         INTCONbits.INT0IF = 0;
  6378   000978  92F2               	bcf	242,1,c	;volatile
  6379   00097A                     
  6380                           ; BSR set to: 0
  6381                           ;main.c: 86:         _delay((unsigned long)((500)*(8000000/4000.0)));
  6382   00097A  0E06               	movlw	6
  6383   00097C  6E02               	movwf	(??_H_ISR+1)^0,c
  6384   00097E  0E13               	movlw	19
  6385   000980  6E01               	movwf	??_H_ISR^0,c
  6386   000982  0EAE               	movlw	174
  6387   000984                     i2u170_47:
  6388   000984  2EE8               	decfsz	wreg,f,c
  6389   000986  D7FE               	bra	i2u170_47
  6390   000988  2E01               	decfsz	??_H_ISR^0,f,c
  6391   00098A  D7FC               	bra	i2u170_47
  6392   00098C  2E02               	decfsz	(??_H_ISR+1)^0,f,c
  6393   00098E  D7FA               	bra	i2u170_47
  6394   000990                     i2l80:
  6395   000990  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6396   000992  0011               	retfie		f
  6397   000994                     __end_of_H_ISR:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _update_time *****************
  6401 ;; Defined at:
  6402 ;;		line 35 in file "timer.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6416 ;;      Params:         0       0       0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_H_ISR
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text41
  6430   0013AA                     __ptext41:
  6431                           	callstack 0
  6432   0013AA                     _update_time:
  6433                           	callstack 20
  6434   0013AA                     
  6435                           ;timer.c: 36:     cnt++;
  6436   0013AA  0100               	movlb	0	; () banked
  6437   0013AC  4BFD               	infsnz	_cnt& (0+255),f,b
  6438   0013AE  2BFE               	incf	(_cnt+1)& (0+255),f,b
  6439   0013B0                     
  6440                           ; BSR set to: 0
  6441   0013B0  0012               	return		;funcret
  6442   0013B2                     __end_of_update_time:
  6443                           	callstack 0
  6444                           
  6445                           	psect	rparam
  6446   000001                     ___rparam_used  equ	1
  6447   000000                     ___param_bank   equ	0
  6448   000000                     __Lparam        equ	__Lrparam
  6449   000000                     __Hparam        equ	__Hrparam
  6450                           
  6451                           	psect	temp
  6452   000030                     btemp:
  6453                           	callstack 0
  6454   000030                     	ds	1
  6455   000030                     int$flags       set	btemp
  6456   000031                     wtemp8          set	btemp+1
  6457   000031                     ttemp5          set	btemp+1
  6458   000034                     ttemp6          set	btemp+4
  6459   000038                     ttemp7          set	btemp+8
  6460                           
  6461                           	psect	idloc
  6462                           
  6463                           ;Config register IDLOC0 @ 0x200000
  6464                           ;	unspecified, using default values
  6465   200000                     	org	2097152
  6466   200000  FF                 	db	255
  6467                           
  6468                           ;Config register IDLOC1 @ 0x200001
  6469                           ;	unspecified, using default values
  6470   200001                     	org	2097153
  6471   200001  FF                 	db	255
  6472                           
  6473                           ;Config register IDLOC2 @ 0x200002
  6474                           ;	unspecified, using default values
  6475   200002                     	org	2097154
  6476   200002  FF                 	db	255
  6477                           
  6478                           ;Config register IDLOC3 @ 0x200003
  6479                           ;	unspecified, using default values
  6480   200003                     	org	2097155
  6481   200003  FF                 	db	255
  6482                           
  6483                           ;Config register IDLOC4 @ 0x200004
  6484                           ;	unspecified, using default values
  6485   200004                     	org	2097156
  6486   200004  FF                 	db	255
  6487                           
  6488                           ;Config register IDLOC5 @ 0x200005
  6489                           ;	unspecified, using default values
  6490   200005                     	org	2097157
  6491   200005  FF                 	db	255
  6492                           
  6493                           ;Config register IDLOC6 @ 0x200006
  6494                           ;	unspecified, using default values
  6495   200006                     	org	2097158
  6496   200006  FF                 	db	255
  6497                           
  6498                           ;Config register IDLOC7 @ 0x200007
  6499                           ;	unspecified, using default values
  6500   200007                     	org	2097159
  6501   200007  FF                 	db	255
  6502                           
  6503                           	psect	config
  6504                           
  6505                           ; Padding undefined space
  6506   300000                     	org	3145728
  6507   300000  FF                 	db	255
  6508                           
  6509                           ;Config register CONFIG1H @ 0x300001
  6510                           ;	Oscillator Selection bits
  6511                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6512                           ;	Fail-Safe Clock Monitor Enable bit
  6513                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6514                           ;	Internal/External Oscillator Switchover bit
  6515                           ;	IESO = ON, Oscillator Switchover mode enabled
  6516   300001                     	org	3145729
  6517   300001  88                 	db	136
  6518                           
  6519                           ;Config register CONFIG2L @ 0x300002
  6520                           ;	Power-up Timer Enable bit
  6521                           ;	PWRT = OFF, PWRT disabled
  6522                           ;	Brown-out Reset Enable bits
  6523                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6524                           ;	Brown Out Reset Voltage bits
  6525                           ;	BORV = 3, Minimum setting
  6526   300002                     	org	3145730
  6527   300002  1F                 	db	31
  6528                           
  6529                           ;Config register CONFIG2H @ 0x300003
  6530                           ;	Watchdog Timer Enable bit
  6531                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6532                           ;	Watchdog Timer Postscale Select bits
  6533                           ;	WDTPS = 1, 1:1
  6534   300003                     	org	3145731
  6535   300003  00                 	db	0
  6536                           
  6537                           ; Padding undefined space
  6538   300004                     	org	3145732
  6539   300004  FF                 	db	255
  6540                           
  6541                           ;Config register CONFIG3H @ 0x300005
  6542                           ;	CCP2 MUX bit
  6543                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6544                           ;	PORTB A/D Enable bit
  6545                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6546                           ;	Low-Power Timer1 Oscillator Enable bit
  6547                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6548                           ;	MCLR Pin Enable bit
  6549                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6550   300005                     	org	3145733
  6551   300005  83                 	db	131
  6552                           
  6553                           ;Config register CONFIG4L @ 0x300006
  6554                           ;	Stack Full/Underflow Reset Enable bit
  6555                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6556                           ;	Single-Supply ICSP Enable bit
  6557                           ;	LVP = OFF, Single-Supply ICSP disabled
  6558                           ;	Extended Instruction Set Enable bit
  6559                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6560                           ;	Background Debugger Enable bit
  6561                           ;	DEBUG = 0x1, unprogrammed default
  6562   300006                     	org	3145734
  6563   300006  81                 	db	129
  6564                           
  6565                           ; Padding undefined space
  6566   300007                     	org	3145735
  6567   300007  FF                 	db	255
  6568                           
  6569                           ;Config register CONFIG5L @ 0x300008
  6570                           ;	Code Protection bit
  6571                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6572                           ;	Code Protection bit
  6573                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6574                           ;	Code Protection bit
  6575                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6576                           ;	Code Protection bit
  6577                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6578   300008                     	org	3145736
  6579   300008  0F                 	db	15
  6580                           
  6581                           ;Config register CONFIG5H @ 0x300009
  6582                           ;	Boot Block Code Protection bit
  6583                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6584                           ;	Data EEPROM Code Protection bit
  6585                           ;	CPD = OFF, Data EEPROM not code-protected
  6586   300009                     	org	3145737
  6587   300009  C0                 	db	192
  6588                           
  6589                           ;Config register CONFIG6L @ 0x30000A
  6590                           ;	Write Protection bit
  6591                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6592                           ;	Write Protection bit
  6593                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6594                           ;	Write Protection bit
  6595                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6596                           ;	Write Protection bit
  6597                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6598   30000A                     	org	3145738
  6599   30000A  0F                 	db	15
  6600                           
  6601                           ;Config register CONFIG6H @ 0x30000B
  6602                           ;	Configuration Register Write Protection bit
  6603                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6604                           ;	Boot Block Write Protection bit
  6605                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6606                           ;	Data EEPROM Write Protection bit
  6607                           ;	WRTD = OFF, Data EEPROM not write-protected
  6608   30000B                     	org	3145739
  6609   30000B  E0                 	db	224
  6610                           
  6611                           ;Config register CONFIG7L @ 0x30000C
  6612                           ;	Table Read Protection bit
  6613                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6614                           ;	Table Read Protection bit
  6615                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6616                           ;	Table Read Protection bit
  6617                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6618                           ;	Table Read Protection bit
  6619                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6620   30000C                     	org	3145740
  6621   30000C  0F                 	db	15
  6622                           
  6623                           ;Config register CONFIG7H @ 0x30000D
  6624                           ;	Boot Block Table Read Protection bit
  6625                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6626   30000D                     	org	3145741
  6627   30000D  40                 	db	64
  6628                           tosu	equ	0xFFF
  6629                           tosh	equ	0xFFE
  6630                           tosl	equ	0xFFD
  6631                           stkptr	equ	0xFFC
  6632                           pclatu	equ	0xFFB
  6633                           pclath	equ	0xFFA
  6634                           pcl	equ	0xFF9
  6635                           tblptru	equ	0xFF8
  6636                           tblptrh	equ	0xFF7
  6637                           tblptrl	equ	0xFF6
  6638                           tablat	equ	0xFF5
  6639                           prodh	equ	0xFF4
  6640                           prodl	equ	0xFF3
  6641                           indf0	equ	0xFEF
  6642                           postinc0	equ	0xFEE
  6643                           postdec0	equ	0xFED
  6644                           preinc0	equ	0xFEC
  6645                           plusw0	equ	0xFEB
  6646                           fsr0h	equ	0xFEA
  6647                           fsr0l	equ	0xFE9
  6648                           wreg	equ	0xFE8
  6649                           indf1	equ	0xFE7
  6650                           postinc1	equ	0xFE6
  6651                           postdec1	equ	0xFE5
  6652                           preinc1	equ	0xFE4
  6653                           plusw1	equ	0xFE3
  6654                           fsr1h	equ	0xFE2
  6655                           fsr1l	equ	0xFE1
  6656                           bsr	equ	0xFE0
  6657                           indf2	equ	0xFDF
  6658                           postinc2	equ	0xFDE
  6659                           postdec2	equ	0xFDD
  6660                           preinc2	equ	0xFDC
  6661                           plusw2	equ	0xFDB
  6662                           fsr2h	equ	0xFDA
  6663                           fsr2l	equ	0xFD9
  6664                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    510
    Data        4
    BSS         405
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     44      47
    BANK0           128    121     127
    BANK1           256    200     200
    BANK2           256    200     200
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           244      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    Get_Timer_H@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), 

    Get_Timer_M@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@mm(BANK2[100]), 

    GetString@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), 

    itoa@s	PTR unsigned char  size(2) Largest target is 100
		 -> Get_Timer_H@str2(BANK0[100]), Get_Timer_M@str2(BANK0[100]), main@tmp(BANK2[100]), 

    OLED_Print@bitmap	PTR const unsigned char  size(2) Largest target is 240
		 -> b(CODE[16]), clock(CODE[32]), dot(CODE[4]), dots(CODE[16]), 
		 -> foots(CODE[42]), heart1(CODE[32]), heart2(CODE[32]), m(CODE[16]), 
		 -> number(CODE[240]), p(CODE[16]), temp(CODE[32]), thermometer(CODE[32]), 

    OLED_PrintNumber@str	PTR const unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), main@mm(BANK2[100]), main@tmp(BANK2[100]), 

    ParsingData@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@str(BANK1[100]), 

    ParsingData@token	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    reverse@first	PTR unsigned char  size(2) Largest target is 100
		 -> Get_Timer_H@str2(BANK0[100]), Get_Timer_M@str2(BANK0[100]), main@tmp(BANK2[100]), 

    reverse@last	PTR unsigned char  size(2) Largest target is 100
		 -> Get_Timer_H@str2(BANK0[100]), Get_Timer_M@str2(BANK0[100]), main@tmp(BANK2[100]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), main@mm(BANK2[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), main@mm(BANK2[100]), main@str(BANK1[100]), main@tmp(BANK2[100]), 
		 -> ParsingData@input(BANK0[100]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), main@mm(BANK2[100]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 100
		 -> Get_Timer_H@str2(BANK0[100]), Get_Timer_M@str2(BANK0[100]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), main@mm(BANK2[100]), main@str(BANK1[100]), main@tmp(BANK2[100]), 
		 -> ParsingData@input(BANK0[100]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 100
		 -> main@hh(BANK1[100]), main@mm(BANK2[100]), main@str(BANK1[100]), main@tmp(BANK2[100]), 
		 -> ParsingData@input(BANK0[100]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 100
		 -> buffer(BANK3[100]), main@str(BANK1[100]), STR_1(CODE[1]), STR_2(CODE[1]), 
		 -> STR_3(CODE[1]), STR_7(CODE[2]), STR_8(CODE[2]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 

    test@s	PTR unsigned char  size(1) Largest target is 100
		 -> ParsingData@input(BANK0[100]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_OLED_PrintNumber
    _OLED_Initialize->_I2C_Write
    _ParsingData->_strtok
    _test->_strlen
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _OLED_PrintNumber->_OLED_PrintChar
    _OLED_PrintChar->_OLED_Print
    _OLED_Print->_OLED_SetPageAndColumnAddress
    _OLED_Clear->_OLED_SetPageAndColumnAddress
    _OLED_SetPageAndColumnAddress->_I2C_Write
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _Get_Timer_M->_itoa
    _Get_Timer_H->_itoa
    _itoa->___awdiv
    _GetString->_strcpy

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->_isprint

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ParsingData

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               414   414      0   10700
                                             42 COMRAM     2     2      0
                                            113 BANK0      8     8      0
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
                        _ClearBuffer
                          _GetString
                        _Get_Timer_H
                        _Get_Timer_M
                         _OLED_Clear
                         _OLED_Print
                     _OLED_PrintChar
                   _OLED_PrintNumber
                        _ParsingData
                  _SYSTEM_Initialize
                            ___awdiv
                          _init_time
                               _itoa
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _init_time                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      29
               _INTTERUPT_Initialize
                    _OLED_Initialize
              _OSCILLATOR_Initialize
                   _TIMER_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TIMER_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OLED_Initialize                                      0     0      0      29
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _INTTERUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ParsingData                                        119   113      6    1574
                                             25 COMRAM     6     0      6
                                              0 BANK0    113   113      0
                        _ClearBuffer
                               _atoi
                             _strcpy
                             _strtok
                               _test
 ---------------------------------------------------------------------------------
 (2) _test                                                 3     2      1     271
                                             15 COMRAM     3     2      1
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      91
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      87
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _strtok                                               3     0      3     554
                                             22 COMRAM     3     0      3
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               6     3      3     185
                                             16 COMRAM     6     3      3
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              6     3      3     185
                                             16 COMRAM     6     3      3
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               4     0      4      92
                                             12 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     231
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _OLED_PrintNumber                                     8     3      5    1244
                                             34 COMRAM     8     3      5
                     _OLED_PrintChar
 ---------------------------------------------------------------------------------
 (2) _OLED_PrintChar                                       6     2      4    1011
                                             28 COMRAM     6     2      4
                         _OLED_Print
 ---------------------------------------------------------------------------------
 (3) _OLED_Print                                          10     3      7     383
                                             18 COMRAM    10     3      7
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
       _OLED_SetPageAndColumnAddress
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           2     2      0     205
                                             18 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
       _OLED_SetPageAndColumnAddress
 ---------------------------------------------------------------------------------
 (4) _OLED_SetPageAndColumnAddress                         4     1      3     130
                                             14 COMRAM     4     1      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      29
                                             13 COMRAM     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             1     1      0       0
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Get_Timer_M                                        106   104      2    2109
                                             30 COMRAM     2     0      2
                                              0 BANK0    104   104      0
                            ___awdiv
                            ___awmod
                               _itoa
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _Get_Timer_H                                        106   104      2    1809
                                             30 COMRAM     2     0      2
                                              0 BANK0    104   104      0
                            ___awdiv
                               _itoa
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     2      3     124
                                             12 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _itoa                                                10     6      4    1118
                                             20 COMRAM    10     6      4
                            ___awdiv
                            ___awmod
                            _reverse
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4     159
                                             12 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     300
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     310
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _GetString                                            3     1      2     200
                                             20 COMRAM     3     1      2
                        _ClearBuffer
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4      87
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lo_ISR                                               5     5      0     199
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (8) _MyusartRead                                          1     1      0     199
                                              6 COMRAM     1     1      0
                            _isprint
                            i1_putch
 ---------------------------------------------------------------------------------
 (9) i1_putch                                              1     1      0      87
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _isprint                                              4     2      2      23
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _H_ISR                                               2     2      0       0
                                              0 COMRAM     2     2      0
                        _update_time
 ---------------------------------------------------------------------------------
 (11) _update_time                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
     _ClearBuffer
     _strcpy
   _Get_Timer_H
     ___awdiv
     _itoa
       ___awdiv
       ___awmod
       _reverse
     _strcat
     _strcpy
   _Get_Timer_M
     ___awdiv
     ___awmod
     _itoa
     _strcat
     _strcpy
   _OLED_Clear
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _OLED_SetPageAndColumnAddress
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _OLED_Print
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _OLED_SetPageAndColumnAddress
   _OLED_PrintChar
     _OLED_Print
   _OLED_PrintNumber
     _OLED_PrintChar
   _ParsingData
     _ClearBuffer
     _atoi
     _strcpy
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
     _test
       _putch
       _strlen
   _SYSTEM_Initialize
     _INTTERUPT_Initialize
     _OLED_Initialize
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _OSCILLATOR_Initialize
     _TIMER_Initialize
     _UART_Initialize
   ___awdiv
   _init_time
   _itoa
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     _isprint
     i1_putch

 _H_ISR (ROOT)
   _update_time

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0     200     78.1%
BITBANK3           256      0       0      0.0%
BANK3              256      0     200     78.1%
BITBANK2           256      0       0      0.0%
BANK2              256    200     200     78.1%
BITBANK1           256      0       0      0.0%
BANK1              256    200     200     78.1%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128    121     127     99.2%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     44      47     37.3%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFRll         11      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRlh          8      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     974      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 16 10:31:08 2025

                            _update_time 13AA                                        _b 7D97  
                                      _m 7D77                                        _p 7D87  
                           ___awdiv@sign 0012                                       bsr 0FE0  
                                    l301 0C2E                                      l143 121E  
                                    l152 0E32                                      l161 0E68  
                                    l162 0E6C                                      l146 08CE  
                                    l155 0E44                                      l252 134E  
                                    l261 1364                                      l350 131A  
                                    l167 125E                                      l175 0DA6  
                                    l159 0E5A                                      l255 13A8  
                                    l344 13A0                                      l264 1374  
                                    l353 1396                                      l290 0726  
                                    l370 0E0A                                      l258 1338  
                                    l282 1380                                      l347 12F6  
                                    l267 07FA                                      l356 138C  
                                    l364 11D4                                      l381 053E  
                                    l390 0D3C                                      l279 1136  
                                    l359 129A                                      l624 0A54  
                                    l297 0CBC                                      l637 0B02  
                                    _GIE 7F97                                      _PR2 0FCB  
                                    _PEN 7E2A                                      u900 0E20  
                                    _SEN 7E28                                      u901 0E1C  
                                    u910 0E32                                      u911 0E2E  
                                    u920 0E40                                      u921 0E3C  
                                    u850 1304                                      u930 0E52  
                                    u851 1300                                      u931 0E4E  
                                    u860 131A                                      u940 0E68  
                                    u861 1316                                      u941 0E64  
                                    u870 10B0                                      u950 12BC  
                                    u871 10AC                                      u951 12B8  
                                    u960 1136                                      u880 10DC  
                                    u961 1132                                      u881 10D8  
                                    u970 09A4                                      u890 0E06  
                                    u971 09A0                                      u891 0E02  
                                    u980 09BE                                      u981 09BA  
                                    u990 09E4                                      u991 09E0  
                      ??_OLED_Initialize 000F                                      _cnt 00FD  
                                    _dot 7DB7                             ___awmod@sign 0012  
                                    prod 0FF3                                      wreg 0FE8  
              OLED_PrintChar@startColumn 001E                                     l1101 1040  
                                   l2000 0ACE                                     l2010 0AFA  
                                   l2002 0AD6                                     l1130 0F8E  
                                   l1107 12C8                                     l2004 0ADC  
                                   l2020 0EF8                                     l2100 11F0  
                                   l1133 1094                                     l1117 0BA0  
                                   l2030 1220                                     l2006 0AE2  
                                   l2022 0F30                                     l2014 0ED0  
                                   l2110 0B28                                     l2102 11F4  
                                   l1135 10E4                                     l1119 0B9C  
                                   l2040 123A                                     l2008 0AF2  
                                   l1080 064A                                     l2024 0F3C  
                                   l2016 0EDC                                     l2104 1212  
                                   l2200 073C                                     l1129 0F86  
                                   l1145 0F26                                     l2042 1256  
                                   l2050 0654                                     l2026 0F42  
                                   l1146 0F2E                                     l2018 0EE2  
                                   l2130 0B9E                                     l2122 0B62  
                                   l2114 0B2E                                     l2106 0B04  
                                   l2210 0754                                     l2202 0742  
                                   l2036 1228                                     l2044 0FEE  
                                   l2060 06A0                                     l2052 0662  
                                   l2140 0550                                     l2028 0F58  
                                   l2124 0B78                                     l2116 0B42  
                                   l2108 0B14                                     l2220 0772  
                                   l2212 075A                                     l2204 0748  
                                   l2300 1346                                     l1077 0642  
                                   l2038 1236                                     l2046 0FF6  
                                   l2310 0D84                                     l2070 06F0  
                                   l2062 06A4                                     l2054 0666  
                                   l2150 05A8                                     l2142 0568  
                                   l2134 0540                                     l2126 0B8E  
                                   l2118 0B58                                     l2230 0790  
                                   l2222 0778                                     l2214 0760  
                                   l2206 074A                                     l2302 134A  
                                   l1095 0FEC                                     l2320 0D9E  
                                   l2312 0D88                                     l2304 0D3E  
                                   l2072 06F4                                     l2064 06C0  
                                   l2056 066E                                     l2048 064C  
                                   l2080 0466                                     l2400 0CC8  
                                   l2160 0616                                     l2144 0586  
                                   l2136 0548                                     l2128 0B96  
                                   l2240 07AE                                     l2232 0796  
                                   l2224 077E                                     l2216 0766  
                                   l2208 074E                                     l2306 0D5C  
                                   l2074 0702                                     l2066 06D2  
                                   l2058 067A                                     l2090 04E8  
                                   l2082 0478                                     l2410 0D10  
                                   l2402 0CE6                                     l2162 0626  
                                   l2154 05C4                                     l2146 059E  
                                   l2138 054E                                     l2330 081C  
                                   l2250 07CC                                     l2242 07B4  
                                   l2234 079C                                     l2226 0784  
                                   l2218 076C                                     l2170 131C  
                                   l2308 0D70                                     l2068 06E0  
                                   l2092 050E                                     l2084 049E  
                                   l2076 042E                                     l2404 0D00  
                                   l2148 05A2                                     l2340 0864  
                                   l2332 0830                                     l2324 07FC  
                                   l2260 07EA                                     l2252 07D2  
                                   l2244 07BA                                     l2236 07A2  
                                   l2228 078A                                     l2180 1330  
                                   l2172 1326                                     l2500 016E  
                                   l2318 0D94                                     l2094 0514  
                                   l2086 04B0                                     l2078 0440  
                                   l2406 0D08                                     l2414 0D24  
                                   l2158 05F8                                     l2350 08A8  
                                   l2342 0874                                     l2334 0838  
                                   l2326 0806                                     l2262 07F0  
                                   l2254 07D8                                     l2246 07C0  
                                   l2238 07A8                                     l2190 0728  
                                   l2270 1370                                     l2182 1332  
                                   l2174 132A                                     l2510 023E  
                                   l2502 0188                                     l2280 0FC0  
                                   l2360 118A                                     l2088 04D6  
                                   l2408 0D0C                                     l2096 11D6  
                                   l2352 08B0                                     l2344 0888  
                                   l2336 0848                                     l2328 0818  
                                   l2264 07F6                                     l2256 07DE  
                                   l2248 07C6                                     l2192 072E  
                                   l2168 13A2                                     l2272 1372  
                                   l2184 1334                                     l2176 132C  
                                   l2520 02C8                                     l2512 0260  
                                   l2504 01C8                                     l2282 0FC6  
                                   l2274 0F90                                     l2370 11BA  
                                   l2362 11AC                                     l2098 11E2  
                                   l2354 08B8                                     l2346 0890  
                                   l2338 085C                                     l2258 07E4  
                                   l2194 0736                                     l2266 1366  
                                   l2186 1336                                     l2178 132E  
                                   l2530 033E                                     l2522 02E2  
                                   l2514 0274                                     l2506 020C  
                                   l2276 0F9C                                     l2380 0C68  
                                   l2372 11BE                                     l1900 0E06  
                                   l2356 08BC                                     l2348 08A0  
                                   l2188 1350                                     l2196 0738  
                                   l2268 136E                                     l2540 03AE  
                                   l2532 0360                                     l2524 02FC  
                                   l2516 0292                                     l2508 0220  
                                   l2278 0FA0                                     l2382 0C7A  
                                   l2390 0BDA                                     l2374 11D0  
                                   l1902 0E0E                                     l1910 129C  
                                   l2198 073A                                     l2294 133A  
                                   l2542 03C4                                     l2534 036A  
                                   l2526 030E                                     l2518 02B4  
                                   l2470 0078                                     l2462 0070  
                                   l1920 10E6                                     l2384 0C98  
                                   l2392 0BEC                                     l2368 11B4  
                                   l1904 0E20                                     l1912 12A4  
                                   l2296 133E                                     l2376 1376  
                                   l2536 037E                                     l2528 0330  
                                   l2480 00CC                                     l2472 0096  
                                   l2464 0074                                     l1930 111A  
                                   l1922 10EA                                     l2386 0CAC  
                                   l2378 0C30                                     l2394 0C0A  
                                   l1906 0E40                                     l1914 12A6  
                                   l2298 1342                                     l2538 0398  
                                   l2546 03DE                                     l2490 0108  
                                   l2482 00D0                                     l2474 00B0  
                                   l2466 0078                                     l1940 09AC  
                                   l1924 10F6                                     l1932 1120  
                                   l2396 0C1E                                     l2388 0BA2  
                                   l1860 139A                                     l1908 0E52  
                                   l1916 12BC                                     l2548 040E  
                                   l2492 011C                                     l2484 00DC  
                                   l2476 00C4                                     l2468 0078  
                                   l1950 09D2                                     l1942 09B0  
                                   l1934 0994                                     l1926 110A  
                                   l1854 12F6                                     l1862 139E  
                                   l1870 1392                                     l2398 0CC0  
                                   l2494 0134                                     l2486 00E8  
                                   l2478 00C8                                     l1960 0A08  
                                   l1952 09E4                                     l1944 09BE  
                                   l1936 0996                                     l1928 1116  
                                   l1856 1304                                     l1872 1394  
                                   l1864 1384                                     l2496 0156  
                                   l2488 00F4                                     l1962 0A1E  
                                   l1954 09EC                                     l1970 0A34  
                                   l1946 09C6                                     l1938 09A4  
                                   l1858 1398                                     l1866 1388  
                                   l1874 1262                                     l1890 0DCC  
                                   l1882 10BC                                     l2498 0162  
                                   l1972 0A44                                     l1964 0A26  
                                   l1956 09F4                                     l1948 09CA  
                                   l1980 0A58                                     l1868 138E  
                                   l1892 0DD8                                     l1884 10DC  
                                   l1876 1094                                     l1974 0A4C  
                                   l1966 0A28                                     l1958 0A02  
                                   l1990 0A88                                     l1982 0A66  
                                   l1894 0DE8                                     l1878 10B0  
                                   l1968 0A2E                                     l1992 0A9A  
                                   l1984 0A6E                                     l1896 0DEC  
                                   l1888 0DAA                                     l1994 0AA2  
                                   l1986 0A72                                     l1978 0A56  
                                   l1898 0DF0                                     l1996 0AAA  
                                   l1988 0A80                                     l1998 0AB8  
                                   STR_1 7DBE                                     STR_2 7DBE  
                                   STR_3 7DBE                                     STR_4 7DBD  
                                   STR_5 7DBD                                     STR_6 7DBD  
                                   STR_7 7DBB                                     STR_8 7DBB  
                                   u1000 0A02                                     _CREN 7D5C  
                                   u1001 09FE                                     u1010 0A1E  
                                   u1011 0A1A                                     u1020 0A44  
                                   u1100 0F26                                     u1021 0A40  
                                   u1101 0F22                                     u1030 0A66  
                                   u1110 0F58                                     u1031 0A62  
                                   u1111 0F54                                     u1040 0A80  
                                   u1200 0478                                     u1120 0F86  
                                   u1041 0A7C                                     u1201 0474  
                                   u1121 0F82                                     u1130 1256  
                                   u1050 0A9A                                     u1210 04B0  
                                   u1131 1252                                     u1051 0A96  
                                   u1211 04AC                                     u1140 102E  
                                   u1060 0AB8                                     u1220 04E8  
                                   u1300 059E                                     u1061 0AB4  
                                   u1221 04E4                                     u1301 059A  
                                   u1150 1040                                     u1070 0ACE  
                                   u1310 05C0                                     u1230 1212  
                                   u1151 103C                                     u1071 0ACA  
                                   u1311 05BC                                     u1231 120E  
                            ?_OLED_Clear 0001                                     u1080 0AF2  
                                   u1160 0662                                     u1320 0616  
                                   u1240 0B14                                     u1081 0AEE  
                                   u1161 065E                                     u1321 0612  
                                   u1241 0B10                                     u1170 06D2  
                                   u1330 0626                                     u1090 0EF8  
                                   u1250 0B28                                     u1147 1024  
                                   u1171 06CE                                     u1331 0622  
                                   u1091 0EF4                                     u1251 0B24  
                                   u1180 06E0                                     u1500 0D3C  
                                   u1260 0B58                                     u1181 06DC  
                                   u1501 0D38                                     u1261 0B54  
                                   u1430 0D5C                                     u1190 0440  
                                   u1270 0B8E                                     u1431 0D58  
                                   u1191 043C                                     u1271 0B8A  
                                   _LATC 0F8B                                     u1360 0FBC  
                                   u1280 0568                                     u1600 0096  
                                   u1361 0FB8                                     u1281 0564  
                                   u1441 08C6                                     u1601 0092  
                                   u1370 0FEC                                     u1450 11D0  
                                   u1290 0586                                     u1371 0FE8  
                                   u1451 11CC                                     u1291 0582  
                                   u1611 00A8                                     u1460 0C98  
                                   u1620 00C4                                     u1461 0C94  
                                   u1621 00C0                                     u1470 0C0A  
                                   u1471 0C06                                     u1631 00D6  
                                   u1480 0D00                                     u1481 0CFC  
                                   u1641 00E2                                     u1490 0D20  
                                   u1491 0D1C                                     u1651 00EE  
                                   u1660 030E                                     u1661 030A  
                                   u1697 0418                         ??_OLED_PrintChar 0021  
                                   _RCIF 7CF5                                     i2l80 0990  
                                   i2l74 0978                      __end_of_Get_Timer_H 0CBE  
                    __end_of_Get_Timer_M 0C30                              ?_OLED_Print 0013  
                                   _atoi 0540                                     _main 0070  
                                   _dots 7DA7                                     _itoa 064C  
                                   _temp 7CD7                                     _test 11D6  
                                   fsr0h 0FEA                                     fsr1h 0FE2  
                                   indf0 0FEF                                     fsr2h 0FDA  
                                   fsr0l 0FE9                                     indf1 0FE7  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     btemp 0030  
                       __end_of_I2C_Wait 131C                         __end_of_I2C_Stop 1398  
                    OLED_Print@startPage 001A                                     prodh 0FF4  
                                   prodl 0FF3                                     start 006C  
                        __end_ofi1_putch 0ED0                          MyusartRead@data 0007  
                           ___param_bank 0000                         ?_UART_Initialize 0001  
          __end_of_OSCILLATOR_Initialize 13AA                                    ?_atoi 000D  
                                  ?_main 0001                                    ?_itoa 0015  
                        __end_of___awdiv 0A56                          __end_of___awmod 0B04  
                                  ?_test 0010                          ___awdiv@divisor 000F  
                                  _T2CON 0FCA                                    _IRCF0 7E9C  
                                  _IRCF1 7E9D                                    _IRCF2 7E9E  
                                  i1l152 0E94                                    i1l161 0ECA  
                                  i1l162 0ECE                                    i1l155 0EA6  
                                  i1l171 1188                                    i1l159 0EBC  
                                  i1l183 0054                                    i2l293 13B0  
                        ___awdiv@counter 0011                                    _RCREG 0FAE  
                                  _H_ISR 0008                                    _SPBRG 0FAF  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TXREG 0FAD                                    _clock 7D17  
                                  _foots 7CAD                                    atoi@n 0013  
                                  atoi@s 000D                                    _state 00FC  
                                  _putch 0E0C                              _ClearBuffer 1220  
                      __end_of_I2C_Start 13A2                          __end_of_isprint 12F6  
                 ??_INTTERUPT_Initialize 000D                        __end_of_I2C_Write 138E  
                                  itoa@i 001D                                    itoa@n 0015  
                                  itoa@s 0017                                    tablat 0FF5  
                        __end_of_reverse 1138                                    test@i 0011  
                                  test@s 0010                                    plusw0 0FEB  
                                  plusw2 0FDB                                    ttemp5 0031  
                                  ttemp6 0034                                    ttemp7 0038  
                                  status 0FD8                                    wtemp8 0031  
                        __end_of_strcspn 0F90                            ??_ParsingData 0020  
                        __initialization 1042                             __end_of_atoi 064C  
                           __end_of_main 042C                             __end_of_dots 7DB7  
                           __end_of_itoa 0728                             __end_of_temp 7CF7  
                           __end_of_test 1220                                   ??_atoi 000F  
                                 ??_main 002B                                   ??_itoa 0019  
                                 ??_test 0011                            __activetblptr 0002  
                                 ?_H_ISR 0001                      OLED_PrintNumber@str 0026  
                            _Get_Timer_H 0C30                              _Get_Timer_M 0BA2  
                                 _ADCON1 0FC1                         ___awdiv@dividend 000D  
                                 ?_putch 0001                           Get_Timer_H@str 001F  
                         Get_Timer_M@str 001F                                   i1l1083 12F4  
                                 i1l2164 12CA                                   i1l2420 1158  
                                 i1l2424 116E                                   i1l2416 1138  
                                 i1l2290 0EB4                                   i1l2426 117E  
                                 i1l2418 113C                                   i1l2284 0E70  
                                 i1l2428 1182                                   i1l2286 0E82  
                                 i1l2550 002E                                   i1l2288 0EA2  
                                 i1l2552 003C                                   i1l2554 004A  
                                 i1l2556 0050                                   i2l2430 08D2  
                                 i2l2440 0908                                   i2l2432 08E0  
                                 i2l2450 0944                                   i2l2442 0910  
                                 i2l2434 08E4                                   i2l2292 13AA  
                                 i2l2460 097A                                   i2l2452 0956  
                                 i2l2444 0922                                   i2l2436 08E6  
                                 i2l2454 095E                                   i2l2446 092A  
                                 i2l2438 08F4                                   i2l2456 0970  
                                 i2l2448 093C                                   i2l2458 0978  
                              ??i1_putch 0003                        ?_OLED_PrintNumber 0023  
                                 _SSPADD 0FC8                                   _SSPBUF 0FC9  
                     ??_OLED_PrintNumber 0028                                   _Lo_ISR 0018  
                              ??___awdiv 0011                                ??___awmod 0011  
                                 _heart1 7D57                                   _heart2 7D37  
                                 _buffer 0364                         _TIMER_Initialize 1366  
                                 clear_0 1068                                   clear_1 1074  
                       ___awdiv@quotient 0013                          ___awmod@divisor 000F  
                                 isa$std 0001                                   _number 7BBD  
                        ___awmod@counter 0011                      __end_of_ParsingData 08D0  
                                 main@hh 0164                                   main@mm 0200  
                                 _strcat 0F90                                   _strchr 1094  
                                 _strcpy 0FEE                                   _strlen 129C  
                                 _strtok 0B04                                   _strspn 0ED0  
                  OLED_Print@startColumn 0014                                ?_I2C_Wait 0001  
                              ?_I2C_Stop 0001                             __mediumconst 7BBC  
                              ??_isprint 0005                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                              ??_reverse 0011                                ??_strcspn 0014  
                      _SYSTEM_Initialize 133A                               __accesstop 0080  
                __end_of__initialization 1086                       ?_SYSTEM_Initialize 0001  
                          ___rparam_used 0001                            __end_of_H_ISR 0994  
                      __end_of_GetString 0DA8                          _OLED_Initialize 0728  
                         __pcstackCOMRAM 0001                             ?_update_time 0001  
                           __pidataBANK0 13B2                      ??_SYSTEM_Initialize 000F  
                          __end_of_clock 7D37                              i1putch@data 0003  
                          __end_of_foots 7CD7                            __end_of_putch 0E6E  
                 OLED_PrintNumber@column 002A                                  ??_H_ISR 0001  
                             ??_I2C_Wait 000D                               ??_I2C_Stop 000E  
                          ??_MyusartRead 0007                __end_of_SYSTEM_Initialize 1350  
                                ??_putch 000D                             ??_OLED_Clear 0013  
                             __pbssBANK0 00FD                               __pbssBANK3 0300  
                             __pbssBANK4 0400                             ??_OLED_Print 001A  
                                ?_Lo_ISR 0001                              _ParsingData 07FC  
                        Get_Timer_H@str2 0080                       __end_of_OLED_Clear 11D6  
                                ?_strcat 000D                                  ?_strchr 000D  
                                ?_strcpy 000D                                  ?_strlen 000D  
                                ?_strtok 0017                                  ?_strspn 0011  
                        Get_Timer_M@str2 0080                       __end_of_OLED_Print 0E0C  
   __end_of_OLED_SetPageAndColumnAddress 129C             _OLED_SetPageAndColumnAddress 1260  
                                _OSCTUNE 0F9B                                  _SSPCON1 0FC6  
                                _SSPCON2 0FC5                                  _SSPSTAT 0FC7  
                           ?_ClearBuffer 0001                      __end_of_MyusartRead 118A  
                                i1_putch 0E6E                  __end_of_OLED_Initialize 07FC  
                              _I2C_Start 1398                                _I2C_Write 1382  
                                __Hparam 0000                                  __Lparam 0000  
                                ___awdiv 0994                                  ___awmod 0A56  
                      Get_Timer_H@result 00E4                                  __pcinit 1042  
                                __ramtop 0600                                  __ptext0 0070  
                                __ptext1 1376                                  __ptext2 133A  
                                __ptext3 131C                                  __ptext4 1366  
                                __ptext5 13A2                                  __ptext6 0728  
                                __ptext7 1350                                  __ptext8 07FC  
                                __ptext9 11D6                        Get_Timer_M@result 00E4  
                  _OSCILLATOR_Initialize 13A2                        __end_of_init_time 1382  
                       ___awmod@dividend 000D                             ?_Get_Timer_H 001F  
                           ?_Get_Timer_M 001F                                  _isprint 12CA  
                                _reverse 10E6            ?_OLED_SetPageAndColumnAddress 000F  
                                atoi@neg 0012                                  main@val 00F3  
                                main@tmp 0264                                  main@str 0100  
                                _strcspn 0F30                           __pintcode_body 08D0  
                   end_of_initialization 1086                 __end_of_TIMER_Initialize 1376  
                          __Lmediumconst 7BBC                                  int_func 08D0  
                            reverse@last 000F                               ?_I2C_Start 0001  
                             ?_I2C_Write 0001                                _RCSTAbits 0FAB  
                                postdec1 0FE5                                  postinc0 0FEE  
                                postinc2 0FDE                                  strcat@i 0010  
                           ParsingData@s 001A                                  strchr@c 000F  
                                strchr@s 000D                                  strcpy@d 0013  
                                strlen@a 000F                                  strlen@s 000D  
                                strspn@c 0012                                  strspn@i 0015  
                                strtok@p 002F                                  strtok@s 0017  
                                strspn@s 0011                         OLED_Print@bitmap 0016  
                              _TRISBbits 0F93                                _TRISCbits 0F94  
                            _MyusartRead 1138                         ?_OLED_Initialize 0001  
                              _TXSTAbits 0FAC                           __end_of_Lo_ISR 006C  
                              _GetString 0D3E                              _BAUDCONbits 0FB8  
                         __end_of_heart1 7D77                           __end_of_heart2 7D57  
                 ?_OSCILLATOR_Initialize 0001                           __end_of_number 7CAD  
                         __end_of_strcat 0FEE                           __end_of_strchr 10E6  
                         __end_of_strcpy 1042                           __end_of_strlen 12CA  
                         __end_of_strtok 0BA2                           __end_of_strspn 0F30  
                    start_initialization 1042    OLED_SetPageAndColumnAddress@endColumn 0011  
                OLED_PrintNumber@endPage 0023                              __end_of_dot 7DBB  
                           ClearBuffer@i 000D                        ??_UART_Initialize 000D  
         ??_OLED_SetPageAndColumnAddress 0012                              ??_I2C_Start 000E  
                            ??_I2C_Write 000E                                 ??_Lo_ISR 0008  
                           ?_ParsingData 001A                              __pdataBANK0 00F9  
                             ?_GetString 0015                                 ??_strcat 0010  
                               ??_strchr 0011                                 ??_strcpy 0011  
                               ??_strlen 000F                                 ??_strtok 001A  
                               ??_strspn 0014                              __pbssCOMRAM 002D  
                          __pcstackBANK0 0080                            __pcstackBANK1 0100  
                          __pcstackBANK2 0200                                __end_of_b 7DA7  
                              __end_of_m 7D87                                __end_of_p 7D97  
                               ?i1_putch 0001    OLED_SetPageAndColumnAddress@startPage 0012  
                              _main$1698 00F1                         ParsingData@input 0080  
                       ParsingData@token 00F0                           _OLED_PrintChar 042C  
                              __pintcode 0008                            __pmediumconst 7BBC  
                               ?___awdiv 000D                                 ?___awmod 000D  
                       _OLED_PrintNumber 0CBE                              __pintcodelo 0018  
           OLED_PrintChar@which_to_print 0021                                 _I2C_Wait 12F6  
                               _I2C_Stop 138E                                 ?_isprint 0003  
                               ?_reverse 000D                                _init_time 1376  
                               ?_strcspn 0011                        ?_TIMER_Initialize 0001  
                               _IPR1bits 0F9F                                 _PIE1bits 0F9D  
                 __end_of_OLED_PrintChar 0540                       ??_TIMER_Initialize 000D  
                               i1u140_20 0EA2                                 i1u140_21 0E9E  
                               i1u141_20 0EB4                                 i1u141_21 0EB0  
                               i1u134_20 12EE                                 i1u142_20 0ECA  
                               i1u134_21 12E8                                 i1u142_21 0EC6  
                               i1u135_20 12F0                                 i1u151_20 1158  
                               i1u151_21 1154                                 i1u152_20 116A  
                               i1u152_21 1166                                 i1u138_20 0E82  
                               i1u138_21 0E7E                               reverse@tmp 0011  
                               i1u139_20 0E94                                 i1u139_21 0E90  
                               i1u167_20 003C                                 i1u167_21 0038  
                               i1u168_20 004A                                 i1u168_21 0046  
                               i2u153_40 08E0                                 i2u153_41 08DC  
                               i2u154_40 08F4                                 i2u154_41 08F0  
                               i2u170_47 0984                                 i2u155_40 0908  
                               i2u155_41 0904                                 i2u156_40 0922  
                               i2u156_41 091E                                 i2u157_40 093C  
                               i2u157_41 0938                                 i2u158_40 0956  
                               i2u158_41 0952                                 i2u159_40 0970  
                               i2u159_41 096C                                 _PIR1bits 0F9E  
                            _buffer_size 002D                                _pre_state 00FB  
                               _RCONbits 0FD0                                main@F2841 0464  
                              main@F2843 0400                                main@F2839 0300  
                            ??_GetString 0017                          OLED_PrintChar@c 0020  
           __end_of_INTTERUPT_Initialize 1366              OLED_PrintNumber@startColumn 0024  
                           ?_MyusartRead 0001                  OLED_PrintChar@endColumn 001F  
                             ?_init_time 0001                                copy_data0 1056  
                        ?_OLED_PrintChar 001D                             Get_Timer_H@h 00E6  
                           Get_Timer_M@m 00E6                                 __Hrparam 0000  
OLED_SetPageAndColumnAddress@startColumn 0010                                 __Lrparam 0000  
                          ??_update_time 0001                            I2C_Write@data 000E  
                ??_OSCILLATOR_Initialize 000D                          _UART_Initialize 131C  
                             strcat@dest 000D                          ParsingData@num1 00E4  
                        ParsingData@num2 00E6                          ParsingData@num3 00E8  
                               __ptext10 129C                                 __ptext11 0E0C  
                               __ptext20 118A                                 __ptext12 0B04  
                               __ptext21 1260                                 __ptext13 0ED0  
                               __ptext30 10E6                                 __ptext22 1382  
                               __ptext14 0F30                                 __ptext31 0A56  
                               __ptext23 138E                                 __ptext15 1094  
                               __ptext32 0994                                 __ptext24 1398  
                               __ptext16 0540                                 __ptext41 13AA  
                               __ptext33 0D3E                                 __ptext25 12F6  
                               __ptext17 0CBE                                 __ptext34 0FEE  
                               __ptext26 0BA2                                 __ptext18 042C  
                               __ptext35 1220                                 __ptext27 0C30  
                               __ptext19 0DA8                                 __ptext28 0F90  
                               __ptext37 1138                                 __ptext29 064C  
                               __ptext38 0E6E                                 __ptext39 12CA  
                    __end_of_thermometer 7D17                             GetString@str 0015  
    OLED_SetPageAndColumnAddress@endPage 000F                               strcpy@dest 000D  
              OLED_PrintNumber@endColumn 0025                            OLED_Clear@cnt 0013  
                OLED_PrintChar@startPage 0022                                 isa$xinst 0000  
                               int$flags 0030                      __end_of_update_time 13B2  
                              putch@data 000D                               _INTCONbits 0FF2  
                               itoa@sign 001B                              ??_init_time 000D  
                          ??_ClearBuffer 000D                                 intlevel1 0000  
                               intlevel2 0000                               _OLED_Clear 118A  
                           reverse@first 000D                 __end_of_OLED_PrintNumber 0D3E  
                              strcat@src 000F                           ParsingData@val 00EA  
                             _OLED_Print 0DA8                     _INTTERUPT_Initialize 1350  
                               isprint@c 0003                                strcpy@src 000F  
                          OLED_Print@cnt 001B                                strtok@sep 0018  
              OLED_PrintNumber@startPage 0029                  __end_of_UART_Initialize 133A  
                  OLED_PrintChar@endPage 001D                     OLED_Print@bitmapSize 0018  
                            _thermometer 7CF7                            ??_Get_Timer_H 0021  
                          ??_Get_Timer_M 0021                                 strcspn@c 0012  
                               strcspn@i 0015                                 strcspn@s 0011  
                    OLED_Print@endColumn 0015                              _which_heart 00F9  
                  ?_INTTERUPT_Initialize 0001                        OLED_Print@endPage 0013  
                    __end_of_ClearBuffer 1260  
